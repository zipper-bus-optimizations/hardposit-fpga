;buildInfoPackage: chisel3, version: 3.2.8, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit POSIT_Locality : 
  module PositAddCore : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip sub : UInt<1>, flip input_valid : UInt<1>, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, output_valid : UInt<1>}
    
    wire result : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[PositAdd.scala 22:20]
    node _T = gt(io.num1.exponent, io.num2.exponent) @[PositAdd.scala 25:20]
    node _T_1 = eq(io.num1.exponent, io.num2.exponent) @[PositAdd.scala 26:21]
    node _T_2 = gt(io.num1.fraction, io.num2.fraction) @[PositAdd.scala 27:22]
    node _T_3 = and(_T_1, _T_2) @[PositAdd.scala 26:39]
    node num1magGt = or(_T, _T_3) @[PositAdd.scala 25:37]
    node num2AdjSign = xor(io.num2.sign, io.sub) @[PositAdd.scala 28:31]
    node largeSign = mux(num1magGt, io.num1.sign, num2AdjSign) @[PositAdd.scala 30:22]
    node largeExp = mux(num1magGt, io.num1.exponent, io.num2.exponent) @[PositAdd.scala 31:22]
    node _T_4 = mux(num1magGt, io.num1.fraction, io.num2.fraction) @[PositAdd.scala 33:12]
    node largeFrac = cat(_T_4, UInt<3>("h00")) @[Cat.scala 30:58]
    node smallSign = mux(num1magGt, num2AdjSign, io.num1.sign) @[PositAdd.scala 35:22]
    node smallExp = mux(num1magGt, io.num2.exponent, io.num1.exponent) @[PositAdd.scala 36:22]
    node _T_5 = mux(num1magGt, io.num2.fraction, io.num1.fraction) @[PositAdd.scala 38:12]
    node smallFrac = cat(_T_5, UInt<3>("h00")) @[Cat.scala 30:58]
    node _T_6 = sub(largeExp, smallExp) @[PositAdd.scala 40:27]
    node _T_7 = tail(_T_6, 1) @[PositAdd.scala 40:27]
    node _T_8 = asSInt(_T_7) @[PositAdd.scala 40:27]
    node expDiff = asUInt(_T_8) @[PositAdd.scala 40:45]
    node _T_9 = lt(expDiff, UInt<5>("h01f")) @[PositAdd.scala 42:17]
    node _T_10 = dshr(smallFrac, expDiff) @[PositAdd.scala 42:59]
    node shiftedSmallFrac = mux(_T_9, _T_10, UInt<1>("h00")) @[PositAdd.scala 42:8]
    node _T_11 = gt(expDiff, UInt<2>("h03")) @[PositAdd.scala 44:17]
    node _T_12 = sub(expDiff, UInt<2>("h03")) @[PositAdd.scala 45:36]
    node _T_13 = tail(_T_12, 1) @[PositAdd.scala 45:36]
    node _T_14 = dshl(UInt<1>("h01"), _T_13) @[PositAdd.scala 45:24]
    node _T_15 = sub(_T_14, UInt<1>("h01")) @[PositAdd.scala 45:100]
    node _T_16 = tail(_T_15, 1) @[PositAdd.scala 45:100]
    node _T_17 = and(smallFrac, _T_16) @[PositAdd.scala 45:16]
    node _T_18 = neq(_T_17, UInt<1>("h00")) @[PositAdd.scala 45:111]
    node smallFracStickyBit = mux(_T_11, _T_18, UInt<1>("h00")) @[PositAdd.scala 44:8]
    node _T_19 = xor(largeSign, smallSign) @[PositAdd.scala 48:32]
    node isAddition = eq(_T_19, UInt<1>("h00")) @[PositAdd.scala 48:20]
    reg isAddition_n : UInt<1>, clock @[PositAdd.scala 50:29]
    isAddition_n <= isAddition @[PositAdd.scala 50:29]
    reg shiftedSmallFrac_n : UInt, clock @[PositAdd.scala 51:35]
    shiftedSmallFrac_n <= shiftedSmallFrac @[PositAdd.scala 51:35]
    reg largeFrac_n : UInt, clock @[PositAdd.scala 52:28]
    largeFrac_n <= largeFrac @[PositAdd.scala 52:28]
    reg largeExp_n : SInt, clock @[PositAdd.scala 53:27]
    largeExp_n <= largeExp @[PositAdd.scala 53:27]
    reg valid_n : UInt<1>, clock @[PositAdd.scala 54:24]
    valid_n <= io.input_valid @[PositAdd.scala 54:24]
    node _T_20 = not(shiftedSmallFrac_n) @[PositAdd.scala 57:43]
    node _T_21 = add(_T_20, UInt<1>("h01")) @[PositAdd.scala 57:63]
    node _T_22 = tail(_T_21, 1) @[PositAdd.scala 57:63]
    node signedSmallerFrac = mux(isAddition_n, shiftedSmallFrac_n, _T_22) @[PositAdd.scala 57:8]
    node _T_23 = add(largeFrac_n, signedSmallerFrac) @[PositAdd.scala 59:56]
    wire adderFrac : UInt<32>
    adderFrac <= _T_23
    node _T_24 = bits(adderFrac, 31, 31) @[PositAdd.scala 61:45]
    node sumOverflow = and(isAddition_n, _T_24) @[PositAdd.scala 61:34]
    node _T_25 = asSInt(sumOverflow) @[PositAdd.scala 63:52]
    node _T_26 = sub(largeExp_n, _T_25) @[PositAdd.scala 63:32]
    node _T_27 = tail(_T_26, 1) @[PositAdd.scala 63:32]
    node adjAdderExp = asSInt(_T_27) @[PositAdd.scala 63:32]
    node _T_28 = bits(adderFrac, 31, 1) @[PositAdd.scala 65:31]
    node _T_29 = bits(adderFrac, 30, 0) @[PositAdd.scala 65:71]
    node adjAdderFrac = mux(sumOverflow, _T_28, _T_29) @[PositAdd.scala 65:8]
    node _T_30 = bits(adderFrac, 0, 0) @[PositAdd.scala 66:45]
    node sumStickyBit = and(sumOverflow, _T_30) @[PositAdd.scala 66:34]
    node _T_31 = bits(adjAdderFrac, 0, 0) @[common.scala 19:50]
    node _T_32 = bits(adjAdderFrac, 1, 1) @[common.scala 19:50]
    node _T_33 = bits(adjAdderFrac, 2, 2) @[common.scala 19:50]
    node _T_34 = bits(adjAdderFrac, 3, 3) @[common.scala 19:50]
    node _T_35 = bits(adjAdderFrac, 4, 4) @[common.scala 19:50]
    node _T_36 = bits(adjAdderFrac, 5, 5) @[common.scala 19:50]
    node _T_37 = bits(adjAdderFrac, 6, 6) @[common.scala 19:50]
    node _T_38 = bits(adjAdderFrac, 7, 7) @[common.scala 19:50]
    node _T_39 = bits(adjAdderFrac, 8, 8) @[common.scala 19:50]
    node _T_40 = bits(adjAdderFrac, 9, 9) @[common.scala 19:50]
    node _T_41 = bits(adjAdderFrac, 10, 10) @[common.scala 19:50]
    node _T_42 = bits(adjAdderFrac, 11, 11) @[common.scala 19:50]
    node _T_43 = bits(adjAdderFrac, 12, 12) @[common.scala 19:50]
    node _T_44 = bits(adjAdderFrac, 13, 13) @[common.scala 19:50]
    node _T_45 = bits(adjAdderFrac, 14, 14) @[common.scala 19:50]
    node _T_46 = bits(adjAdderFrac, 15, 15) @[common.scala 19:50]
    node _T_47 = bits(adjAdderFrac, 16, 16) @[common.scala 19:50]
    node _T_48 = bits(adjAdderFrac, 17, 17) @[common.scala 19:50]
    node _T_49 = bits(adjAdderFrac, 18, 18) @[common.scala 19:50]
    node _T_50 = bits(adjAdderFrac, 19, 19) @[common.scala 19:50]
    node _T_51 = bits(adjAdderFrac, 20, 20) @[common.scala 19:50]
    node _T_52 = bits(adjAdderFrac, 21, 21) @[common.scala 19:50]
    node _T_53 = bits(adjAdderFrac, 22, 22) @[common.scala 19:50]
    node _T_54 = bits(adjAdderFrac, 23, 23) @[common.scala 19:50]
    node _T_55 = bits(adjAdderFrac, 24, 24) @[common.scala 19:50]
    node _T_56 = bits(adjAdderFrac, 25, 25) @[common.scala 19:50]
    node _T_57 = bits(adjAdderFrac, 26, 26) @[common.scala 19:50]
    node _T_58 = bits(adjAdderFrac, 27, 27) @[common.scala 19:50]
    node _T_59 = bits(adjAdderFrac, 28, 28) @[common.scala 19:50]
    node _T_60 = bits(adjAdderFrac, 29, 29) @[common.scala 19:50]
    node _T_61 = bits(adjAdderFrac, 30, 30) @[common.scala 19:50]
    node _T_62 = mux(_T_32, UInt<5>("h01d"), UInt<5>("h01e")) @[Mux.scala 47:69]
    node _T_63 = mux(_T_33, UInt<5>("h01c"), _T_62) @[Mux.scala 47:69]
    node _T_64 = mux(_T_34, UInt<5>("h01b"), _T_63) @[Mux.scala 47:69]
    node _T_65 = mux(_T_35, UInt<5>("h01a"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_36, UInt<5>("h019"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_37, UInt<5>("h018"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_38, UInt<5>("h017"), _T_67) @[Mux.scala 47:69]
    node _T_69 = mux(_T_39, UInt<5>("h016"), _T_68) @[Mux.scala 47:69]
    node _T_70 = mux(_T_40, UInt<5>("h015"), _T_69) @[Mux.scala 47:69]
    node _T_71 = mux(_T_41, UInt<5>("h014"), _T_70) @[Mux.scala 47:69]
    node _T_72 = mux(_T_42, UInt<5>("h013"), _T_71) @[Mux.scala 47:69]
    node _T_73 = mux(_T_43, UInt<5>("h012"), _T_72) @[Mux.scala 47:69]
    node _T_74 = mux(_T_44, UInt<5>("h011"), _T_73) @[Mux.scala 47:69]
    node _T_75 = mux(_T_45, UInt<5>("h010"), _T_74) @[Mux.scala 47:69]
    node _T_76 = mux(_T_46, UInt<4>("h0f"), _T_75) @[Mux.scala 47:69]
    node _T_77 = mux(_T_47, UInt<4>("h0e"), _T_76) @[Mux.scala 47:69]
    node _T_78 = mux(_T_48, UInt<4>("h0d"), _T_77) @[Mux.scala 47:69]
    node _T_79 = mux(_T_49, UInt<4>("h0c"), _T_78) @[Mux.scala 47:69]
    node _T_80 = mux(_T_50, UInt<4>("h0b"), _T_79) @[Mux.scala 47:69]
    node _T_81 = mux(_T_51, UInt<4>("h0a"), _T_80) @[Mux.scala 47:69]
    node _T_82 = mux(_T_52, UInt<4>("h09"), _T_81) @[Mux.scala 47:69]
    node _T_83 = mux(_T_53, UInt<4>("h08"), _T_82) @[Mux.scala 47:69]
    node _T_84 = mux(_T_54, UInt<3>("h07"), _T_83) @[Mux.scala 47:69]
    node _T_85 = mux(_T_55, UInt<3>("h06"), _T_84) @[Mux.scala 47:69]
    node _T_86 = mux(_T_56, UInt<3>("h05"), _T_85) @[Mux.scala 47:69]
    node _T_87 = mux(_T_57, UInt<3>("h04"), _T_86) @[Mux.scala 47:69]
    node _T_88 = mux(_T_58, UInt<2>("h03"), _T_87) @[Mux.scala 47:69]
    node _T_89 = mux(_T_59, UInt<2>("h02"), _T_88) @[Mux.scala 47:69]
    node _T_90 = mux(_T_60, UInt<1>("h01"), _T_89) @[Mux.scala 47:69]
    node normalizationFactor = mux(_T_61, UInt<1>("h00"), _T_90) @[Mux.scala 47:69]
    node _T_91 = asSInt(normalizationFactor) @[PositAdd.scala 70:62]
    node _T_92 = sub(adjAdderExp, _T_91) @[PositAdd.scala 70:34]
    node _T_93 = tail(_T_92, 1) @[PositAdd.scala 70:34]
    node normExponent = asSInt(_T_93) @[PositAdd.scala 70:34]
    node normFraction = dshl(adjAdderFrac, normalizationFactor) @[PositAdd.scala 71:35]
    node _T_94 = or(io.num1.isNaR, io.num2.isNaR) @[PositAdd.scala 73:33]
    result.isNaR <= _T_94 @[PositAdd.scala 73:19]
    node _T_95 = and(io.num1.isZero, io.num2.isZero) @[PositAdd.scala 74:35]
    node _T_96 = eq(adderFrac, UInt<1>("h00")) @[PositAdd.scala 74:64]
    node _T_97 = or(_T_95, _T_96) @[PositAdd.scala 74:51]
    result.isZero <= _T_97 @[PositAdd.scala 74:19]
    result.sign <= largeSign @[PositAdd.scala 75:19]
    result.exponent <= normExponent @[PositAdd.scala 76:19]
    node _T_98 = bits(normFraction, 30, 3) @[PositAdd.scala 77:34]
    result.fraction <= _T_98 @[PositAdd.scala 77:19]
    node _T_99 = bits(normFraction, 2, 1) @[PositAdd.scala 79:34]
    io.trailingBits <= _T_99 @[PositAdd.scala 79:19]
    node _T_100 = bits(normFraction, 0, 0) @[PositAdd.scala 80:49]
    node _T_101 = neq(_T_100, UInt<1>("h00")) @[PositAdd.scala 80:76]
    node _T_102 = or(sumStickyBit, _T_101) @[PositAdd.scala 80:35]
    io.stickyBit <= _T_102 @[PositAdd.scala 80:19]
    io.out.isNaR <= result.isNaR @[PositAdd.scala 82:10]
    io.out.isZero <= result.isZero @[PositAdd.scala 82:10]
    io.out.fraction <= result.fraction @[PositAdd.scala 82:10]
    io.out.exponent <= result.exponent @[PositAdd.scala 82:10]
    io.out.sign <= result.sign @[PositAdd.scala 82:10]
    io.output_valid <= valid_n @[PositAdd.scala 83:19]
    
  module PositCompare : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : SInt<32>, flip num2 : SInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, flip validIn : UInt<1>, validOut : UInt<1>}
    
    io.validOut <= io.validIn @[PositCompare.scala 15:15]
    node _T = lt(io.num1, io.num2) @[PositCompare.scala 16:21]
    io.lt <= _T @[PositCompare.scala 16:9]
    node _T_1 = eq(io.num1, io.num2) @[PositCompare.scala 17:21]
    io.eq <= _T_1 @[PositCompare.scala 17:9]
    node _T_2 = eq(io.lt, UInt<1>("h00")) @[PositCompare.scala 18:13]
    node _T_3 = eq(io.eq, UInt<1>("h00")) @[PositCompare.scala 18:23]
    node _T_4 = and(_T_2, _T_3) @[PositCompare.scala 18:20]
    io.gt <= _T_4 @[PositCompare.scala 18:9]
    
  module PositFMACore : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num3 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip sub : UInt<1>, flip negate : UInt<1>, flip input_valid : UInt<1>, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, output_valid : UInt<1>}
    
    node productExponent = add(io.num1.exponent, io.num2.exponent) @[PositFMA.scala 25:39]
    node _T = mul(io.num1.fraction, io.num2.fraction) @[PositFMA.scala 27:63]
    wire productFraction : UInt<56>
    productFraction <= _T
    node prodOverflow = bits(productFraction, 55, 55) @[PositFMA.scala 29:44]
    node _T_1 = bits(productFraction, 55, 1) @[PositFMA.scala 31:38]
    node _T_2 = bits(productFraction, 54, 0) @[PositFMA.scala 31:89]
    node normProductFraction = mux(prodOverflow, _T_1, _T_2) @[PositFMA.scala 31:8]
    node _T_3 = cat(UInt<1>("h00"), prodOverflow) @[Cat.scala 30:58]
    node _T_4 = asSInt(_T_3) @[PositFMA.scala 32:76]
    node _T_5 = add(productExponent, _T_4) @[PositFMA.scala 32:45]
    node _T_6 = tail(_T_5, 1) @[PositFMA.scala 32:45]
    node normProductExponent = asSInt(_T_6) @[PositFMA.scala 32:45]
    node _T_7 = bits(productFraction, 0, 0) @[PositFMA.scala 33:59]
    node prodStickyBit = and(prodOverflow, _T_7) @[PositFMA.scala 33:42]
    node _T_8 = cat(io.num3.fraction, UInt<27>("h00")) @[Cat.scala 30:58]
    node addendFraction = mux(io.num3.isZero, UInt<1>("h00"), _T_8) @[PositFMA.scala 36:27]
    node _T_9 = xor(io.num1.sign, io.num2.sign) @[PositFMA.scala 39:39]
    node _T_10 = xor(_T_9, io.negate) @[PositFMA.scala 39:51]
    reg productSign : UInt<1>, clock @[PositFMA.scala 39:28]
    productSign <= _T_10 @[PositFMA.scala 39:28]
    node _T_11 = xor(io.num3.sign, io.negate) @[PositFMA.scala 40:39]
    node _T_12 = xor(_T_11, io.sub) @[PositFMA.scala 40:51]
    reg addendSign : UInt<1>, clock @[PositFMA.scala 40:28]
    addendSign <= _T_12 @[PositFMA.scala 40:28]
    reg addendExponent_n : SInt, clock @[PositFMA.scala 41:33]
    addendExponent_n <= io.num3.exponent @[PositFMA.scala 41:33]
    reg normProductExponent_n : SInt, clock @[PositFMA.scala 42:38]
    normProductExponent_n <= normProductExponent @[PositFMA.scala 42:38]
    reg addendFraction_n : UInt, clock @[PositFMA.scala 43:33]
    addendFraction_n <= addendFraction @[PositFMA.scala 43:33]
    reg normProductFraction_n : UInt, clock @[PositFMA.scala 44:38]
    normProductFraction_n <= normProductFraction @[PositFMA.scala 44:38]
    node _T_13 = not(io.num3.isZero) @[PositFMA.scala 46:13]
    node _T_14 = gt(io.num3.exponent, normProductExponent) @[PositFMA.scala 47:24]
    node _T_15 = eq(io.num3.exponent, normProductExponent) @[PositFMA.scala 48:25]
    node _T_16 = gt(addendFraction, normProductFraction) @[PositFMA.scala 48:68]
    node _T_17 = and(_T_15, _T_16) @[PositFMA.scala 48:49]
    node _T_18 = or(_T_14, _T_17) @[PositFMA.scala 47:47]
    node _T_19 = and(_T_13, _T_18) @[PositFMA.scala 46:27]
    reg isAddendGtProduct : UInt<1>, clock @[PositFMA.scala 46:12]
    isAddendGtProduct <= _T_19 @[PositFMA.scala 46:12]
    node gExp = mux(isAddendGtProduct, addendExponent_n, normProductExponent_n) @[PositFMA.scala 50:18]
    node gFrac = mux(isAddendGtProduct, addendFraction_n, normProductFraction_n) @[PositFMA.scala 51:18]
    node gSign = mux(isAddendGtProduct, addendSign, productSign) @[PositFMA.scala 52:18]
    node lExp = mux(isAddendGtProduct, normProductExponent_n, addendExponent_n) @[PositFMA.scala 54:18]
    node lFrac = mux(isAddendGtProduct, normProductFraction_n, addendFraction_n) @[PositFMA.scala 55:18]
    node lSign = mux(isAddendGtProduct, productSign, addendSign) @[PositFMA.scala 56:18]
    node _T_20 = sub(gExp, lExp) @[PositFMA.scala 58:23]
    node _T_21 = tail(_T_20, 1) @[PositFMA.scala 58:23]
    node _T_22 = asSInt(_T_21) @[PositFMA.scala 58:23]
    node expDiff = asUInt(_T_22) @[PositFMA.scala 58:37]
    node shftInBound = lt(expDiff, UInt<6>("h037")) @[PositFMA.scala 59:29]
    node _T_23 = dshr(lFrac, expDiff) @[PositFMA.scala 61:28]
    node shiftedLFrac = mux(shftInBound, _T_23, UInt<56>("h00")) @[PositFMA.scala 61:8]
    node _T_24 = dshl(UInt<1>("h01"), expDiff) @[OneHot.scala 58:35]
    node _T_25 = sub(_T_24, UInt<1>("h01")) @[common.scala 23:44]
    node _T_26 = tail(_T_25, 1) @[common.scala 23:44]
    node lfracStickyMask = bits(_T_26, 55, 0) @[PositFMA.scala 63:26]
    node _T_27 = and(lFrac, lfracStickyMask) @[PositFMA.scala 64:31]
    node lFracStickyBit = neq(_T_27, UInt<1>("h00")) @[PositFMA.scala 64:53]
    node _T_28 = xor(gSign, lSign) @[PositFMA.scala 66:28]
    node isAddition = not(_T_28) @[PositFMA.scala 66:20]
    node _T_29 = not(shiftedLFrac) @[PositFMA.scala 68:35]
    node _T_30 = add(_T_29, UInt<1>("h01")) @[PositFMA.scala 68:49]
    node _T_31 = tail(_T_30, 1) @[PositFMA.scala 68:49]
    node signedLFrac = mux(isAddition, shiftedLFrac, _T_31) @[PositFMA.scala 68:8]
    node _T_32 = add(gFrac, signedLFrac) @[PositFMA.scala 70:55]
    wire fmaFraction : UInt<56>
    fmaFraction <= _T_32
    node _T_33 = bits(fmaFraction, 55, 55) @[PositFMA.scala 72:45]
    node fmaOverflow = and(isAddition, _T_33) @[PositFMA.scala 72:32]
    node _T_34 = bits(fmaFraction, 54, 0) @[PositFMA.scala 74:50]
    node _T_35 = cat(_T_34, UInt<1>("h00")) @[Cat.scala 30:58]
    node adjFmaFraction = mux(fmaOverflow, fmaFraction, _T_35) @[PositFMA.scala 74:8]
    node _T_36 = cat(UInt<1>("h00"), fmaOverflow) @[Cat.scala 30:58]
    node _T_37 = asSInt(_T_36) @[PositFMA.scala 75:59]
    node _T_38 = add(gExp, _T_37) @[PositFMA.scala 75:29]
    node _T_39 = tail(_T_38, 1) @[PositFMA.scala 75:29]
    node adjFmaExponent = asSInt(_T_39) @[PositFMA.scala 75:29]
    node _T_40 = bits(adjFmaFraction, 0, 0) @[common.scala 19:50]
    node _T_41 = bits(adjFmaFraction, 1, 1) @[common.scala 19:50]
    node _T_42 = bits(adjFmaFraction, 2, 2) @[common.scala 19:50]
    node _T_43 = bits(adjFmaFraction, 3, 3) @[common.scala 19:50]
    node _T_44 = bits(adjFmaFraction, 4, 4) @[common.scala 19:50]
    node _T_45 = bits(adjFmaFraction, 5, 5) @[common.scala 19:50]
    node _T_46 = bits(adjFmaFraction, 6, 6) @[common.scala 19:50]
    node _T_47 = bits(adjFmaFraction, 7, 7) @[common.scala 19:50]
    node _T_48 = bits(adjFmaFraction, 8, 8) @[common.scala 19:50]
    node _T_49 = bits(adjFmaFraction, 9, 9) @[common.scala 19:50]
    node _T_50 = bits(adjFmaFraction, 10, 10) @[common.scala 19:50]
    node _T_51 = bits(adjFmaFraction, 11, 11) @[common.scala 19:50]
    node _T_52 = bits(adjFmaFraction, 12, 12) @[common.scala 19:50]
    node _T_53 = bits(adjFmaFraction, 13, 13) @[common.scala 19:50]
    node _T_54 = bits(adjFmaFraction, 14, 14) @[common.scala 19:50]
    node _T_55 = bits(adjFmaFraction, 15, 15) @[common.scala 19:50]
    node _T_56 = bits(adjFmaFraction, 16, 16) @[common.scala 19:50]
    node _T_57 = bits(adjFmaFraction, 17, 17) @[common.scala 19:50]
    node _T_58 = bits(adjFmaFraction, 18, 18) @[common.scala 19:50]
    node _T_59 = bits(adjFmaFraction, 19, 19) @[common.scala 19:50]
    node _T_60 = bits(adjFmaFraction, 20, 20) @[common.scala 19:50]
    node _T_61 = bits(adjFmaFraction, 21, 21) @[common.scala 19:50]
    node _T_62 = bits(adjFmaFraction, 22, 22) @[common.scala 19:50]
    node _T_63 = bits(adjFmaFraction, 23, 23) @[common.scala 19:50]
    node _T_64 = bits(adjFmaFraction, 24, 24) @[common.scala 19:50]
    node _T_65 = bits(adjFmaFraction, 25, 25) @[common.scala 19:50]
    node _T_66 = bits(adjFmaFraction, 26, 26) @[common.scala 19:50]
    node _T_67 = bits(adjFmaFraction, 27, 27) @[common.scala 19:50]
    node _T_68 = bits(adjFmaFraction, 28, 28) @[common.scala 19:50]
    node _T_69 = bits(adjFmaFraction, 29, 29) @[common.scala 19:50]
    node _T_70 = bits(adjFmaFraction, 30, 30) @[common.scala 19:50]
    node _T_71 = bits(adjFmaFraction, 31, 31) @[common.scala 19:50]
    node _T_72 = bits(adjFmaFraction, 32, 32) @[common.scala 19:50]
    node _T_73 = bits(adjFmaFraction, 33, 33) @[common.scala 19:50]
    node _T_74 = bits(adjFmaFraction, 34, 34) @[common.scala 19:50]
    node _T_75 = bits(adjFmaFraction, 35, 35) @[common.scala 19:50]
    node _T_76 = bits(adjFmaFraction, 36, 36) @[common.scala 19:50]
    node _T_77 = bits(adjFmaFraction, 37, 37) @[common.scala 19:50]
    node _T_78 = bits(adjFmaFraction, 38, 38) @[common.scala 19:50]
    node _T_79 = bits(adjFmaFraction, 39, 39) @[common.scala 19:50]
    node _T_80 = bits(adjFmaFraction, 40, 40) @[common.scala 19:50]
    node _T_81 = bits(adjFmaFraction, 41, 41) @[common.scala 19:50]
    node _T_82 = bits(adjFmaFraction, 42, 42) @[common.scala 19:50]
    node _T_83 = bits(adjFmaFraction, 43, 43) @[common.scala 19:50]
    node _T_84 = bits(adjFmaFraction, 44, 44) @[common.scala 19:50]
    node _T_85 = bits(adjFmaFraction, 45, 45) @[common.scala 19:50]
    node _T_86 = bits(adjFmaFraction, 46, 46) @[common.scala 19:50]
    node _T_87 = bits(adjFmaFraction, 47, 47) @[common.scala 19:50]
    node _T_88 = bits(adjFmaFraction, 48, 48) @[common.scala 19:50]
    node _T_89 = bits(adjFmaFraction, 49, 49) @[common.scala 19:50]
    node _T_90 = bits(adjFmaFraction, 50, 50) @[common.scala 19:50]
    node _T_91 = bits(adjFmaFraction, 51, 51) @[common.scala 19:50]
    node _T_92 = bits(adjFmaFraction, 52, 52) @[common.scala 19:50]
    node _T_93 = bits(adjFmaFraction, 53, 53) @[common.scala 19:50]
    node _T_94 = bits(adjFmaFraction, 54, 54) @[common.scala 19:50]
    node _T_95 = bits(adjFmaFraction, 55, 55) @[common.scala 19:50]
    node _T_96 = mux(_T_41, UInt<6>("h036"), UInt<6>("h037")) @[Mux.scala 47:69]
    node _T_97 = mux(_T_42, UInt<6>("h035"), _T_96) @[Mux.scala 47:69]
    node _T_98 = mux(_T_43, UInt<6>("h034"), _T_97) @[Mux.scala 47:69]
    node _T_99 = mux(_T_44, UInt<6>("h033"), _T_98) @[Mux.scala 47:69]
    node _T_100 = mux(_T_45, UInt<6>("h032"), _T_99) @[Mux.scala 47:69]
    node _T_101 = mux(_T_46, UInt<6>("h031"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_47, UInt<6>("h030"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_48, UInt<6>("h02f"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_49, UInt<6>("h02e"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_50, UInt<6>("h02d"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_51, UInt<6>("h02c"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_52, UInt<6>("h02b"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_53, UInt<6>("h02a"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_54, UInt<6>("h029"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_55, UInt<6>("h028"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_56, UInt<6>("h027"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_57, UInt<6>("h026"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_58, UInt<6>("h025"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_59, UInt<6>("h024"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_60, UInt<6>("h023"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_61, UInt<6>("h022"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_62, UInt<6>("h021"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_63, UInt<6>("h020"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_64, UInt<5>("h01f"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_65, UInt<5>("h01e"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_66, UInt<5>("h01d"), _T_120) @[Mux.scala 47:69]
    node _T_122 = mux(_T_67, UInt<5>("h01c"), _T_121) @[Mux.scala 47:69]
    node _T_123 = mux(_T_68, UInt<5>("h01b"), _T_122) @[Mux.scala 47:69]
    node _T_124 = mux(_T_69, UInt<5>("h01a"), _T_123) @[Mux.scala 47:69]
    node _T_125 = mux(_T_70, UInt<5>("h019"), _T_124) @[Mux.scala 47:69]
    node _T_126 = mux(_T_71, UInt<5>("h018"), _T_125) @[Mux.scala 47:69]
    node _T_127 = mux(_T_72, UInt<5>("h017"), _T_126) @[Mux.scala 47:69]
    node _T_128 = mux(_T_73, UInt<5>("h016"), _T_127) @[Mux.scala 47:69]
    node _T_129 = mux(_T_74, UInt<5>("h015"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_75, UInt<5>("h014"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_76, UInt<5>("h013"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_77, UInt<5>("h012"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_78, UInt<5>("h011"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_79, UInt<5>("h010"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_80, UInt<4>("h0f"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_81, UInt<4>("h0e"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_82, UInt<4>("h0d"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_83, UInt<4>("h0c"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_84, UInt<4>("h0b"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_85, UInt<4>("h0a"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_86, UInt<4>("h09"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_87, UInt<4>("h08"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_88, UInt<3>("h07"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_89, UInt<3>("h06"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_90, UInt<3>("h05"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_91, UInt<3>("h04"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_92, UInt<2>("h03"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_93, UInt<2>("h02"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_94, UInt<1>("h01"), _T_148) @[Mux.scala 47:69]
    node normalizationFactor = mux(_T_95, UInt<1>("h00"), _T_149) @[Mux.scala 47:69]
    node _T_150 = asSInt(normalizationFactor) @[PositFMA.scala 78:69]
    node normFmaExponent = sub(adjFmaExponent, _T_150) @[PositFMA.scala 78:40]
    node _T_151 = dshl(adjFmaFraction, normalizationFactor) @[PositFMA.scala 79:41]
    node normFmaFraction = bits(_T_151, 55, 0) @[PositFMA.scala 79:64]
    wire result : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[PositFMA.scala 81:20]
    node _T_152 = or(io.num1.isNaR, io.num2.isNaR) @[PositFMA.scala 83:41]
    node _T_153 = or(_T_152, io.num3.isNaR) @[PositFMA.scala 83:54]
    reg result_isNaR : UInt<1>, clock @[PositFMA.scala 83:29]
    result_isNaR <= _T_153 @[PositFMA.scala 83:29]
    node _T_154 = or(io.num1.isZero, io.num2.isZero) @[PositFMA.scala 84:56]
    node _T_155 = and(_T_154, io.num3.isZero) @[PositFMA.scala 84:71]
    reg result_isZero_second_half : UInt<1>, clock @[PositFMA.scala 84:42]
    result_isZero_second_half <= _T_155 @[PositFMA.scala 84:42]
    reg intermediate_valid : UInt<1>, clock @[PositFMA.scala 85:35]
    intermediate_valid <= io.input_valid @[PositFMA.scala 85:35]
    result.isNaR <= result_isNaR @[PositFMA.scala 86:19]
    node _T_156 = eq(result.isNaR, UInt<1>("h00")) @[PositFMA.scala 87:22]
    node _T_157 = and(_T_156, result_isZero_second_half) @[PositFMA.scala 87:36]
    result.isZero <= _T_157 @[PositFMA.scala 87:19]
    result.sign <= gSign @[PositFMA.scala 88:19]
    result.exponent <= normFmaExponent @[PositFMA.scala 89:19]
    node _T_158 = bits(normFmaFraction, 55, 28) @[PositFMA.scala 90:37]
    result.fraction <= _T_158 @[PositFMA.scala 90:19]
    node _T_159 = bits(normFmaFraction, 27, 26) @[PositFMA.scala 92:37]
    io.trailingBits <= _T_159 @[PositFMA.scala 92:19]
    node _T_160 = or(prodStickyBit, lFracStickyBit) @[PositFMA.scala 93:36]
    node _T_161 = bits(normFmaFraction, 25, 0) @[PositFMA.scala 93:70]
    node _T_162 = neq(_T_161, UInt<1>("h00")) @[PositFMA.scala 93:130]
    node _T_163 = or(_T_160, _T_162) @[PositFMA.scala 93:53]
    io.stickyBit <= _T_163 @[PositFMA.scala 93:19]
    io.out.isNaR <= result.isNaR @[PositFMA.scala 95:10]
    io.out.isZero <= result.isZero @[PositFMA.scala 95:10]
    io.out.fraction <= result.fraction @[PositFMA.scala 95:10]
    io.out.exponent <= result.exponent @[PositFMA.scala 95:10]
    io.out.sign <= result.sign @[PositFMA.scala 95:10]
    io.output_valid <= intermediate_valid @[PositFMA.scala 96:19]
    
  module PositDivSqrtCore : 
    input clock : Clock
    input reset : Reset
    output io : {flip validIn : UInt<1>, readyIn : UInt<1>, flip sqrtOp : UInt<1>, flip num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, validOut_div : UInt<1>, validOut_sqrt : UInt<1>, exceptions : UInt<5>, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    reg cycleCount : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[PositDivSqrt.scala 27:27]
    reg sqrtOp_stored : UInt<1>, clock @[PositDivSqrt.scala 29:26]
    reg isNaR_out : UInt<1>, clock @[PositDivSqrt.scala 30:26]
    reg isZero_out : UInt<1>, clock @[PositDivSqrt.scala 31:26]
    reg exec_out : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[PositDivSqrt.scala 32:30]
    reg sign_out : UInt<1>, clock @[PositDivSqrt.scala 33:26]
    reg divSqrtExp : SInt<9>, clock with : (reset => (reset, asSInt(UInt<9>("h00")))) @[PositDivSqrt.scala 34:30]
    reg divSqrtFrac : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[PositDivSqrt.scala 35:30]
    wire frac_out : UInt<32>
    frac_out <= UInt<32>("h00")
    wire exp_out : SInt<9>
    exp_out <= asSInt(UInt<9>("h00"))
    wire _T : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[PositDivSqrt.scala 39:38]
    _T.isNaR <= UInt<1>("h00") @[PositDivSqrt.scala 39:38]
    _T.isZero <= UInt<1>("h00") @[PositDivSqrt.scala 39:38]
    _T.fraction <= UInt<28>("h00") @[PositDivSqrt.scala 39:38]
    node _T_1 = asSInt(UInt<9>("h00")) @[PositDivSqrt.scala 39:38]
    _T.exponent <= _T_1 @[PositDivSqrt.scala 39:38]
    _T.sign <= UInt<1>("h00") @[PositDivSqrt.scala 39:38]
    wire result : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}
    result.isNaR <= _T.isNaR
    result.isZero <= _T.isZero
    result.fraction <= _T.fraction
    result.exponent <= _T.exponent
    result.sign <= _T.sign
    reg remLo : UInt<29>, clock with : (reset => (reset, UInt<29>("h00"))) @[PositDivSqrt.scala 40:24]
    reg remHi : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[PositDivSqrt.scala 41:24]
    reg divisor : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[PositDivSqrt.scala 42:24]
    node _T_2 = eq(io.sqrtOp, UInt<1>("h00")) @[PositDivSqrt.scala 44:21]
    node divZ = and(_T_2, io.num2.isZero) @[PositDivSqrt.scala 44:32]
    node _T_3 = or(io.num1.sign, io.num1.isNaR) @[PositDivSqrt.scala 45:46]
    node _T_4 = or(io.num1.isNaR, io.num2.isNaR) @[PositDivSqrt.scala 45:71]
    node _T_5 = or(_T_4, divZ) @[PositDivSqrt.scala 45:84]
    node isNaR = mux(io.sqrtOp, _T_3, _T_5) @[PositDivSqrt.scala 45:24]
    node specialCase = or(isNaR, io.num1.isZero) @[PositDivSqrt.scala 47:27]
    node _T_6 = sub(io.num1.exponent, io.num2.exponent) @[PositDivSqrt.scala 48:35]
    node _T_7 = tail(_T_6, 1) @[PositDivSqrt.scala 48:35]
    node expDiff = asSInt(_T_7) @[PositDivSqrt.scala 48:35]
    node idle = eq(cycleCount, UInt<1>("h00")) @[PositDivSqrt.scala 50:28]
    node readyIn = leq(cycleCount, UInt<1>("h01")) @[PositDivSqrt.scala 51:28]
    node starting = and(readyIn, io.validIn) @[PositDivSqrt.scala 53:34]
    node _T_8 = eq(specialCase, UInt<1>("h00")) @[PositDivSqrt.scala 54:38]
    node started_normally = and(starting, _T_8) @[PositDivSqrt.scala 54:35]
    node _T_9 = bits(io.num1.exponent, 0, 0) @[PositDivSqrt.scala 56:48]
    node _T_10 = bits(_T_9, 0, 0) @[PositDivSqrt.scala 56:58]
    node _T_11 = and(io.sqrtOp, _T_10) @[PositDivSqrt.scala 56:32]
    node _T_12 = shl(io.num1.fraction, 1) @[PositDivSqrt.scala 56:76]
    node radicand = mux(_T_11, _T_12, io.num1.fraction) @[PositDivSqrt.scala 56:21]
    node _T_13 = eq(idle, UInt<1>("h00")) @[PositDivSqrt.scala 58:8]
    node _T_14 = or(_T_13, io.validIn) @[PositDivSqrt.scala 58:14]
    when _T_14 : @[PositDivSqrt.scala 58:28]
      node _T_15 = and(starting, specialCase) @[PositDivSqrt.scala 59:32]
      node _T_16 = mux(_T_15, UInt<2>("h02"), UInt<1>("h00")) @[PositDivSqrt.scala 59:22]
      node _T_17 = mux(started_normally, UInt<6>("h020"), UInt<1>("h00")) @[PositDivSqrt.scala 60:22]
      node _T_18 = or(_T_16, _T_17) @[PositDivSqrt.scala 59:58]
      node _T_19 = eq(idle, UInt<1>("h00")) @[PositDivSqrt.scala 61:23]
      node _T_20 = sub(cycleCount, UInt<1>("h01")) @[PositDivSqrt.scala 61:41]
      node _T_21 = tail(_T_20, 1) @[PositDivSqrt.scala 61:41]
      node _T_22 = mux(_T_19, _T_21, UInt<1>("h00")) @[PositDivSqrt.scala 61:22]
      node _T_23 = or(_T_18, _T_22) @[PositDivSqrt.scala 60:72]
      cycleCount <= _T_23 @[PositDivSqrt.scala 59:16]
      skip @[PositDivSqrt.scala 58:28]
    io.readyIn <= readyIn @[PositDivSqrt.scala 64:14]
    when starting : @[PositDivSqrt.scala 66:18]
      sqrtOp_stored <= io.sqrtOp @[PositDivSqrt.scala 67:20]
      isNaR_out <= isNaR @[PositDivSqrt.scala 68:20]
      isZero_out <= io.num1.isZero @[PositDivSqrt.scala 69:20]
      node _T_24 = mux(divZ, UInt<4>("h08"), UInt<1>("h00")) @[PositDivSqrt.scala 70:26]
      exec_out <= _T_24 @[PositDivSqrt.scala 70:20]
      skip @[PositDivSqrt.scala 66:18]
    when started_normally : @[PositDivSqrt.scala 73:26]
      node _T_25 = xor(io.num1.sign, io.num2.sign) @[PositDivSqrt.scala 74:53]
      node _T_26 = mux(io.sqrtOp, UInt<1>("h00"), _T_25) @[PositDivSqrt.scala 74:22]
      sign_out <= _T_26 @[PositDivSqrt.scala 74:16]
      node _T_27 = shr(io.num1.exponent, 1) @[PositDivSqrt.scala 75:48]
      node _T_28 = mux(io.sqrtOp, _T_27, expDiff) @[PositDivSqrt.scala 75:22]
      divSqrtExp <= _T_28 @[PositDivSqrt.scala 75:16]
      skip @[PositDivSqrt.scala 73:26]
    node _T_29 = not(io.sqrtOp) @[PositDivSqrt.scala 78:27]
    node _T_30 = and(started_normally, _T_29) @[PositDivSqrt.scala 78:25]
    when _T_30 : @[PositDivSqrt.scala 78:39]
      divisor <= io.num2.fraction @[PositDivSqrt.scala 79:13]
      skip @[PositDivSqrt.scala 78:39]
    node _T_31 = and(readyIn, io.sqrtOp) @[PositDivSqrt.scala 82:24]
    node _T_32 = shl(radicand, 2) @[PositDivSqrt.scala 82:47]
    node _T_33 = mux(_T_31, _T_32, UInt<1>("h00")) @[PositDivSqrt.scala 82:15]
    node _T_34 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 83:16]
    node _T_35 = and(_T_34, sqrtOp_stored) @[PositDivSqrt.scala 83:25]
    node _T_36 = shl(remLo, 2) @[PositDivSqrt.scala 83:49]
    node _T_37 = mux(_T_35, _T_36, UInt<1>("h00")) @[PositDivSqrt.scala 83:15]
    node _T_38 = or(_T_33, _T_37) @[PositDivSqrt.scala 82:58]
    remLo <= _T_38 @[PositDivSqrt.scala 82:9]
    node _T_39 = and(readyIn, io.sqrtOp) @[PositDivSqrt.scala 85:25]
    node _T_40 = bits(radicand, 28, 27) @[PositDivSqrt.scala 85:47]
    node _T_41 = mux(_T_39, _T_40, UInt<1>("h00")) @[PositDivSqrt.scala 85:16]
    node _T_42 = eq(io.sqrtOp, UInt<1>("h00")) @[PositDivSqrt.scala 86:20]
    node _T_43 = and(readyIn, _T_42) @[PositDivSqrt.scala 86:17]
    node _T_44 = mux(_T_43, radicand, UInt<1>("h00")) @[PositDivSqrt.scala 86:8]
    node _T_45 = or(_T_41, _T_44) @[PositDivSqrt.scala 85:118]
    node _T_46 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 87:9]
    node _T_47 = and(_T_46, sqrtOp_stored) @[PositDivSqrt.scala 87:18]
    node _T_48 = dshl(remHi, UInt<2>("h02")) @[PositDivSqrt.scala 87:42]
    node _T_49 = dshr(remLo, UInt<5>("h01b")) @[PositDivSqrt.scala 87:57]
    node _T_50 = or(_T_48, _T_49) @[PositDivSqrt.scala 87:49]
    node _T_51 = mux(_T_47, _T_50, UInt<1>("h00")) @[PositDivSqrt.scala 87:8]
    node _T_52 = or(_T_45, _T_51) @[PositDivSqrt.scala 86:56]
    node _T_53 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 88:9]
    node _T_54 = eq(sqrtOp_stored, UInt<1>("h00")) @[PositDivSqrt.scala 88:21]
    node _T_55 = and(_T_53, _T_54) @[PositDivSqrt.scala 88:18]
    node _T_56 = dshl(remHi, UInt<1>("h01")) @[PositDivSqrt.scala 88:43]
    node _T_57 = mux(_T_55, _T_56, UInt<1>("h00")) @[PositDivSqrt.scala 88:8]
    node rem = or(_T_52, _T_57) @[PositDivSqrt.scala 87:84]
    node _T_58 = and(readyIn, io.sqrtOp) @[PositDivSqrt.scala 92:17]
    node _T_59 = mux(_T_58, UInt<1>("h01"), UInt<1>("h00")) @[PositDivSqrt.scala 92:8]
    node _T_60 = eq(io.sqrtOp, UInt<1>("h00")) @[PositDivSqrt.scala 93:20]
    node _T_61 = and(readyIn, _T_60) @[PositDivSqrt.scala 93:17]
    node _T_62 = mux(_T_61, io.num2.fraction, UInt<1>("h00")) @[PositDivSqrt.scala 93:8]
    node _T_63 = or(_T_59, _T_62) @[PositDivSqrt.scala 92:41]
    node _T_64 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 94:9]
    node _T_65 = and(_T_64, sqrtOp_stored) @[PositDivSqrt.scala 94:18]
    node _T_66 = dshl(divSqrtFrac, UInt<1>("h01")) @[PositDivSqrt.scala 94:52]
    node _T_67 = cat(_T_66, UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_68 = mux(_T_65, _T_67, UInt<1>("h00")) @[PositDivSqrt.scala 94:8]
    node _T_69 = or(_T_63, _T_68) @[PositDivSqrt.scala 93:52]
    node _T_70 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 95:9]
    node _T_71 = eq(sqrtOp_stored, UInt<1>("h00")) @[PositDivSqrt.scala 95:21]
    node _T_72 = and(_T_70, _T_71) @[PositDivSqrt.scala 95:18]
    node _T_73 = mux(_T_72, divisor, UInt<1>("h00")) @[PositDivSqrt.scala 95:8]
    node testDiv = or(_T_69, _T_73) @[PositDivSqrt.scala 94:71]
    node _T_74 = cvt(rem) @[PositDivSqrt.scala 97:21]
    node _T_75 = cvt(testDiv) @[PositDivSqrt.scala 97:36]
    node _T_76 = sub(_T_74, _T_75) @[PositDivSqrt.scala 97:26]
    node _T_77 = tail(_T_76, 1) @[PositDivSqrt.scala 97:26]
    node testRem = asSInt(_T_77) @[PositDivSqrt.scala 97:26]
    node nextBit = geq(testRem, asSInt(UInt<1>("h00"))) @[PositDivSqrt.scala 98:25]
    node _T_78 = gt(cycleCount, UInt<2>("h02")) @[PositDivSqrt.scala 100:39]
    node _T_79 = or(started_normally, _T_78) @[PositDivSqrt.scala 100:25]
    when _T_79 : @[PositDivSqrt.scala 100:46]
      node _T_80 = asUInt(testRem) @[PositDivSqrt.scala 101:41]
      node _T_81 = mux(nextBit, _T_80, rem) @[PositDivSqrt.scala 101:17]
      remHi <= _T_81 @[PositDivSqrt.scala 101:11]
      skip @[PositDivSqrt.scala 100:46]
    node nextFraction = cat(divSqrtFrac, nextBit) @[Cat.scala 30:58]
    node _T_82 = mux(started_normally, nextBit, UInt<1>("h00")) @[PositDivSqrt.scala 105:21]
    node _T_83 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 106:18]
    node _T_84 = mux(_T_83, nextFraction, UInt<1>("h00")) @[PositDivSqrt.scala 106:17]
    node _T_85 = or(_T_82, _T_84) @[PositDivSqrt.scala 105:54]
    divSqrtFrac <= _T_85 @[PositDivSqrt.scala 105:15]
    node _T_86 = bits(divSqrtFrac, 31, 31) @[PositDivSqrt.scala 108:29]
    node normReq = eq(_T_86, UInt<1>("h00")) @[PositDivSqrt.scala 108:17]
    node _T_87 = cat(divSqrtFrac, UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_88 = mux(normReq, _T_87, divSqrtFrac) @[PositDivSqrt.scala 109:18]
    frac_out <= _T_88 @[PositDivSqrt.scala 109:12]
    node _T_89 = asSInt(normReq) @[PositDivSqrt.scala 110:42]
    node _T_90 = add(divSqrtExp, _T_89) @[PositDivSqrt.scala 110:26]
    node _T_91 = tail(_T_90, 1) @[PositDivSqrt.scala 110:26]
    node _T_92 = asSInt(_T_91) @[PositDivSqrt.scala 110:26]
    exp_out <= _T_92 @[PositDivSqrt.scala 110:12]
    result.isNaR <= isNaR_out @[PositDivSqrt.scala 112:19]
    result.isZero <= isZero_out @[PositDivSqrt.scala 113:19]
    result.exponent <= exp_out @[PositDivSqrt.scala 114:19]
    result.sign <= sign_out @[PositDivSqrt.scala 115:19]
    node _T_93 = bits(frac_out, 31, 4) @[PositDivSqrt.scala 116:30]
    result.fraction <= _T_93 @[PositDivSqrt.scala 116:19]
    node validOut = eq(cycleCount, UInt<1>("h01")) @[PositDivSqrt.scala 118:29]
    node _T_94 = eq(sqrtOp_stored, UInt<1>("h00")) @[PositDivSqrt.scala 120:35]
    node _T_95 = and(validOut, _T_94) @[PositDivSqrt.scala 120:32]
    io.validOut_div <= _T_95 @[PositDivSqrt.scala 120:20]
    node _T_96 = and(validOut, sqrtOp_stored) @[PositDivSqrt.scala 121:32]
    io.validOut_sqrt <= _T_96 @[PositDivSqrt.scala 121:20]
    io.exceptions <= exec_out @[PositDivSqrt.scala 122:20]
    node _T_97 = bits(frac_out, 3, 2) @[PositDivSqrt.scala 124:30]
    io.trailingBits <= _T_97 @[PositDivSqrt.scala 124:19]
    node _T_98 = bits(frac_out, 1, 0) @[PositDivSqrt.scala 125:30]
    node _T_99 = neq(_T_98, UInt<1>("h00")) @[PositDivSqrt.scala 125:59]
    node _T_100 = neq(remHi, UInt<1>("h00")) @[PositDivSqrt.scala 125:73]
    node _T_101 = or(_T_99, _T_100) @[PositDivSqrt.scala 125:62]
    io.stickyBit <= _T_101 @[PositDivSqrt.scala 125:19]
    io.out.isNaR <= result.isNaR @[PositDivSqrt.scala 127:10]
    io.out.isZero <= result.isZero @[PositDivSqrt.scala 127:10]
    io.out.fraction <= result.fraction @[PositDivSqrt.scala 127:10]
    io.out.exponent <= result.exponent @[PositDivSqrt.scala 127:10]
    io.out.sign <= result.sign @[PositDivSqrt.scala 127:10]
    
  module PositMulCore : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip validIn : UInt<1>, validOut : UInt<1>}
    
    io.validOut <= io.validIn @[PositMul.scala 18:15]
    node _T = add(io.num1.exponent, io.num2.exponent) @[PositMul.scala 22:31]
    node _T_1 = tail(_T, 1) @[PositMul.scala 22:31]
    node prodExp = asSInt(_T_1) @[PositMul.scala 22:31]
    node _T_2 = mul(io.num1.fraction, io.num2.fraction) @[PositMul.scala 24:63]
    wire prodFrac : UInt<56>
    prodFrac <= _T_2
    node prodOverflow = bits(prodFrac, 55, 55) @[PositMul.scala 25:30]
    node _T_3 = not(prodOverflow) @[PositMul.scala 27:39]
    node normProductFrac = dshl(prodFrac, _T_3) @[PositMul.scala 27:35]
    node _T_4 = mux(prodOverflow, asSInt(UInt<2>("h01")), asSInt(UInt<1>("h00"))) @[PositMul.scala 28:38]
    node _T_5 = add(prodExp, _T_4) @[PositMul.scala 28:33]
    node _T_6 = tail(_T_5, 1) @[PositMul.scala 28:33]
    node normProductExp = asSInt(_T_6) @[PositMul.scala 28:33]
    wire result : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[PositMul.scala 30:20]
    node _T_7 = or(io.num1.isNaR, io.num2.isNaR) @[PositMul.scala 31:34]
    result.isNaR <= _T_7 @[PositMul.scala 31:19]
    node _T_8 = or(io.num1.isZero, io.num2.isZero) @[PositMul.scala 32:34]
    result.isZero <= _T_8 @[PositMul.scala 32:19]
    node _T_9 = xor(io.num1.sign, io.num2.sign) @[PositMul.scala 33:32]
    result.sign <= _T_9 @[PositMul.scala 33:19]
    result.exponent <= normProductExp @[PositMul.scala 34:19]
    node _T_10 = bits(normProductFrac, 55, 28) @[PositMul.scala 35:37]
    result.fraction <= _T_10 @[PositMul.scala 35:19]
    node _T_11 = bits(normProductFrac, 27, 26) @[PositMul.scala 37:37]
    io.trailingBits <= _T_11 @[PositMul.scala 37:19]
    node _T_12 = bits(normProductFrac, 25, 0) @[PositMul.scala 38:37]
    node _T_13 = neq(_T_12, UInt<1>("h00")) @[PositMul.scala 38:97]
    io.stickyBit <= _T_13 @[PositMul.scala 38:19]
    io.out.isNaR <= result.isNaR @[PositMul.scala 40:10]
    io.out.isZero <= result.isZero @[PositMul.scala 40:10]
    io.out.fraction <= result.fraction @[PositMul.scala 40:10]
    io.out.exponent <= result.exponent @[PositMul.scala 40:10]
    io.out.sign <= result.sign @[PositMul.scala 40:10]
    
  module PositExtractor : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    node sign = bits(io.in, 31, 31) @[PositExtractor.scala 12:21]
    node _T = not(io.in) @[PositExtractor.scala 13:26]
    node _T_1 = add(_T, UInt<1>("h01")) @[PositExtractor.scala 13:33]
    node _T_2 = tail(_T_1, 1) @[PositExtractor.scala 13:33]
    node absIn = mux(sign, _T_2, io.in) @[PositExtractor.scala 13:19]
    node _T_3 = bits(absIn, 30, 30) @[PositExtractor.scala 14:22]
    node negExp = not(_T_3) @[PositExtractor.scala 14:16]
    node regExpFrac = bits(absIn, 30, 0) @[PositExtractor.scala 16:26]
    node _T_4 = not(regExpFrac) @[PositExtractor.scala 17:45]
    node zerosRegime = mux(negExp, regExpFrac, _T_4) @[PositExtractor.scala 17:24]
    node _T_5 = neq(zerosRegime, UInt<1>("h00")) @[common.scala 61:41]
    node _T_6 = not(_T_5) @[common.scala 61:33]
    node _T_7 = bits(zerosRegime, 0, 0) @[common.scala 19:50]
    node _T_8 = bits(zerosRegime, 1, 1) @[common.scala 19:50]
    node _T_9 = bits(zerosRegime, 2, 2) @[common.scala 19:50]
    node _T_10 = bits(zerosRegime, 3, 3) @[common.scala 19:50]
    node _T_11 = bits(zerosRegime, 4, 4) @[common.scala 19:50]
    node _T_12 = bits(zerosRegime, 5, 5) @[common.scala 19:50]
    node _T_13 = bits(zerosRegime, 6, 6) @[common.scala 19:50]
    node _T_14 = bits(zerosRegime, 7, 7) @[common.scala 19:50]
    node _T_15 = bits(zerosRegime, 8, 8) @[common.scala 19:50]
    node _T_16 = bits(zerosRegime, 9, 9) @[common.scala 19:50]
    node _T_17 = bits(zerosRegime, 10, 10) @[common.scala 19:50]
    node _T_18 = bits(zerosRegime, 11, 11) @[common.scala 19:50]
    node _T_19 = bits(zerosRegime, 12, 12) @[common.scala 19:50]
    node _T_20 = bits(zerosRegime, 13, 13) @[common.scala 19:50]
    node _T_21 = bits(zerosRegime, 14, 14) @[common.scala 19:50]
    node _T_22 = bits(zerosRegime, 15, 15) @[common.scala 19:50]
    node _T_23 = bits(zerosRegime, 16, 16) @[common.scala 19:50]
    node _T_24 = bits(zerosRegime, 17, 17) @[common.scala 19:50]
    node _T_25 = bits(zerosRegime, 18, 18) @[common.scala 19:50]
    node _T_26 = bits(zerosRegime, 19, 19) @[common.scala 19:50]
    node _T_27 = bits(zerosRegime, 20, 20) @[common.scala 19:50]
    node _T_28 = bits(zerosRegime, 21, 21) @[common.scala 19:50]
    node _T_29 = bits(zerosRegime, 22, 22) @[common.scala 19:50]
    node _T_30 = bits(zerosRegime, 23, 23) @[common.scala 19:50]
    node _T_31 = bits(zerosRegime, 24, 24) @[common.scala 19:50]
    node _T_32 = bits(zerosRegime, 25, 25) @[common.scala 19:50]
    node _T_33 = bits(zerosRegime, 26, 26) @[common.scala 19:50]
    node _T_34 = bits(zerosRegime, 27, 27) @[common.scala 19:50]
    node _T_35 = bits(zerosRegime, 28, 28) @[common.scala 19:50]
    node _T_36 = bits(zerosRegime, 29, 29) @[common.scala 19:50]
    node _T_37 = bits(zerosRegime, 30, 30) @[common.scala 19:50]
    node _T_38 = mux(_T_8, UInt<5>("h01d"), UInt<5>("h01e")) @[Mux.scala 47:69]
    node _T_39 = mux(_T_9, UInt<5>("h01c"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_10, UInt<5>("h01b"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_11, UInt<5>("h01a"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_12, UInt<5>("h019"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_13, UInt<5>("h018"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_14, UInt<5>("h017"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_15, UInt<5>("h016"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_16, UInt<5>("h015"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_17, UInt<5>("h014"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_18, UInt<5>("h013"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_19, UInt<5>("h012"), _T_48) @[Mux.scala 47:69]
    node _T_50 = mux(_T_20, UInt<5>("h011"), _T_49) @[Mux.scala 47:69]
    node _T_51 = mux(_T_21, UInt<5>("h010"), _T_50) @[Mux.scala 47:69]
    node _T_52 = mux(_T_22, UInt<4>("h0f"), _T_51) @[Mux.scala 47:69]
    node _T_53 = mux(_T_23, UInt<4>("h0e"), _T_52) @[Mux.scala 47:69]
    node _T_54 = mux(_T_24, UInt<4>("h0d"), _T_53) @[Mux.scala 47:69]
    node _T_55 = mux(_T_25, UInt<4>("h0c"), _T_54) @[Mux.scala 47:69]
    node _T_56 = mux(_T_26, UInt<4>("h0b"), _T_55) @[Mux.scala 47:69]
    node _T_57 = mux(_T_27, UInt<4>("h0a"), _T_56) @[Mux.scala 47:69]
    node _T_58 = mux(_T_28, UInt<4>("h09"), _T_57) @[Mux.scala 47:69]
    node _T_59 = mux(_T_29, UInt<4>("h08"), _T_58) @[Mux.scala 47:69]
    node _T_60 = mux(_T_30, UInt<3>("h07"), _T_59) @[Mux.scala 47:69]
    node _T_61 = mux(_T_31, UInt<3>("h06"), _T_60) @[Mux.scala 47:69]
    node _T_62 = mux(_T_32, UInt<3>("h05"), _T_61) @[Mux.scala 47:69]
    node _T_63 = mux(_T_33, UInt<3>("h04"), _T_62) @[Mux.scala 47:69]
    node _T_64 = mux(_T_34, UInt<2>("h03"), _T_63) @[Mux.scala 47:69]
    node _T_65 = mux(_T_35, UInt<2>("h02"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_36, UInt<1>("h01"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_37, UInt<1>("h00"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_6, UInt<5>("h01f"), _T_67) @[PositExtractor.scala 20:10]
    node regimeCount = cat(UInt<1>("h00"), _T_68) @[Cat.scala 30:58]
    node _T_69 = not(regimeCount) @[PositExtractor.scala 22:17]
    node _T_70 = add(_T_69, UInt<1>("h01")) @[PositExtractor.scala 22:30]
    node _T_71 = tail(_T_70, 1) @[PositExtractor.scala 22:30]
    node _T_72 = sub(regimeCount, UInt<1>("h01")) @[PositExtractor.scala 22:49]
    node _T_73 = tail(_T_72, 1) @[PositExtractor.scala 22:49]
    node regime = mux(negExp, _T_71, _T_73) @[PositExtractor.scala 22:8]
    node _T_74 = add(regimeCount, UInt<2>("h02")) @[PositExtractor.scala 24:39]
    node _T_75 = tail(_T_74, 1) @[PositExtractor.scala 24:39]
    node expFrac = dshl(absIn, _T_75) @[PositExtractor.scala 24:23]
    node extractedExp = bits(expFrac, 31, 30) @[PositExtractor.scala 26:24]
    node frac = bits(expFrac, 29, 3) @[PositExtractor.scala 28:21]
    node _T_76 = bits(io.in, 31, 31) @[common.scala 27:43]
    node _T_77 = bits(io.in, 30, 0) @[common.scala 27:57]
    node _T_78 = neq(_T_77, UInt<1>("h00")) @[common.scala 27:71]
    node _T_79 = not(_T_78) @[common.scala 27:53]
    node _T_80 = and(_T_76, _T_79) @[common.scala 27:51]
    io.out.isNaR <= _T_80 @[PositExtractor.scala 30:19]
    node _T_81 = neq(io.in, UInt<1>("h00")) @[common.scala 61:41]
    node _T_82 = not(_T_81) @[common.scala 61:33]
    io.out.isZero <= _T_82 @[PositExtractor.scala 31:19]
    io.out.sign <= sign @[PositExtractor.scala 33:19]
    node _T_83 = cat(regime, extractedExp) @[Cat.scala 30:58]
    node _T_84 = asSInt(_T_83) @[PositExtractor.scala 37:11]
    io.out.exponent <= _T_84 @[PositExtractor.scala 34:19]
    node _T_85 = cat(UInt<1>("h01"), frac) @[Cat.scala 30:58]
    io.out.fraction <= _T_85 @[PositExtractor.scala 38:19]
    
  module PositExtractor_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    node sign = bits(io.in, 31, 31) @[PositExtractor.scala 12:21]
    node _T = not(io.in) @[PositExtractor.scala 13:26]
    node _T_1 = add(_T, UInt<1>("h01")) @[PositExtractor.scala 13:33]
    node _T_2 = tail(_T_1, 1) @[PositExtractor.scala 13:33]
    node absIn = mux(sign, _T_2, io.in) @[PositExtractor.scala 13:19]
    node _T_3 = bits(absIn, 30, 30) @[PositExtractor.scala 14:22]
    node negExp = not(_T_3) @[PositExtractor.scala 14:16]
    node regExpFrac = bits(absIn, 30, 0) @[PositExtractor.scala 16:26]
    node _T_4 = not(regExpFrac) @[PositExtractor.scala 17:45]
    node zerosRegime = mux(negExp, regExpFrac, _T_4) @[PositExtractor.scala 17:24]
    node _T_5 = neq(zerosRegime, UInt<1>("h00")) @[common.scala 61:41]
    node _T_6 = not(_T_5) @[common.scala 61:33]
    node _T_7 = bits(zerosRegime, 0, 0) @[common.scala 19:50]
    node _T_8 = bits(zerosRegime, 1, 1) @[common.scala 19:50]
    node _T_9 = bits(zerosRegime, 2, 2) @[common.scala 19:50]
    node _T_10 = bits(zerosRegime, 3, 3) @[common.scala 19:50]
    node _T_11 = bits(zerosRegime, 4, 4) @[common.scala 19:50]
    node _T_12 = bits(zerosRegime, 5, 5) @[common.scala 19:50]
    node _T_13 = bits(zerosRegime, 6, 6) @[common.scala 19:50]
    node _T_14 = bits(zerosRegime, 7, 7) @[common.scala 19:50]
    node _T_15 = bits(zerosRegime, 8, 8) @[common.scala 19:50]
    node _T_16 = bits(zerosRegime, 9, 9) @[common.scala 19:50]
    node _T_17 = bits(zerosRegime, 10, 10) @[common.scala 19:50]
    node _T_18 = bits(zerosRegime, 11, 11) @[common.scala 19:50]
    node _T_19 = bits(zerosRegime, 12, 12) @[common.scala 19:50]
    node _T_20 = bits(zerosRegime, 13, 13) @[common.scala 19:50]
    node _T_21 = bits(zerosRegime, 14, 14) @[common.scala 19:50]
    node _T_22 = bits(zerosRegime, 15, 15) @[common.scala 19:50]
    node _T_23 = bits(zerosRegime, 16, 16) @[common.scala 19:50]
    node _T_24 = bits(zerosRegime, 17, 17) @[common.scala 19:50]
    node _T_25 = bits(zerosRegime, 18, 18) @[common.scala 19:50]
    node _T_26 = bits(zerosRegime, 19, 19) @[common.scala 19:50]
    node _T_27 = bits(zerosRegime, 20, 20) @[common.scala 19:50]
    node _T_28 = bits(zerosRegime, 21, 21) @[common.scala 19:50]
    node _T_29 = bits(zerosRegime, 22, 22) @[common.scala 19:50]
    node _T_30 = bits(zerosRegime, 23, 23) @[common.scala 19:50]
    node _T_31 = bits(zerosRegime, 24, 24) @[common.scala 19:50]
    node _T_32 = bits(zerosRegime, 25, 25) @[common.scala 19:50]
    node _T_33 = bits(zerosRegime, 26, 26) @[common.scala 19:50]
    node _T_34 = bits(zerosRegime, 27, 27) @[common.scala 19:50]
    node _T_35 = bits(zerosRegime, 28, 28) @[common.scala 19:50]
    node _T_36 = bits(zerosRegime, 29, 29) @[common.scala 19:50]
    node _T_37 = bits(zerosRegime, 30, 30) @[common.scala 19:50]
    node _T_38 = mux(_T_8, UInt<5>("h01d"), UInt<5>("h01e")) @[Mux.scala 47:69]
    node _T_39 = mux(_T_9, UInt<5>("h01c"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_10, UInt<5>("h01b"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_11, UInt<5>("h01a"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_12, UInt<5>("h019"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_13, UInt<5>("h018"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_14, UInt<5>("h017"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_15, UInt<5>("h016"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_16, UInt<5>("h015"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_17, UInt<5>("h014"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_18, UInt<5>("h013"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_19, UInt<5>("h012"), _T_48) @[Mux.scala 47:69]
    node _T_50 = mux(_T_20, UInt<5>("h011"), _T_49) @[Mux.scala 47:69]
    node _T_51 = mux(_T_21, UInt<5>("h010"), _T_50) @[Mux.scala 47:69]
    node _T_52 = mux(_T_22, UInt<4>("h0f"), _T_51) @[Mux.scala 47:69]
    node _T_53 = mux(_T_23, UInt<4>("h0e"), _T_52) @[Mux.scala 47:69]
    node _T_54 = mux(_T_24, UInt<4>("h0d"), _T_53) @[Mux.scala 47:69]
    node _T_55 = mux(_T_25, UInt<4>("h0c"), _T_54) @[Mux.scala 47:69]
    node _T_56 = mux(_T_26, UInt<4>("h0b"), _T_55) @[Mux.scala 47:69]
    node _T_57 = mux(_T_27, UInt<4>("h0a"), _T_56) @[Mux.scala 47:69]
    node _T_58 = mux(_T_28, UInt<4>("h09"), _T_57) @[Mux.scala 47:69]
    node _T_59 = mux(_T_29, UInt<4>("h08"), _T_58) @[Mux.scala 47:69]
    node _T_60 = mux(_T_30, UInt<3>("h07"), _T_59) @[Mux.scala 47:69]
    node _T_61 = mux(_T_31, UInt<3>("h06"), _T_60) @[Mux.scala 47:69]
    node _T_62 = mux(_T_32, UInt<3>("h05"), _T_61) @[Mux.scala 47:69]
    node _T_63 = mux(_T_33, UInt<3>("h04"), _T_62) @[Mux.scala 47:69]
    node _T_64 = mux(_T_34, UInt<2>("h03"), _T_63) @[Mux.scala 47:69]
    node _T_65 = mux(_T_35, UInt<2>("h02"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_36, UInt<1>("h01"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_37, UInt<1>("h00"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_6, UInt<5>("h01f"), _T_67) @[PositExtractor.scala 20:10]
    node regimeCount = cat(UInt<1>("h00"), _T_68) @[Cat.scala 30:58]
    node _T_69 = not(regimeCount) @[PositExtractor.scala 22:17]
    node _T_70 = add(_T_69, UInt<1>("h01")) @[PositExtractor.scala 22:30]
    node _T_71 = tail(_T_70, 1) @[PositExtractor.scala 22:30]
    node _T_72 = sub(regimeCount, UInt<1>("h01")) @[PositExtractor.scala 22:49]
    node _T_73 = tail(_T_72, 1) @[PositExtractor.scala 22:49]
    node regime = mux(negExp, _T_71, _T_73) @[PositExtractor.scala 22:8]
    node _T_74 = add(regimeCount, UInt<2>("h02")) @[PositExtractor.scala 24:39]
    node _T_75 = tail(_T_74, 1) @[PositExtractor.scala 24:39]
    node expFrac = dshl(absIn, _T_75) @[PositExtractor.scala 24:23]
    node extractedExp = bits(expFrac, 31, 30) @[PositExtractor.scala 26:24]
    node frac = bits(expFrac, 29, 3) @[PositExtractor.scala 28:21]
    node _T_76 = bits(io.in, 31, 31) @[common.scala 27:43]
    node _T_77 = bits(io.in, 30, 0) @[common.scala 27:57]
    node _T_78 = neq(_T_77, UInt<1>("h00")) @[common.scala 27:71]
    node _T_79 = not(_T_78) @[common.scala 27:53]
    node _T_80 = and(_T_76, _T_79) @[common.scala 27:51]
    io.out.isNaR <= _T_80 @[PositExtractor.scala 30:19]
    node _T_81 = neq(io.in, UInt<1>("h00")) @[common.scala 61:41]
    node _T_82 = not(_T_81) @[common.scala 61:33]
    io.out.isZero <= _T_82 @[PositExtractor.scala 31:19]
    io.out.sign <= sign @[PositExtractor.scala 33:19]
    node _T_83 = cat(regime, extractedExp) @[Cat.scala 30:58]
    node _T_84 = asSInt(_T_83) @[PositExtractor.scala 37:11]
    io.out.exponent <= _T_84 @[PositExtractor.scala 34:19]
    node _T_85 = cat(UInt<1>("h01"), frac) @[Cat.scala 30:58]
    io.out.fraction <= _T_85 @[PositExtractor.scala 38:19]
    
  module PositExtractor_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    node sign = bits(io.in, 31, 31) @[PositExtractor.scala 12:21]
    node _T = not(io.in) @[PositExtractor.scala 13:26]
    node _T_1 = add(_T, UInt<1>("h01")) @[PositExtractor.scala 13:33]
    node _T_2 = tail(_T_1, 1) @[PositExtractor.scala 13:33]
    node absIn = mux(sign, _T_2, io.in) @[PositExtractor.scala 13:19]
    node _T_3 = bits(absIn, 30, 30) @[PositExtractor.scala 14:22]
    node negExp = not(_T_3) @[PositExtractor.scala 14:16]
    node regExpFrac = bits(absIn, 30, 0) @[PositExtractor.scala 16:26]
    node _T_4 = not(regExpFrac) @[PositExtractor.scala 17:45]
    node zerosRegime = mux(negExp, regExpFrac, _T_4) @[PositExtractor.scala 17:24]
    node _T_5 = neq(zerosRegime, UInt<1>("h00")) @[common.scala 61:41]
    node _T_6 = not(_T_5) @[common.scala 61:33]
    node _T_7 = bits(zerosRegime, 0, 0) @[common.scala 19:50]
    node _T_8 = bits(zerosRegime, 1, 1) @[common.scala 19:50]
    node _T_9 = bits(zerosRegime, 2, 2) @[common.scala 19:50]
    node _T_10 = bits(zerosRegime, 3, 3) @[common.scala 19:50]
    node _T_11 = bits(zerosRegime, 4, 4) @[common.scala 19:50]
    node _T_12 = bits(zerosRegime, 5, 5) @[common.scala 19:50]
    node _T_13 = bits(zerosRegime, 6, 6) @[common.scala 19:50]
    node _T_14 = bits(zerosRegime, 7, 7) @[common.scala 19:50]
    node _T_15 = bits(zerosRegime, 8, 8) @[common.scala 19:50]
    node _T_16 = bits(zerosRegime, 9, 9) @[common.scala 19:50]
    node _T_17 = bits(zerosRegime, 10, 10) @[common.scala 19:50]
    node _T_18 = bits(zerosRegime, 11, 11) @[common.scala 19:50]
    node _T_19 = bits(zerosRegime, 12, 12) @[common.scala 19:50]
    node _T_20 = bits(zerosRegime, 13, 13) @[common.scala 19:50]
    node _T_21 = bits(zerosRegime, 14, 14) @[common.scala 19:50]
    node _T_22 = bits(zerosRegime, 15, 15) @[common.scala 19:50]
    node _T_23 = bits(zerosRegime, 16, 16) @[common.scala 19:50]
    node _T_24 = bits(zerosRegime, 17, 17) @[common.scala 19:50]
    node _T_25 = bits(zerosRegime, 18, 18) @[common.scala 19:50]
    node _T_26 = bits(zerosRegime, 19, 19) @[common.scala 19:50]
    node _T_27 = bits(zerosRegime, 20, 20) @[common.scala 19:50]
    node _T_28 = bits(zerosRegime, 21, 21) @[common.scala 19:50]
    node _T_29 = bits(zerosRegime, 22, 22) @[common.scala 19:50]
    node _T_30 = bits(zerosRegime, 23, 23) @[common.scala 19:50]
    node _T_31 = bits(zerosRegime, 24, 24) @[common.scala 19:50]
    node _T_32 = bits(zerosRegime, 25, 25) @[common.scala 19:50]
    node _T_33 = bits(zerosRegime, 26, 26) @[common.scala 19:50]
    node _T_34 = bits(zerosRegime, 27, 27) @[common.scala 19:50]
    node _T_35 = bits(zerosRegime, 28, 28) @[common.scala 19:50]
    node _T_36 = bits(zerosRegime, 29, 29) @[common.scala 19:50]
    node _T_37 = bits(zerosRegime, 30, 30) @[common.scala 19:50]
    node _T_38 = mux(_T_8, UInt<5>("h01d"), UInt<5>("h01e")) @[Mux.scala 47:69]
    node _T_39 = mux(_T_9, UInt<5>("h01c"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_10, UInt<5>("h01b"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_11, UInt<5>("h01a"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_12, UInt<5>("h019"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_13, UInt<5>("h018"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_14, UInt<5>("h017"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_15, UInt<5>("h016"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_16, UInt<5>("h015"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_17, UInt<5>("h014"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_18, UInt<5>("h013"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_19, UInt<5>("h012"), _T_48) @[Mux.scala 47:69]
    node _T_50 = mux(_T_20, UInt<5>("h011"), _T_49) @[Mux.scala 47:69]
    node _T_51 = mux(_T_21, UInt<5>("h010"), _T_50) @[Mux.scala 47:69]
    node _T_52 = mux(_T_22, UInt<4>("h0f"), _T_51) @[Mux.scala 47:69]
    node _T_53 = mux(_T_23, UInt<4>("h0e"), _T_52) @[Mux.scala 47:69]
    node _T_54 = mux(_T_24, UInt<4>("h0d"), _T_53) @[Mux.scala 47:69]
    node _T_55 = mux(_T_25, UInt<4>("h0c"), _T_54) @[Mux.scala 47:69]
    node _T_56 = mux(_T_26, UInt<4>("h0b"), _T_55) @[Mux.scala 47:69]
    node _T_57 = mux(_T_27, UInt<4>("h0a"), _T_56) @[Mux.scala 47:69]
    node _T_58 = mux(_T_28, UInt<4>("h09"), _T_57) @[Mux.scala 47:69]
    node _T_59 = mux(_T_29, UInt<4>("h08"), _T_58) @[Mux.scala 47:69]
    node _T_60 = mux(_T_30, UInt<3>("h07"), _T_59) @[Mux.scala 47:69]
    node _T_61 = mux(_T_31, UInt<3>("h06"), _T_60) @[Mux.scala 47:69]
    node _T_62 = mux(_T_32, UInt<3>("h05"), _T_61) @[Mux.scala 47:69]
    node _T_63 = mux(_T_33, UInt<3>("h04"), _T_62) @[Mux.scala 47:69]
    node _T_64 = mux(_T_34, UInt<2>("h03"), _T_63) @[Mux.scala 47:69]
    node _T_65 = mux(_T_35, UInt<2>("h02"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_36, UInt<1>("h01"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_37, UInt<1>("h00"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_6, UInt<5>("h01f"), _T_67) @[PositExtractor.scala 20:10]
    node regimeCount = cat(UInt<1>("h00"), _T_68) @[Cat.scala 30:58]
    node _T_69 = not(regimeCount) @[PositExtractor.scala 22:17]
    node _T_70 = add(_T_69, UInt<1>("h01")) @[PositExtractor.scala 22:30]
    node _T_71 = tail(_T_70, 1) @[PositExtractor.scala 22:30]
    node _T_72 = sub(regimeCount, UInt<1>("h01")) @[PositExtractor.scala 22:49]
    node _T_73 = tail(_T_72, 1) @[PositExtractor.scala 22:49]
    node regime = mux(negExp, _T_71, _T_73) @[PositExtractor.scala 22:8]
    node _T_74 = add(regimeCount, UInt<2>("h02")) @[PositExtractor.scala 24:39]
    node _T_75 = tail(_T_74, 1) @[PositExtractor.scala 24:39]
    node expFrac = dshl(absIn, _T_75) @[PositExtractor.scala 24:23]
    node extractedExp = bits(expFrac, 31, 30) @[PositExtractor.scala 26:24]
    node frac = bits(expFrac, 29, 3) @[PositExtractor.scala 28:21]
    node _T_76 = bits(io.in, 31, 31) @[common.scala 27:43]
    node _T_77 = bits(io.in, 30, 0) @[common.scala 27:57]
    node _T_78 = neq(_T_77, UInt<1>("h00")) @[common.scala 27:71]
    node _T_79 = not(_T_78) @[common.scala 27:53]
    node _T_80 = and(_T_76, _T_79) @[common.scala 27:51]
    io.out.isNaR <= _T_80 @[PositExtractor.scala 30:19]
    node _T_81 = neq(io.in, UInt<1>("h00")) @[common.scala 61:41]
    node _T_82 = not(_T_81) @[common.scala 61:33]
    io.out.isZero <= _T_82 @[PositExtractor.scala 31:19]
    io.out.sign <= sign @[PositExtractor.scala 33:19]
    node _T_83 = cat(regime, extractedExp) @[Cat.scala 30:58]
    node _T_84 = asSInt(_T_83) @[PositExtractor.scala 37:11]
    io.out.exponent <= _T_84 @[PositExtractor.scala 34:19]
    node _T_85 = cat(UInt<1>("h01"), frac) @[Cat.scala 30:58]
    io.out.fraction <= _T_85 @[PositExtractor.scala 38:19]
    
  module PositGenerator : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module PositGenerator_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module PositGenerator_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module PositGenerator_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module PositGenerator_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module Posit : 
    input clock : Clock
    input reset : Reset
    output io : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {num1 : UInt<32>, num2 : UInt<32>, num3 : UInt<32>, inst : UInt<3>, mode : UInt<2>}}, result : {flip ready : UInt<1>, valid : UInt<1>, bits : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}}, flip in_idx : UInt<3>, out_idx : UInt<3>}
    
    inst positAddCore of PositAddCore @[POSIT.scala 44:34]
    positAddCore.clock <= clock
    positAddCore.reset <= reset
    inst positCompare of PositCompare @[POSIT.scala 45:34]
    positCompare.clock <= clock
    positCompare.reset <= reset
    inst positFMACore of PositFMACore @[POSIT.scala 46:34]
    positFMACore.clock <= clock
    positFMACore.reset <= reset
    inst positDivSqrtCore of PositDivSqrtCore @[POSIT.scala 47:38]
    positDivSqrtCore.clock <= clock
    positDivSqrtCore.reset <= reset
    inst positMulCore of PositMulCore @[POSIT.scala 48:34]
    positMulCore.clock <= clock
    positMulCore.reset <= reset
    reg init_num1 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 51:32]
    reg init_num2 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 52:32]
    reg init_num3 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 53:32]
    reg init_input_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 54:39]
    reg init_inst : UInt<3>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 55:32]
    reg init_mode : UInt<2>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 56:32]
    reg init_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 57:33]
    reg init_idx : UInt<3>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 58:31]
    reg result_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 60:35]
    reg exec_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 61:33]
    node _T = and(io.request.valid, io.request.ready) @[POSIT.scala 63:31]
    when _T : @[POSIT.scala 63:51]
      init_num1 <= io.request.bits.num1 @[POSIT.scala 64:27]
      init_num2 <= io.request.bits.num2 @[POSIT.scala 65:27]
      init_num3 <= io.request.bits.num3 @[POSIT.scala 66:27]
      init_valid <= io.request.valid @[POSIT.scala 67:28]
      init_inst <= io.request.bits.inst @[POSIT.scala 68:27]
      init_mode <= io.request.bits.mode @[POSIT.scala 69:27]
      init_idx <= io.in_idx @[POSIT.scala 70:26]
      skip @[POSIT.scala 63:51]
    else : @[POSIT.scala 71:65]
      node _T_1 = eq(result_valid, UInt<1>("h00")) @[POSIT.scala 71:21]
      node _T_2 = eq(exec_valid, UInt<1>("h00")) @[POSIT.scala 71:39]
      node _T_3 = and(_T_1, _T_2) @[POSIT.scala 71:36]
      node _T_4 = and(_T_3, init_valid) @[POSIT.scala 71:51]
      when _T_4 : @[POSIT.scala 71:65]
        init_valid <= UInt<1>("h00") @[POSIT.scala 72:28]
        skip @[POSIT.scala 71:65]
    inst num1Extractor of PositExtractor @[POSIT.scala 74:35]
    num1Extractor.clock <= clock
    num1Extractor.reset <= reset
    inst num2Extractor of PositExtractor_1 @[POSIT.scala 75:35]
    num2Extractor.clock <= clock
    num2Extractor.reset <= reset
    inst num3Extractor of PositExtractor_2 @[POSIT.scala 76:35]
    num3Extractor.clock <= clock
    num3Extractor.reset <= reset
    num1Extractor.io.in <= init_num1 @[POSIT.scala 77:29]
    num2Extractor.io.in <= init_num2 @[POSIT.scala 78:29]
    num3Extractor.io.in <= init_num3 @[POSIT.scala 79:29]
    wire _T_5 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 81:75]
    _T_5.isNaR <= UInt<1>("h00") @[POSIT.scala 81:75]
    _T_5.isZero <= UInt<1>("h00") @[POSIT.scala 81:75]
    _T_5.fraction <= UInt<28>("h00") @[POSIT.scala 81:75]
    node _T_6 = asSInt(UInt<9>("h00")) @[POSIT.scala 81:75]
    _T_5.exponent <= _T_6 @[POSIT.scala 81:75]
    _T_5.sign <= UInt<1>("h00") @[POSIT.scala 81:75]
    reg exec_num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, clock with : (reset => (reset, _T_5)) @[POSIT.scala 81:32]
    wire _T_7 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 82:75]
    _T_7.isNaR <= UInt<1>("h00") @[POSIT.scala 82:75]
    _T_7.isZero <= UInt<1>("h00") @[POSIT.scala 82:75]
    _T_7.fraction <= UInt<28>("h00") @[POSIT.scala 82:75]
    node _T_8 = asSInt(UInt<9>("h00")) @[POSIT.scala 82:75]
    _T_7.exponent <= _T_8 @[POSIT.scala 82:75]
    _T_7.sign <= UInt<1>("h00") @[POSIT.scala 82:75]
    reg exec_num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, clock with : (reset => (reset, _T_7)) @[POSIT.scala 82:32]
    wire _T_9 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 83:75]
    _T_9.isNaR <= UInt<1>("h00") @[POSIT.scala 83:75]
    _T_9.isZero <= UInt<1>("h00") @[POSIT.scala 83:75]
    _T_9.fraction <= UInt<28>("h00") @[POSIT.scala 83:75]
    node _T_10 = asSInt(UInt<9>("h00")) @[POSIT.scala 83:75]
    _T_9.exponent <= _T_10 @[POSIT.scala 83:75]
    _T_9.sign <= UInt<1>("h00") @[POSIT.scala 83:75]
    reg exec_num3 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, clock with : (reset => (reset, _T_9)) @[POSIT.scala 83:32]
    reg comp_num1 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 84:32]
    reg comp_num2 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 85:32]
    reg exec_input_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 86:39]
    reg exec_inst : UInt<3>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 87:32]
    reg exec_mode : UInt<2>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 88:32]
    reg exec_idx : UInt<3>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 89:31]
    reg dispatched : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 90:33]
    wire default_unpacked : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 92:36]
    wire _T_11 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 94:76]
    _T_11.isNaR <= UInt<1>("h00") @[POSIT.scala 94:76]
    _T_11.isZero <= UInt<1>("h00") @[POSIT.scala 94:76]
    _T_11.fraction <= UInt<28>("h00") @[POSIT.scala 94:76]
    node _T_12 = asSInt(UInt<9>("h00")) @[POSIT.scala 94:76]
    _T_11.exponent <= _T_12 @[POSIT.scala 94:76]
    _T_11.sign <= UInt<1>("h00") @[POSIT.scala 94:76]
    reg result_out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, clock with : (reset => (reset, _T_11)) @[POSIT.scala 94:33]
    reg result_stickyBit : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 95:39]
    reg result_trailingBits : UInt<2>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 96:42]
    reg result_lt : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 97:32]
    reg result_eq : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 98:32]
    reg result_gt : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 99:32]
    reg result_idx : UInt<3>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 100:33]
    node _T_13 = not(init_valid) @[POSIT.scala 102:29]
    io.request.ready <= _T_13 @[POSIT.scala 102:26]
    default_unpacked.sign <= UInt<1>("h00") @[POSIT.scala 103:32]
    default_unpacked.exponent <= asSInt(UInt<1>("h00")) @[POSIT.scala 104:35]
    default_unpacked.fraction <= UInt<1>("h00") @[POSIT.scala 105:35]
    default_unpacked.isZero <= UInt<1>("h00") @[POSIT.scala 106:33]
    default_unpacked.isNaR <= UInt<1>("h00") @[POSIT.scala 107:32]
    wire new_result_valid : UInt<1> @[POSIT.scala 108:36]
    node _T_14 = eq(result_valid, UInt<1>("h00")) @[POSIT.scala 110:16]
    node _T_15 = eq(exec_valid, UInt<1>("h00")) @[POSIT.scala 110:34]
    node _T_16 = and(_T_14, _T_15) @[POSIT.scala 110:31]
    node _T_17 = and(_T_16, init_valid) @[POSIT.scala 110:46]
    when _T_17 : @[POSIT.scala 110:60]
      comp_num1 <= init_num1 @[POSIT.scala 111:27]
      comp_num2 <= init_num2 @[POSIT.scala 112:27]
      exec_num1.isNaR <= num1Extractor.io.out.isNaR @[POSIT.scala 113:27]
      exec_num1.isZero <= num1Extractor.io.out.isZero @[POSIT.scala 113:27]
      exec_num1.fraction <= num1Extractor.io.out.fraction @[POSIT.scala 113:27]
      exec_num1.exponent <= num1Extractor.io.out.exponent @[POSIT.scala 113:27]
      exec_num1.sign <= num1Extractor.io.out.sign @[POSIT.scala 113:27]
      exec_num2.isNaR <= num2Extractor.io.out.isNaR @[POSIT.scala 114:27]
      exec_num2.isZero <= num2Extractor.io.out.isZero @[POSIT.scala 114:27]
      exec_num2.fraction <= num2Extractor.io.out.fraction @[POSIT.scala 114:27]
      exec_num2.exponent <= num2Extractor.io.out.exponent @[POSIT.scala 114:27]
      exec_num2.sign <= num2Extractor.io.out.sign @[POSIT.scala 114:27]
      exec_num3.isNaR <= num3Extractor.io.out.isNaR @[POSIT.scala 115:27]
      exec_num3.isZero <= num3Extractor.io.out.isZero @[POSIT.scala 115:27]
      exec_num3.fraction <= num3Extractor.io.out.fraction @[POSIT.scala 115:27]
      exec_num3.exponent <= num3Extractor.io.out.exponent @[POSIT.scala 115:27]
      exec_num3.sign <= num3Extractor.io.out.sign @[POSIT.scala 115:27]
      exec_valid <= init_valid @[POSIT.scala 116:28]
      exec_inst <= init_inst @[POSIT.scala 117:27]
      exec_mode <= init_mode @[POSIT.scala 118:27]
      exec_idx <= init_idx @[POSIT.scala 119:26]
      skip @[POSIT.scala 110:60]
    else : @[POSIT.scala 120:37]
      when new_result_valid : @[POSIT.scala 120:37]
        exec_valid <= UInt<1>("h00") @[POSIT.scala 121:28]
        skip @[POSIT.scala 120:37]
    when new_result_valid : @[POSIT.scala 124:31]
      dispatched <= UInt<1>("h00") @[POSIT.scala 125:28]
      skip @[POSIT.scala 124:31]
    else : @[POSIT.scala 126:31]
      when exec_valid : @[POSIT.scala 126:31]
        dispatched <= UInt<1>("h01") @[POSIT.scala 127:28]
        skip @[POSIT.scala 126:31]
    positAddCore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 130:30]
    positAddCore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 130:30]
    positAddCore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 130:30]
    positAddCore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 130:30]
    positAddCore.io.num1.sign <= exec_num1.sign @[POSIT.scala 130:30]
    positAddCore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 131:30]
    positAddCore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 131:30]
    positAddCore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 131:30]
    positAddCore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 131:30]
    positAddCore.io.num2.sign <= exec_num2.sign @[POSIT.scala 131:30]
    node _T_18 = bits(exec_mode, 0, 0) @[POSIT.scala 132:41]
    positAddCore.io.sub <= _T_18 @[POSIT.scala 132:29]
    node _T_19 = eq(exec_inst, UInt<3>("h01")) @[POSIT.scala 133:64]
    node _T_20 = and(exec_valid, _T_19) @[POSIT.scala 133:51]
    node _T_21 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 133:91]
    node _T_22 = and(_T_20, _T_21) @[POSIT.scala 133:87]
    positAddCore.io.input_valid <= _T_22 @[POSIT.scala 133:37]
    node _T_23 = asSInt(comp_num1) @[POSIT.scala 135:43]
    positCompare.io.num1 <= _T_23 @[POSIT.scala 135:30]
    node _T_24 = asSInt(comp_num2) @[POSIT.scala 136:43]
    positCompare.io.num2 <= _T_24 @[POSIT.scala 136:30]
    node _T_25 = eq(exec_inst, UInt<3>("h02")) @[POSIT.scala 137:60]
    node _T_26 = and(exec_valid, _T_25) @[POSIT.scala 137:47]
    node _T_27 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 137:84]
    node _T_28 = and(_T_26, _T_27) @[POSIT.scala 137:80]
    positCompare.io.validIn <= _T_28 @[POSIT.scala 137:33]
    positFMACore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 139:30]
    positFMACore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 139:30]
    positFMACore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 139:30]
    positFMACore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 139:30]
    positFMACore.io.num1.sign <= exec_num1.sign @[POSIT.scala 139:30]
    positFMACore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 140:30]
    positFMACore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 140:30]
    positFMACore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 140:30]
    positFMACore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 140:30]
    positFMACore.io.num2.sign <= exec_num2.sign @[POSIT.scala 140:30]
    positFMACore.io.num3.isNaR <= exec_num3.isNaR @[POSIT.scala 141:30]
    positFMACore.io.num3.isZero <= exec_num3.isZero @[POSIT.scala 141:30]
    positFMACore.io.num3.fraction <= exec_num3.fraction @[POSIT.scala 141:30]
    positFMACore.io.num3.exponent <= exec_num3.exponent @[POSIT.scala 141:30]
    positFMACore.io.num3.sign <= exec_num3.sign @[POSIT.scala 141:30]
    node _T_29 = bits(exec_mode, 0, 0) @[POSIT.scala 142:41]
    positFMACore.io.sub <= _T_29 @[POSIT.scala 142:29]
    node _T_30 = bits(exec_mode, 1, 1) @[POSIT.scala 143:44]
    positFMACore.io.negate <= _T_30 @[POSIT.scala 143:32]
    node _T_31 = eq(exec_inst, UInt<3>("h03")) @[POSIT.scala 144:64]
    node _T_32 = and(exec_valid, _T_31) @[POSIT.scala 144:51]
    node _T_33 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 144:88]
    node _T_34 = and(_T_32, _T_33) @[POSIT.scala 144:84]
    positFMACore.io.input_valid <= _T_34 @[POSIT.scala 144:37]
    positDivSqrtCore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 147:34]
    positDivSqrtCore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 147:34]
    positDivSqrtCore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 147:34]
    positDivSqrtCore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 147:34]
    positDivSqrtCore.io.num1.sign <= exec_num1.sign @[POSIT.scala 147:34]
    positDivSqrtCore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 148:34]
    positDivSqrtCore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 148:34]
    positDivSqrtCore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 148:34]
    positDivSqrtCore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 148:34]
    positDivSqrtCore.io.num2.sign <= exec_num2.sign @[POSIT.scala 148:34]
    node _T_35 = bits(exec_mode, 0, 0) @[POSIT.scala 149:48]
    positDivSqrtCore.io.sqrtOp <= _T_35 @[POSIT.scala 149:36]
    node _T_36 = eq(exec_inst, UInt<3>("h05")) @[POSIT.scala 150:64]
    node _T_37 = and(exec_valid, _T_36) @[POSIT.scala 150:51]
    node _T_38 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 150:92]
    node _T_39 = and(_T_37, _T_38) @[POSIT.scala 150:88]
    positDivSqrtCore.io.validIn <= _T_39 @[POSIT.scala 150:37]
    positMulCore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 153:30]
    positMulCore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 153:30]
    positMulCore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 153:30]
    positMulCore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 153:30]
    positMulCore.io.num1.sign <= exec_num1.sign @[POSIT.scala 153:30]
    positMulCore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 154:30]
    positMulCore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 154:30]
    positMulCore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 154:30]
    positMulCore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 154:30]
    positMulCore.io.num2.sign <= exec_num2.sign @[POSIT.scala 154:30]
    node _T_40 = eq(exec_inst, UInt<3>("h04")) @[POSIT.scala 155:60]
    node _T_41 = and(exec_valid, _T_40) @[POSIT.scala 155:47]
    node _T_42 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 155:84]
    node _T_43 = and(_T_41, _T_42) @[POSIT.scala 155:80]
    positMulCore.io.validIn <= _T_43 @[POSIT.scala 155:33]
    node _T_44 = or(positCompare.io.validOut, positMulCore.io.validOut) @[POSIT.scala 158:54]
    node _T_45 = or(_T_44, positDivSqrtCore.io.validOut_div) @[POSIT.scala 158:80]
    node _T_46 = or(_T_45, positDivSqrtCore.io.validOut_sqrt) @[POSIT.scala 159:58]
    node _T_47 = or(_T_46, positFMACore.io.output_valid) @[POSIT.scala 160:59]
    node _T_48 = or(_T_47, positAddCore.io.output_valid) @[POSIT.scala 160:90]
    new_result_valid <= _T_48 @[POSIT.scala 158:26]
    when io.result.ready : @[POSIT.scala 162:30]
      result_valid <= new_result_valid @[POSIT.scala 166:30]
      node _T_49 = eq(UInt<3>("h05"), exec_inst) @[Mux.scala 68:19]
      node _T_50 = mux(_T_49, positDivSqrtCore.io.out, default_unpacked) @[Mux.scala 68:16]
      node _T_51 = eq(UInt<3>("h04"), exec_inst) @[Mux.scala 68:19]
      node _T_52 = mux(_T_51, positMulCore.io.out, _T_50) @[Mux.scala 68:16]
      node _T_53 = eq(UInt<3>("h03"), exec_inst) @[Mux.scala 68:19]
      node _T_54 = mux(_T_53, positFMACore.io.out, _T_52) @[Mux.scala 68:16]
      node _T_55 = eq(UInt<3>("h01"), exec_inst) @[Mux.scala 68:19]
      node _T_56 = mux(_T_55, positAddCore.io.out, _T_54) @[Mux.scala 68:16]
      result_out.isNaR <= _T_56.isNaR @[POSIT.scala 167:28]
      result_out.isZero <= _T_56.isZero @[POSIT.scala 167:28]
      result_out.fraction <= _T_56.fraction @[POSIT.scala 167:28]
      result_out.exponent <= _T_56.exponent @[POSIT.scala 167:28]
      result_out.sign <= _T_56.sign @[POSIT.scala 167:28]
      node _T_57 = eq(UInt<3>("h05"), exec_inst) @[Mux.scala 68:19]
      node _T_58 = mux(_T_57, positDivSqrtCore.io.stickyBit, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_59 = eq(UInt<3>("h04"), exec_inst) @[Mux.scala 68:19]
      node _T_60 = mux(_T_59, positMulCore.io.stickyBit, _T_58) @[Mux.scala 68:16]
      node _T_61 = eq(UInt<3>("h03"), exec_inst) @[Mux.scala 68:19]
      node _T_62 = mux(_T_61, positFMACore.io.stickyBit, _T_60) @[Mux.scala 68:16]
      node _T_63 = eq(UInt<3>("h01"), exec_inst) @[Mux.scala 68:19]
      node _T_64 = mux(_T_63, positAddCore.io.stickyBit, _T_62) @[Mux.scala 68:16]
      result_stickyBit <= _T_64 @[POSIT.scala 175:34]
      node _T_65 = eq(UInt<3>("h05"), exec_inst) @[Mux.scala 68:19]
      node _T_66 = mux(_T_65, positDivSqrtCore.io.trailingBits, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_67 = eq(UInt<3>("h04"), exec_inst) @[Mux.scala 68:19]
      node _T_68 = mux(_T_67, positMulCore.io.trailingBits, _T_66) @[Mux.scala 68:16]
      node _T_69 = eq(UInt<3>("h03"), exec_inst) @[Mux.scala 68:19]
      node _T_70 = mux(_T_69, positFMACore.io.trailingBits, _T_68) @[Mux.scala 68:16]
      node _T_71 = eq(UInt<3>("h01"), exec_inst) @[Mux.scala 68:19]
      node _T_72 = mux(_T_71, positAddCore.io.trailingBits, _T_70) @[Mux.scala 68:16]
      result_trailingBits <= _T_72 @[POSIT.scala 183:37]
      result_lt <= positCompare.io.lt @[POSIT.scala 190:27]
      result_eq <= positCompare.io.eq @[POSIT.scala 191:27]
      result_gt <= positCompare.io.gt @[POSIT.scala 192:27]
      result_idx <= exec_idx @[POSIT.scala 193:28]
      skip @[POSIT.scala 162:30]
    inst positGenerator of PositGenerator @[POSIT.scala 197:36]
    positGenerator.clock <= clock
    positGenerator.reset <= reset
    positGenerator.io.in.isNaR <= result_out.isNaR @[POSIT.scala 198:40]
    positGenerator.io.in.isZero <= result_out.isZero @[POSIT.scala 198:40]
    positGenerator.io.in.fraction <= result_out.fraction @[POSIT.scala 198:40]
    positGenerator.io.in.exponent <= result_out.exponent @[POSIT.scala 198:40]
    positGenerator.io.in.sign <= result_out.sign @[POSIT.scala 198:40]
    positGenerator.io.trailingBits <= result_trailingBits @[POSIT.scala 199:40]
    positGenerator.io.stickyBit <= result_stickyBit @[POSIT.scala 200:40]
    inst PositGenerator of PositGenerator_1 @[POSIT.scala 203:50]
    PositGenerator.clock <= clock
    PositGenerator.reset <= reset
    inst PositGenerator_1 of PositGenerator_2 @[POSIT.scala 204:47]
    PositGenerator_1.clock <= clock
    PositGenerator_1.reset <= reset
    inst PositGenerator_2 of PositGenerator_3 @[POSIT.scala 205:47]
    PositGenerator_2.clock <= clock
    PositGenerator_2.reset <= reset
    inst PositGenerator_3 of PositGenerator_4 @[POSIT.scala 206:51]
    PositGenerator_3.clock <= clock
    PositGenerator_3.reset <= reset
    PositGenerator.io.in.isNaR <= positAddCore.io.out.isNaR @[POSIT.scala 208:54]
    PositGenerator.io.in.isZero <= positAddCore.io.out.isZero @[POSIT.scala 208:54]
    PositGenerator.io.in.fraction <= positAddCore.io.out.fraction @[POSIT.scala 208:54]
    PositGenerator.io.in.exponent <= positAddCore.io.out.exponent @[POSIT.scala 208:54]
    PositGenerator.io.in.sign <= positAddCore.io.out.sign @[POSIT.scala 208:54]
    PositGenerator.io.trailingBits <= positAddCore.io.trailingBits @[POSIT.scala 209:54]
    PositGenerator.io.stickyBit <= positAddCore.io.stickyBit @[POSIT.scala 210:54]
    PositGenerator_1.io.in.isNaR <= positFMACore.io.out.isNaR @[POSIT.scala 212:51]
    PositGenerator_1.io.in.isZero <= positFMACore.io.out.isZero @[POSIT.scala 212:51]
    PositGenerator_1.io.in.fraction <= positFMACore.io.out.fraction @[POSIT.scala 212:51]
    PositGenerator_1.io.in.exponent <= positFMACore.io.out.exponent @[POSIT.scala 212:51]
    PositGenerator_1.io.in.sign <= positFMACore.io.out.sign @[POSIT.scala 212:51]
    PositGenerator_1.io.trailingBits <= positFMACore.io.trailingBits @[POSIT.scala 213:51]
    PositGenerator_1.io.stickyBit <= positFMACore.io.stickyBit @[POSIT.scala 214:51]
    PositGenerator_2.io.in.isNaR <= positMulCore.io.out.isNaR @[POSIT.scala 216:51]
    PositGenerator_2.io.in.isZero <= positMulCore.io.out.isZero @[POSIT.scala 216:51]
    PositGenerator_2.io.in.fraction <= positMulCore.io.out.fraction @[POSIT.scala 216:51]
    PositGenerator_2.io.in.exponent <= positMulCore.io.out.exponent @[POSIT.scala 216:51]
    PositGenerator_2.io.in.sign <= positMulCore.io.out.sign @[POSIT.scala 216:51]
    PositGenerator_2.io.trailingBits <= positMulCore.io.trailingBits @[POSIT.scala 217:51]
    PositGenerator_2.io.stickyBit <= positMulCore.io.stickyBit @[POSIT.scala 218:51]
    PositGenerator_3.io.in.isNaR <= positDivSqrtCore.io.out.isNaR @[POSIT.scala 220:55]
    PositGenerator_3.io.in.isZero <= positDivSqrtCore.io.out.isZero @[POSIT.scala 220:55]
    PositGenerator_3.io.in.fraction <= positDivSqrtCore.io.out.fraction @[POSIT.scala 220:55]
    PositGenerator_3.io.in.exponent <= positDivSqrtCore.io.out.exponent @[POSIT.scala 220:55]
    PositGenerator_3.io.in.sign <= positDivSqrtCore.io.out.sign @[POSIT.scala 220:55]
    PositGenerator_3.io.trailingBits <= positDivSqrtCore.io.trailingBits @[POSIT.scala 221:55]
    PositGenerator_3.io.stickyBit <= positDivSqrtCore.io.stickyBit @[POSIT.scala 222:55]
    node _T_73 = and(io.request.valid, io.request.ready) @[POSIT.scala 232:39]
    when _T_73 : @[POSIT.scala 232:59]
      node _T_74 = asUInt(reset) @[POSIT.scala 233:31]
      node _T_75 = eq(_T_74, UInt<1>("h00")) @[POSIT.scala 233:31]
      when _T_75 : @[POSIT.scala 233:31]
        printf(clock, UInt<1>(1), "Init:\n") @[POSIT.scala 233:31]
        skip @[POSIT.scala 233:31]
      node _T_76 = asUInt(reset) @[POSIT.scala 234:31]
      node _T_77 = eq(_T_76, UInt<1>("h00")) @[POSIT.scala 234:31]
      when _T_77 : @[POSIT.scala 234:31]
        printf(clock, UInt<1>(1), "\tinit_valid: %d\n", io.request.valid) @[POSIT.scala 234:31]
        skip @[POSIT.scala 234:31]
      node _T_78 = asUInt(reset) @[POSIT.scala 235:31]
      node _T_79 = eq(_T_78, UInt<1>("h00")) @[POSIT.scala 235:31]
      when _T_79 : @[POSIT.scala 235:31]
        printf(clock, UInt<1>(1), "\tinit_inst: %d\n", io.request.bits.inst) @[POSIT.scala 235:31]
        skip @[POSIT.scala 235:31]
      node _T_80 = asUInt(reset) @[POSIT.scala 236:31]
      node _T_81 = eq(_T_80, UInt<1>("h00")) @[POSIT.scala 236:31]
      when _T_81 : @[POSIT.scala 236:31]
        printf(clock, UInt<1>(1), "\tidx: %d\n", io.in_idx) @[POSIT.scala 236:31]
        skip @[POSIT.scala 236:31]
      skip @[POSIT.scala 232:59]
    else : @[POSIT.scala 238:73]
      node _T_82 = eq(result_valid, UInt<1>("h00")) @[POSIT.scala 238:29]
      node _T_83 = eq(exec_valid, UInt<1>("h00")) @[POSIT.scala 238:47]
      node _T_84 = and(_T_82, _T_83) @[POSIT.scala 238:44]
      node _T_85 = and(_T_84, init_valid) @[POSIT.scala 238:59]
      when _T_85 : @[POSIT.scala 238:73]
        node _T_86 = asUInt(reset) @[POSIT.scala 239:31]
        node _T_87 = eq(_T_86, UInt<1>("h00")) @[POSIT.scala 239:31]
        when _T_87 : @[POSIT.scala 239:31]
          printf(clock, UInt<1>(1), "\tinit_valid: %d\n", UInt<1>("h00")) @[POSIT.scala 239:31]
          skip @[POSIT.scala 239:31]
        skip @[POSIT.scala 238:73]
    when new_result_valid : @[POSIT.scala 241:39]
      node _T_88 = asUInt(reset) @[POSIT.scala 242:31]
      node _T_89 = eq(_T_88, UInt<1>("h00")) @[POSIT.scala 242:31]
      when _T_89 : @[POSIT.scala 242:31]
        printf(clock, UInt<1>(1), "new results!\n") @[POSIT.scala 242:31]
        skip @[POSIT.scala 242:31]
      skip @[POSIT.scala 241:39]
    node _T_90 = eq(result_valid, UInt<1>("h00")) @[POSIT.scala 244:24]
    node _T_91 = eq(exec_valid, UInt<1>("h00")) @[POSIT.scala 244:42]
    node _T_92 = and(_T_90, _T_91) @[POSIT.scala 244:39]
    node _T_93 = and(_T_92, init_valid) @[POSIT.scala 244:54]
    when _T_93 : @[POSIT.scala 244:68]
      node _T_94 = asUInt(reset) @[POSIT.scala 245:31]
      node _T_95 = eq(_T_94, UInt<1>("h00")) @[POSIT.scala 245:31]
      when _T_95 : @[POSIT.scala 245:31]
        printf(clock, UInt<1>(1), "Exec:\n") @[POSIT.scala 245:31]
        skip @[POSIT.scala 245:31]
      node _T_96 = asUInt(reset) @[POSIT.scala 246:31]
      node _T_97 = eq(_T_96, UInt<1>("h00")) @[POSIT.scala 246:31]
      when _T_97 : @[POSIT.scala 246:31]
        printf(clock, UInt<1>(1), "\t exec_valid: %d\n", init_valid) @[POSIT.scala 246:31]
        skip @[POSIT.scala 246:31]
      node _T_98 = asUInt(reset) @[POSIT.scala 247:31]
      node _T_99 = eq(_T_98, UInt<1>("h00")) @[POSIT.scala 247:31]
      when _T_99 : @[POSIT.scala 247:31]
        printf(clock, UInt<1>(1), "\t exec_inst: %d\n", init_inst) @[POSIT.scala 247:31]
        skip @[POSIT.scala 247:31]
      node _T_100 = asUInt(reset) @[POSIT.scala 248:31]
      node _T_101 = eq(_T_100, UInt<1>("h00")) @[POSIT.scala 248:31]
      when _T_101 : @[POSIT.scala 248:31]
        printf(clock, UInt<1>(1), "\t exec_idx: %d\n", init_idx) @[POSIT.scala 248:31]
        skip @[POSIT.scala 248:31]
      skip @[POSIT.scala 244:68]
    else : @[POSIT.scala 249:45]
      when new_result_valid : @[POSIT.scala 249:45]
        node _T_102 = asUInt(reset) @[POSIT.scala 250:31]
        node _T_103 = eq(_T_102, UInt<1>("h00")) @[POSIT.scala 250:31]
        when _T_103 : @[POSIT.scala 250:31]
          printf(clock, UInt<1>(1), "\t exec_valid: %d\n", UInt<1>("h00")) @[POSIT.scala 250:31]
          skip @[POSIT.scala 250:31]
        skip @[POSIT.scala 249:45]
    when new_result_valid : @[POSIT.scala 253:39]
      node _T_104 = asUInt(reset) @[POSIT.scala 254:31]
      node _T_105 = eq(_T_104, UInt<1>("h00")) @[POSIT.scala 254:31]
      when _T_105 : @[POSIT.scala 254:31]
        printf(clock, UInt<1>(1), "\tdispatched: %d\n", UInt<1>("h00")) @[POSIT.scala 254:31]
        skip @[POSIT.scala 254:31]
      skip @[POSIT.scala 253:39]
    else : @[POSIT.scala 255:39]
      when exec_valid : @[POSIT.scala 255:39]
        node _T_106 = asUInt(reset) @[POSIT.scala 256:31]
        node _T_107 = eq(_T_106, UInt<1>("h00")) @[POSIT.scala 256:31]
        when _T_107 : @[POSIT.scala 256:31]
          printf(clock, UInt<1>(1), "\tdispatched: %d\n", UInt<1>("h01")) @[POSIT.scala 256:31]
          skip @[POSIT.scala 256:31]
        skip @[POSIT.scala 255:39]
    when io.result.valid : @[POSIT.scala 259:38]
      node _T_108 = asUInt(reset) @[POSIT.scala 260:31]
      node _T_109 = eq(_T_108, UInt<1>("h00")) @[POSIT.scala 260:31]
      when _T_109 : @[POSIT.scala 260:31]
        printf(clock, UInt<1>(1), "valid idx: %d\n", io.out_idx) @[POSIT.scala 260:31]
        skip @[POSIT.scala 260:31]
      skip @[POSIT.scala 259:38]
    node _T_110 = neq(positGenerator.io.out, UInt<1>("h00")) @[common.scala 61:41]
    node _T_111 = not(_T_110) @[common.scala 61:33]
    node _T_112 = or(result_out.isZero, _T_111) @[POSIT.scala 265:52]
    io.result.bits.isZero <= _T_112 @[POSIT.scala 265:31]
    node _T_113 = bits(positGenerator.io.out, 31, 31) @[common.scala 27:43]
    node _T_114 = bits(positGenerator.io.out, 30, 0) @[common.scala 27:57]
    node _T_115 = neq(_T_114, UInt<1>("h00")) @[common.scala 27:71]
    node _T_116 = not(_T_115) @[common.scala 27:53]
    node _T_117 = and(_T_113, _T_116) @[common.scala 27:51]
    node _T_118 = or(result_out.isNaR, _T_117) @[POSIT.scala 266:52]
    io.result.bits.isNaR <= _T_118 @[POSIT.scala 266:31]
    io.result.bits.out <= positGenerator.io.out @[POSIT.scala 267:31]
    io.result.bits.lt <= result_lt @[POSIT.scala 268:27]
    io.result.bits.eq <= result_eq @[POSIT.scala 269:27]
    io.result.bits.gt <= result_gt @[POSIT.scala 270:27]
    io.result.bits.exceptions <= positDivSqrtCore.io.exceptions @[POSIT.scala 271:35]
    io.out_idx <= result_idx @[POSIT.scala 272:20]
    io.result.valid <= result_valid @[POSIT.scala 274:25]
    
  module DispatchArbiter : 
    input clock : Clock
    input reset : Reset
    output io : {flip validity : UInt<8>, flip priority : UInt<3>, chosen : UInt<3>, hasChosen : UInt<1>}
    
    wire afterPriority : UInt<1>[8] @[DispatchArbiter.scala 14:33]
    wire beforePriority : UInt<1>[8] @[DispatchArbiter.scala 15:34]
    node _T = geq(UInt<3>("h07"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_1 = bits(io.validity, 7, 7) @[DispatchArbiter.scala 19:64]
    node _T_2 = mux(_T, _T_1, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[7] <= _T_2 @[DispatchArbiter.scala 18:34]
    node _T_3 = lt(UInt<3>("h07"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_4 = bits(io.validity, 7, 7) @[DispatchArbiter.scala 21:63]
    node _T_5 = mux(_T_3, _T_4, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[7] <= _T_5 @[DispatchArbiter.scala 20:35]
    node _T_6 = geq(UInt<3>("h06"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_7 = bits(io.validity, 6, 6) @[DispatchArbiter.scala 19:64]
    node _T_8 = mux(_T_6, _T_7, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[6] <= _T_8 @[DispatchArbiter.scala 18:34]
    node _T_9 = lt(UInt<3>("h06"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_10 = bits(io.validity, 6, 6) @[DispatchArbiter.scala 21:63]
    node _T_11 = mux(_T_9, _T_10, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[6] <= _T_11 @[DispatchArbiter.scala 20:35]
    node _T_12 = geq(UInt<3>("h05"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_13 = bits(io.validity, 5, 5) @[DispatchArbiter.scala 19:64]
    node _T_14 = mux(_T_12, _T_13, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[5] <= _T_14 @[DispatchArbiter.scala 18:34]
    node _T_15 = lt(UInt<3>("h05"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_16 = bits(io.validity, 5, 5) @[DispatchArbiter.scala 21:63]
    node _T_17 = mux(_T_15, _T_16, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[5] <= _T_17 @[DispatchArbiter.scala 20:35]
    node _T_18 = geq(UInt<3>("h04"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_19 = bits(io.validity, 4, 4) @[DispatchArbiter.scala 19:64]
    node _T_20 = mux(_T_18, _T_19, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[4] <= _T_20 @[DispatchArbiter.scala 18:34]
    node _T_21 = lt(UInt<3>("h04"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_22 = bits(io.validity, 4, 4) @[DispatchArbiter.scala 21:63]
    node _T_23 = mux(_T_21, _T_22, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[4] <= _T_23 @[DispatchArbiter.scala 20:35]
    node _T_24 = geq(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_25 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 19:64]
    node _T_26 = mux(_T_24, _T_25, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[3] <= _T_26 @[DispatchArbiter.scala 18:34]
    node _T_27 = lt(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_28 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 21:63]
    node _T_29 = mux(_T_27, _T_28, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[3] <= _T_29 @[DispatchArbiter.scala 20:35]
    node _T_30 = geq(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_31 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 19:64]
    node _T_32 = mux(_T_30, _T_31, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[2] <= _T_32 @[DispatchArbiter.scala 18:34]
    node _T_33 = lt(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_34 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 21:63]
    node _T_35 = mux(_T_33, _T_34, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[2] <= _T_35 @[DispatchArbiter.scala 20:35]
    node _T_36 = geq(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_37 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 19:64]
    node _T_38 = mux(_T_36, _T_37, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[1] <= _T_38 @[DispatchArbiter.scala 18:34]
    node _T_39 = lt(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_40 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 21:63]
    node _T_41 = mux(_T_39, _T_40, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[1] <= _T_41 @[DispatchArbiter.scala 20:35]
    node _T_42 = geq(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_43 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 19:64]
    node _T_44 = mux(_T_42, _T_43, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[0] <= _T_44 @[DispatchArbiter.scala 18:34]
    node _T_45 = lt(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_46 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 21:63]
    node _T_47 = mux(_T_45, _T_46, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[0] <= _T_47 @[DispatchArbiter.scala 20:35]
    wire afterPriorityChosen : UInt<3> @[DispatchArbiter.scala 24:33]
    afterPriorityChosen <= UInt<3>("h07") @[DispatchArbiter.scala 25:23]
    wire beforePriorityChosen : UInt<3> @[DispatchArbiter.scala 26:34]
    beforePriorityChosen <= UInt<3>("h07") @[DispatchArbiter.scala 27:24]
    when afterPriority[6] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h06") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[6] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<3>("h06") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[5] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h05") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[5] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<3>("h05") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[4] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h04") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[4] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<3>("h04") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[3] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[3] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[2] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[2] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[1] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[1] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[0] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[0] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    node _T_48 = or(UInt<1>("h00"), afterPriority[0]) @[DispatchArbiter.scala 37:54]
    node _T_49 = or(_T_48, afterPriority[1]) @[DispatchArbiter.scala 37:54]
    node _T_50 = or(_T_49, afterPriority[2]) @[DispatchArbiter.scala 37:54]
    node _T_51 = or(_T_50, afterPriority[3]) @[DispatchArbiter.scala 37:54]
    node _T_52 = or(_T_51, afterPriority[4]) @[DispatchArbiter.scala 37:54]
    node _T_53 = or(_T_52, afterPriority[5]) @[DispatchArbiter.scala 37:54]
    node _T_54 = or(_T_53, afterPriority[6]) @[DispatchArbiter.scala 37:54]
    node afterPriorityExist = or(_T_54, afterPriority[7]) @[DispatchArbiter.scala 37:54]
    node _T_55 = or(UInt<1>("h00"), beforePriority[0]) @[DispatchArbiter.scala 38:56]
    node _T_56 = or(_T_55, beforePriority[1]) @[DispatchArbiter.scala 38:56]
    node _T_57 = or(_T_56, beforePriority[2]) @[DispatchArbiter.scala 38:56]
    node _T_58 = or(_T_57, beforePriority[3]) @[DispatchArbiter.scala 38:56]
    node _T_59 = or(_T_58, beforePriority[4]) @[DispatchArbiter.scala 38:56]
    node _T_60 = or(_T_59, beforePriority[5]) @[DispatchArbiter.scala 38:56]
    node _T_61 = or(_T_60, beforePriority[6]) @[DispatchArbiter.scala 38:56]
    node beforePriorityExist = or(_T_61, beforePriority[7]) @[DispatchArbiter.scala 38:56]
    node _T_62 = or(afterPriorityExist, beforePriorityExist) @[DispatchArbiter.scala 40:44]
    io.hasChosen <= _T_62 @[DispatchArbiter.scala 40:22]
    node _T_63 = mux(afterPriorityExist, afterPriorityChosen, beforePriorityChosen) @[DispatchArbiter.scala 41:25]
    io.chosen <= _T_63 @[DispatchArbiter.scala 41:19]
    
  module DispatchArbiter_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip validity : UInt<24>, flip priority : UInt<5>, chosen : UInt<5>, hasChosen : UInt<1>}
    
    wire afterPriority : UInt<1>[24] @[DispatchArbiter.scala 14:33]
    wire beforePriority : UInt<1>[24] @[DispatchArbiter.scala 15:34]
    node _T = geq(UInt<5>("h017"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_1 = bits(io.validity, 23, 23) @[DispatchArbiter.scala 19:64]
    node _T_2 = mux(_T, _T_1, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[23] <= _T_2 @[DispatchArbiter.scala 18:34]
    node _T_3 = lt(UInt<5>("h017"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_4 = bits(io.validity, 23, 23) @[DispatchArbiter.scala 21:63]
    node _T_5 = mux(_T_3, _T_4, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[23] <= _T_5 @[DispatchArbiter.scala 20:35]
    node _T_6 = geq(UInt<5>("h016"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_7 = bits(io.validity, 22, 22) @[DispatchArbiter.scala 19:64]
    node _T_8 = mux(_T_6, _T_7, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[22] <= _T_8 @[DispatchArbiter.scala 18:34]
    node _T_9 = lt(UInt<5>("h016"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_10 = bits(io.validity, 22, 22) @[DispatchArbiter.scala 21:63]
    node _T_11 = mux(_T_9, _T_10, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[22] <= _T_11 @[DispatchArbiter.scala 20:35]
    node _T_12 = geq(UInt<5>("h015"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_13 = bits(io.validity, 21, 21) @[DispatchArbiter.scala 19:64]
    node _T_14 = mux(_T_12, _T_13, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[21] <= _T_14 @[DispatchArbiter.scala 18:34]
    node _T_15 = lt(UInt<5>("h015"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_16 = bits(io.validity, 21, 21) @[DispatchArbiter.scala 21:63]
    node _T_17 = mux(_T_15, _T_16, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[21] <= _T_17 @[DispatchArbiter.scala 20:35]
    node _T_18 = geq(UInt<5>("h014"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_19 = bits(io.validity, 20, 20) @[DispatchArbiter.scala 19:64]
    node _T_20 = mux(_T_18, _T_19, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[20] <= _T_20 @[DispatchArbiter.scala 18:34]
    node _T_21 = lt(UInt<5>("h014"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_22 = bits(io.validity, 20, 20) @[DispatchArbiter.scala 21:63]
    node _T_23 = mux(_T_21, _T_22, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[20] <= _T_23 @[DispatchArbiter.scala 20:35]
    node _T_24 = geq(UInt<5>("h013"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_25 = bits(io.validity, 19, 19) @[DispatchArbiter.scala 19:64]
    node _T_26 = mux(_T_24, _T_25, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[19] <= _T_26 @[DispatchArbiter.scala 18:34]
    node _T_27 = lt(UInt<5>("h013"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_28 = bits(io.validity, 19, 19) @[DispatchArbiter.scala 21:63]
    node _T_29 = mux(_T_27, _T_28, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[19] <= _T_29 @[DispatchArbiter.scala 20:35]
    node _T_30 = geq(UInt<5>("h012"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_31 = bits(io.validity, 18, 18) @[DispatchArbiter.scala 19:64]
    node _T_32 = mux(_T_30, _T_31, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[18] <= _T_32 @[DispatchArbiter.scala 18:34]
    node _T_33 = lt(UInt<5>("h012"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_34 = bits(io.validity, 18, 18) @[DispatchArbiter.scala 21:63]
    node _T_35 = mux(_T_33, _T_34, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[18] <= _T_35 @[DispatchArbiter.scala 20:35]
    node _T_36 = geq(UInt<5>("h011"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_37 = bits(io.validity, 17, 17) @[DispatchArbiter.scala 19:64]
    node _T_38 = mux(_T_36, _T_37, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[17] <= _T_38 @[DispatchArbiter.scala 18:34]
    node _T_39 = lt(UInt<5>("h011"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_40 = bits(io.validity, 17, 17) @[DispatchArbiter.scala 21:63]
    node _T_41 = mux(_T_39, _T_40, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[17] <= _T_41 @[DispatchArbiter.scala 20:35]
    node _T_42 = geq(UInt<5>("h010"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_43 = bits(io.validity, 16, 16) @[DispatchArbiter.scala 19:64]
    node _T_44 = mux(_T_42, _T_43, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[16] <= _T_44 @[DispatchArbiter.scala 18:34]
    node _T_45 = lt(UInt<5>("h010"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_46 = bits(io.validity, 16, 16) @[DispatchArbiter.scala 21:63]
    node _T_47 = mux(_T_45, _T_46, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[16] <= _T_47 @[DispatchArbiter.scala 20:35]
    node _T_48 = geq(UInt<4>("h0f"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_49 = bits(io.validity, 15, 15) @[DispatchArbiter.scala 19:64]
    node _T_50 = mux(_T_48, _T_49, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[15] <= _T_50 @[DispatchArbiter.scala 18:34]
    node _T_51 = lt(UInt<4>("h0f"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_52 = bits(io.validity, 15, 15) @[DispatchArbiter.scala 21:63]
    node _T_53 = mux(_T_51, _T_52, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[15] <= _T_53 @[DispatchArbiter.scala 20:35]
    node _T_54 = geq(UInt<4>("h0e"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_55 = bits(io.validity, 14, 14) @[DispatchArbiter.scala 19:64]
    node _T_56 = mux(_T_54, _T_55, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[14] <= _T_56 @[DispatchArbiter.scala 18:34]
    node _T_57 = lt(UInt<4>("h0e"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_58 = bits(io.validity, 14, 14) @[DispatchArbiter.scala 21:63]
    node _T_59 = mux(_T_57, _T_58, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[14] <= _T_59 @[DispatchArbiter.scala 20:35]
    node _T_60 = geq(UInt<4>("h0d"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_61 = bits(io.validity, 13, 13) @[DispatchArbiter.scala 19:64]
    node _T_62 = mux(_T_60, _T_61, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[13] <= _T_62 @[DispatchArbiter.scala 18:34]
    node _T_63 = lt(UInt<4>("h0d"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_64 = bits(io.validity, 13, 13) @[DispatchArbiter.scala 21:63]
    node _T_65 = mux(_T_63, _T_64, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[13] <= _T_65 @[DispatchArbiter.scala 20:35]
    node _T_66 = geq(UInt<4>("h0c"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_67 = bits(io.validity, 12, 12) @[DispatchArbiter.scala 19:64]
    node _T_68 = mux(_T_66, _T_67, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[12] <= _T_68 @[DispatchArbiter.scala 18:34]
    node _T_69 = lt(UInt<4>("h0c"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_70 = bits(io.validity, 12, 12) @[DispatchArbiter.scala 21:63]
    node _T_71 = mux(_T_69, _T_70, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[12] <= _T_71 @[DispatchArbiter.scala 20:35]
    node _T_72 = geq(UInt<4>("h0b"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_73 = bits(io.validity, 11, 11) @[DispatchArbiter.scala 19:64]
    node _T_74 = mux(_T_72, _T_73, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[11] <= _T_74 @[DispatchArbiter.scala 18:34]
    node _T_75 = lt(UInt<4>("h0b"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_76 = bits(io.validity, 11, 11) @[DispatchArbiter.scala 21:63]
    node _T_77 = mux(_T_75, _T_76, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[11] <= _T_77 @[DispatchArbiter.scala 20:35]
    node _T_78 = geq(UInt<4>("h0a"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_79 = bits(io.validity, 10, 10) @[DispatchArbiter.scala 19:64]
    node _T_80 = mux(_T_78, _T_79, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[10] <= _T_80 @[DispatchArbiter.scala 18:34]
    node _T_81 = lt(UInt<4>("h0a"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_82 = bits(io.validity, 10, 10) @[DispatchArbiter.scala 21:63]
    node _T_83 = mux(_T_81, _T_82, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[10] <= _T_83 @[DispatchArbiter.scala 20:35]
    node _T_84 = geq(UInt<4>("h09"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_85 = bits(io.validity, 9, 9) @[DispatchArbiter.scala 19:64]
    node _T_86 = mux(_T_84, _T_85, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[9] <= _T_86 @[DispatchArbiter.scala 18:34]
    node _T_87 = lt(UInt<4>("h09"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_88 = bits(io.validity, 9, 9) @[DispatchArbiter.scala 21:63]
    node _T_89 = mux(_T_87, _T_88, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[9] <= _T_89 @[DispatchArbiter.scala 20:35]
    node _T_90 = geq(UInt<4>("h08"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_91 = bits(io.validity, 8, 8) @[DispatchArbiter.scala 19:64]
    node _T_92 = mux(_T_90, _T_91, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[8] <= _T_92 @[DispatchArbiter.scala 18:34]
    node _T_93 = lt(UInt<4>("h08"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_94 = bits(io.validity, 8, 8) @[DispatchArbiter.scala 21:63]
    node _T_95 = mux(_T_93, _T_94, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[8] <= _T_95 @[DispatchArbiter.scala 20:35]
    node _T_96 = geq(UInt<3>("h07"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_97 = bits(io.validity, 7, 7) @[DispatchArbiter.scala 19:64]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[7] <= _T_98 @[DispatchArbiter.scala 18:34]
    node _T_99 = lt(UInt<3>("h07"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_100 = bits(io.validity, 7, 7) @[DispatchArbiter.scala 21:63]
    node _T_101 = mux(_T_99, _T_100, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[7] <= _T_101 @[DispatchArbiter.scala 20:35]
    node _T_102 = geq(UInt<3>("h06"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_103 = bits(io.validity, 6, 6) @[DispatchArbiter.scala 19:64]
    node _T_104 = mux(_T_102, _T_103, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[6] <= _T_104 @[DispatchArbiter.scala 18:34]
    node _T_105 = lt(UInt<3>("h06"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_106 = bits(io.validity, 6, 6) @[DispatchArbiter.scala 21:63]
    node _T_107 = mux(_T_105, _T_106, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[6] <= _T_107 @[DispatchArbiter.scala 20:35]
    node _T_108 = geq(UInt<3>("h05"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_109 = bits(io.validity, 5, 5) @[DispatchArbiter.scala 19:64]
    node _T_110 = mux(_T_108, _T_109, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[5] <= _T_110 @[DispatchArbiter.scala 18:34]
    node _T_111 = lt(UInt<3>("h05"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_112 = bits(io.validity, 5, 5) @[DispatchArbiter.scala 21:63]
    node _T_113 = mux(_T_111, _T_112, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[5] <= _T_113 @[DispatchArbiter.scala 20:35]
    node _T_114 = geq(UInt<3>("h04"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_115 = bits(io.validity, 4, 4) @[DispatchArbiter.scala 19:64]
    node _T_116 = mux(_T_114, _T_115, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[4] <= _T_116 @[DispatchArbiter.scala 18:34]
    node _T_117 = lt(UInt<3>("h04"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_118 = bits(io.validity, 4, 4) @[DispatchArbiter.scala 21:63]
    node _T_119 = mux(_T_117, _T_118, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[4] <= _T_119 @[DispatchArbiter.scala 20:35]
    node _T_120 = geq(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_121 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 19:64]
    node _T_122 = mux(_T_120, _T_121, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[3] <= _T_122 @[DispatchArbiter.scala 18:34]
    node _T_123 = lt(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_124 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 21:63]
    node _T_125 = mux(_T_123, _T_124, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[3] <= _T_125 @[DispatchArbiter.scala 20:35]
    node _T_126 = geq(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_127 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 19:64]
    node _T_128 = mux(_T_126, _T_127, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[2] <= _T_128 @[DispatchArbiter.scala 18:34]
    node _T_129 = lt(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_130 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 21:63]
    node _T_131 = mux(_T_129, _T_130, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[2] <= _T_131 @[DispatchArbiter.scala 20:35]
    node _T_132 = geq(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_133 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 19:64]
    node _T_134 = mux(_T_132, _T_133, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[1] <= _T_134 @[DispatchArbiter.scala 18:34]
    node _T_135 = lt(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_136 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 21:63]
    node _T_137 = mux(_T_135, _T_136, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[1] <= _T_137 @[DispatchArbiter.scala 20:35]
    node _T_138 = geq(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_139 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 19:64]
    node _T_140 = mux(_T_138, _T_139, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[0] <= _T_140 @[DispatchArbiter.scala 18:34]
    node _T_141 = lt(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_142 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 21:63]
    node _T_143 = mux(_T_141, _T_142, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[0] <= _T_143 @[DispatchArbiter.scala 20:35]
    wire afterPriorityChosen : UInt<5> @[DispatchArbiter.scala 24:33]
    afterPriorityChosen <= UInt<5>("h017") @[DispatchArbiter.scala 25:23]
    wire beforePriorityChosen : UInt<5> @[DispatchArbiter.scala 26:34]
    beforePriorityChosen <= UInt<5>("h017") @[DispatchArbiter.scala 27:24]
    when afterPriority[22] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h016") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[22] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<5>("h016") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[21] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h015") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[21] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<5>("h015") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[20] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h014") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[20] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<5>("h014") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[19] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h013") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[19] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<5>("h013") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[18] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h012") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[18] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<5>("h012") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[17] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h011") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[17] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<5>("h011") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[16] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h010") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[16] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<5>("h010") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[15] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0f") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[15] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h0f") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[14] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0e") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[14] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h0e") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[13] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0d") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[13] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h0d") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[12] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0c") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[12] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h0c") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[11] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0b") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[11] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h0b") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[10] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0a") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[10] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h0a") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[9] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h09") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[9] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h09") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[8] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h08") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[8] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h08") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[7] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h07") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[7] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<3>("h07") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[6] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h06") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[6] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<3>("h06") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[5] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h05") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[5] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<3>("h05") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[4] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h04") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[4] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<3>("h04") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[3] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[3] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[2] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[2] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[1] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[1] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[0] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[0] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    node _T_144 = or(UInt<1>("h00"), afterPriority[0]) @[DispatchArbiter.scala 37:54]
    node _T_145 = or(_T_144, afterPriority[1]) @[DispatchArbiter.scala 37:54]
    node _T_146 = or(_T_145, afterPriority[2]) @[DispatchArbiter.scala 37:54]
    node _T_147 = or(_T_146, afterPriority[3]) @[DispatchArbiter.scala 37:54]
    node _T_148 = or(_T_147, afterPriority[4]) @[DispatchArbiter.scala 37:54]
    node _T_149 = or(_T_148, afterPriority[5]) @[DispatchArbiter.scala 37:54]
    node _T_150 = or(_T_149, afterPriority[6]) @[DispatchArbiter.scala 37:54]
    node _T_151 = or(_T_150, afterPriority[7]) @[DispatchArbiter.scala 37:54]
    node _T_152 = or(_T_151, afterPriority[8]) @[DispatchArbiter.scala 37:54]
    node _T_153 = or(_T_152, afterPriority[9]) @[DispatchArbiter.scala 37:54]
    node _T_154 = or(_T_153, afterPriority[10]) @[DispatchArbiter.scala 37:54]
    node _T_155 = or(_T_154, afterPriority[11]) @[DispatchArbiter.scala 37:54]
    node _T_156 = or(_T_155, afterPriority[12]) @[DispatchArbiter.scala 37:54]
    node _T_157 = or(_T_156, afterPriority[13]) @[DispatchArbiter.scala 37:54]
    node _T_158 = or(_T_157, afterPriority[14]) @[DispatchArbiter.scala 37:54]
    node _T_159 = or(_T_158, afterPriority[15]) @[DispatchArbiter.scala 37:54]
    node _T_160 = or(_T_159, afterPriority[16]) @[DispatchArbiter.scala 37:54]
    node _T_161 = or(_T_160, afterPriority[17]) @[DispatchArbiter.scala 37:54]
    node _T_162 = or(_T_161, afterPriority[18]) @[DispatchArbiter.scala 37:54]
    node _T_163 = or(_T_162, afterPriority[19]) @[DispatchArbiter.scala 37:54]
    node _T_164 = or(_T_163, afterPriority[20]) @[DispatchArbiter.scala 37:54]
    node _T_165 = or(_T_164, afterPriority[21]) @[DispatchArbiter.scala 37:54]
    node _T_166 = or(_T_165, afterPriority[22]) @[DispatchArbiter.scala 37:54]
    node afterPriorityExist = or(_T_166, afterPriority[23]) @[DispatchArbiter.scala 37:54]
    node _T_167 = or(UInt<1>("h00"), beforePriority[0]) @[DispatchArbiter.scala 38:56]
    node _T_168 = or(_T_167, beforePriority[1]) @[DispatchArbiter.scala 38:56]
    node _T_169 = or(_T_168, beforePriority[2]) @[DispatchArbiter.scala 38:56]
    node _T_170 = or(_T_169, beforePriority[3]) @[DispatchArbiter.scala 38:56]
    node _T_171 = or(_T_170, beforePriority[4]) @[DispatchArbiter.scala 38:56]
    node _T_172 = or(_T_171, beforePriority[5]) @[DispatchArbiter.scala 38:56]
    node _T_173 = or(_T_172, beforePriority[6]) @[DispatchArbiter.scala 38:56]
    node _T_174 = or(_T_173, beforePriority[7]) @[DispatchArbiter.scala 38:56]
    node _T_175 = or(_T_174, beforePriority[8]) @[DispatchArbiter.scala 38:56]
    node _T_176 = or(_T_175, beforePriority[9]) @[DispatchArbiter.scala 38:56]
    node _T_177 = or(_T_176, beforePriority[10]) @[DispatchArbiter.scala 38:56]
    node _T_178 = or(_T_177, beforePriority[11]) @[DispatchArbiter.scala 38:56]
    node _T_179 = or(_T_178, beforePriority[12]) @[DispatchArbiter.scala 38:56]
    node _T_180 = or(_T_179, beforePriority[13]) @[DispatchArbiter.scala 38:56]
    node _T_181 = or(_T_180, beforePriority[14]) @[DispatchArbiter.scala 38:56]
    node _T_182 = or(_T_181, beforePriority[15]) @[DispatchArbiter.scala 38:56]
    node _T_183 = or(_T_182, beforePriority[16]) @[DispatchArbiter.scala 38:56]
    node _T_184 = or(_T_183, beforePriority[17]) @[DispatchArbiter.scala 38:56]
    node _T_185 = or(_T_184, beforePriority[18]) @[DispatchArbiter.scala 38:56]
    node _T_186 = or(_T_185, beforePriority[19]) @[DispatchArbiter.scala 38:56]
    node _T_187 = or(_T_186, beforePriority[20]) @[DispatchArbiter.scala 38:56]
    node _T_188 = or(_T_187, beforePriority[21]) @[DispatchArbiter.scala 38:56]
    node _T_189 = or(_T_188, beforePriority[22]) @[DispatchArbiter.scala 38:56]
    node beforePriorityExist = or(_T_189, beforePriority[23]) @[DispatchArbiter.scala 38:56]
    node _T_190 = or(afterPriorityExist, beforePriorityExist) @[DispatchArbiter.scala 40:44]
    io.hasChosen <= _T_190 @[DispatchArbiter.scala 40:22]
    node _T_191 = mux(afterPriorityExist, afterPriorityChosen, beforePriorityChosen) @[DispatchArbiter.scala 41:25]
    io.chosen <= _T_191 @[DispatchArbiter.scala 41:19]
    
  module POSIT_Locality : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {operands : {value : UInt<32>, mode : UInt<2>}[3], inst : UInt<3>, mode : UInt<2>, wr_addr : UInt<8>}}, mem_write : {flip ready : UInt<1>, valid : UInt<1>, bits : {result : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}, wr_addr : UInt<8>}}, mem_read : {req_valid : UInt<1>, req_addr : UInt<8>, flip data : UInt<32>, flip resp_valid : UInt<1>, flip resp_tag : UInt<8>}}
    
    inst pe of Posit @[POSIT_Locality.scala 10:24]
    pe.clock <= clock
    pe.reset <= reset
    wire _T : {entries : {operands : {value : UInt<32>, mode : UInt<2>}[3], completed : UInt<1>, valid : UInt<1>, dispatched : UInt<1>, written : UInt<1>, wr_addr : UInt<8>, request : {operands : {value : UInt<32>, mode : UInt<2>}[3], inst : UInt<3>, mode : UInt<2>, wr_addr : UInt<8>, inFetch : UInt<1>[3]}, result : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}}[8]} @[POSIT_Locality.scala 14:57]
    _T.entries[0].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].written <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].valid <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].completed <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[0].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].written <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].valid <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].completed <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[1].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].written <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].valid <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].completed <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[2].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].written <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].valid <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].completed <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[3].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].written <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].valid <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].completed <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[4].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].written <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].valid <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].completed <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[5].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].written <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].valid <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].completed <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[6].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].written <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].valid <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].completed <= UInt<1>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 14:57]
    _T.entries[7].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 14:57]
    reg rb : {entries : {operands : {value : UInt<32>, mode : UInt<2>}[3], completed : UInt<1>, valid : UInt<1>, dispatched : UInt<1>, written : UInt<1>, wr_addr : UInt<8>, request : {operands : {value : UInt<32>, mode : UInt<2>}[3], inst : UInt<3>, mode : UInt<2>, wr_addr : UInt<8>, inFetch : UInt<1>[3]}, result : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}}[8]}, clock with : (reset => (reset, _T)) @[POSIT_Locality.scala 14:25]
    wire new_input_log : UInt<1> @[POSIT_Locality.scala 17:33]
    node _T_1 = bits(io.request.bits.wr_addr, 2, 0)
    node _T_2 = bits(io.request.bits.wr_addr, 2, 0)
    node _T_3 = eq(rb.entries[_T_2].valid, UInt<1>("h00")) @[POSIT_Locality.scala 19:80]
    node _T_4 = or(rb.entries[_T_1].written, _T_3) @[POSIT_Locality.scala 19:77]
    node _T_5 = and(io.request.valid, _T_4) @[POSIT_Locality.scala 19:43]
    new_input_log <= _T_5 @[POSIT_Locality.scala 19:23]
    node _T_6 = bits(io.request.bits.wr_addr, 2, 0)
    node _T_7 = bits(io.request.bits.wr_addr, 2, 0)
    node _T_8 = eq(rb.entries[_T_7].valid, UInt<1>("h00")) @[POSIT_Locality.scala 22:63]
    node _T_9 = or(rb.entries[_T_6].written, _T_8) @[POSIT_Locality.scala 22:59]
    io.request.ready <= _T_9 @[POSIT_Locality.scala 22:26]
    when new_input_log : @[POSIT_Locality.scala 23:28]
      node _T_10 = bits(reset, 0, 0) @[POSIT_Locality.scala 24:23]
      node _T_11 = eq(_T_10, UInt<1>("h00")) @[POSIT_Locality.scala 24:23]
      when _T_11 : @[POSIT_Locality.scala 24:23]
        printf(clock, UInt<1>(1), "written new entry\n") @[POSIT_Locality.scala 24:23]
        skip @[POSIT_Locality.scala 24:23]
      node _T_12 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_12].completed <= UInt<1>("h00") @[POSIT_Locality.scala 25:49]
      node _T_13 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_13].valid <= UInt<1>("h01") @[POSIT_Locality.scala 26:45]
      node _T_14 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_14].written <= UInt<1>("h00") @[POSIT_Locality.scala 27:47]
      node _T_15 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_15].wr_addr <= io.request.bits.wr_addr @[POSIT_Locality.scala 28:47]
      node _T_16 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_16].request.inst <= io.request.bits.inst @[POSIT_Locality.scala 29:52]
      node _T_17 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_17].request.mode <= io.request.bits.mode @[POSIT_Locality.scala 30:52]
      node _T_18 = bits(reset, 0, 0) @[POSIT_Locality.scala 32:31]
      node _T_19 = eq(_T_18, UInt<1>("h00")) @[POSIT_Locality.scala 32:31]
      when _T_19 : @[POSIT_Locality.scala 32:31]
        printf(clock, UInt<1>(1), "op%d: mode: %d value: %d\n", UInt<1>("h00"), io.request.bits.operands[0].mode, io.request.bits.operands[0].value) @[POSIT_Locality.scala 32:31]
        skip @[POSIT_Locality.scala 32:31]
      node _T_20 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_20].request.operands[0].value <= io.request.bits.operands[0].value @[POSIT_Locality.scala 33:73]
      node _T_21 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_21].request.operands[0].mode <= io.request.bits.operands[0].mode @[POSIT_Locality.scala 34:72]
      node _T_22 = bits(reset, 0, 0) @[POSIT_Locality.scala 32:31]
      node _T_23 = eq(_T_22, UInt<1>("h00")) @[POSIT_Locality.scala 32:31]
      when _T_23 : @[POSIT_Locality.scala 32:31]
        printf(clock, UInt<1>(1), "op%d: mode: %d value: %d\n", UInt<1>("h01"), io.request.bits.operands[1].mode, io.request.bits.operands[1].value) @[POSIT_Locality.scala 32:31]
        skip @[POSIT_Locality.scala 32:31]
      node _T_24 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_24].request.operands[1].value <= io.request.bits.operands[1].value @[POSIT_Locality.scala 33:73]
      node _T_25 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_25].request.operands[1].mode <= io.request.bits.operands[1].mode @[POSIT_Locality.scala 34:72]
      node _T_26 = bits(reset, 0, 0) @[POSIT_Locality.scala 32:31]
      node _T_27 = eq(_T_26, UInt<1>("h00")) @[POSIT_Locality.scala 32:31]
      when _T_27 : @[POSIT_Locality.scala 32:31]
        printf(clock, UInt<1>(1), "op%d: mode: %d value: %d\n", UInt<2>("h02"), io.request.bits.operands[2].mode, io.request.bits.operands[2].value) @[POSIT_Locality.scala 32:31]
        skip @[POSIT_Locality.scala 32:31]
      node _T_28 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_28].request.operands[2].value <= io.request.bits.operands[2].value @[POSIT_Locality.scala 33:73]
      node _T_29 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_29].request.operands[2].mode <= io.request.bits.operands[2].mode @[POSIT_Locality.scala 34:72]
      node _T_30 = bits(io.request.bits.wr_addr, 2, 0)
      wire _T_31 : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>} @[POSIT_Locality.scala 36:61]
      _T_31.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 36:61]
      _T_31.gt <= UInt<1>("h00") @[POSIT_Locality.scala 36:61]
      _T_31.eq <= UInt<1>("h00") @[POSIT_Locality.scala 36:61]
      _T_31.lt <= UInt<1>("h00") @[POSIT_Locality.scala 36:61]
      _T_31.out <= UInt<32>("h00") @[POSIT_Locality.scala 36:61]
      _T_31.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 36:61]
      _T_31.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 36:61]
      rb.entries[_T_30].result.exceptions <= _T_31.exceptions @[POSIT_Locality.scala 36:46]
      rb.entries[_T_30].result.gt <= _T_31.gt @[POSIT_Locality.scala 36:46]
      rb.entries[_T_30].result.eq <= _T_31.eq @[POSIT_Locality.scala 36:46]
      rb.entries[_T_30].result.lt <= _T_31.lt @[POSIT_Locality.scala 36:46]
      rb.entries[_T_30].result.out <= _T_31.out @[POSIT_Locality.scala 36:46]
      rb.entries[_T_30].result.isNaR <= _T_31.isNaR @[POSIT_Locality.scala 36:46]
      rb.entries[_T_30].result.isZero <= _T_31.isZero @[POSIT_Locality.scala 36:46]
      skip @[POSIT_Locality.scala 23:28]
    wire wbCountOn : UInt<1> @[POSIT_Locality.scala 41:29]
    reg value : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Counter.scala 29:33]
    wire _T_32 : UInt<1>
    _T_32 <= UInt<1>("h00")
    when wbCountOn : @[Counter.scala 67:17]
      node _T_33 = eq(value, UInt<3>("h07")) @[Counter.scala 38:24]
      node _T_34 = add(value, UInt<1>("h01")) @[Counter.scala 39:22]
      node _T_35 = tail(_T_34, 1) @[Counter.scala 39:22]
      value <= _T_35 @[Counter.scala 39:13]
      _T_32 <= _T_33 @[Counter.scala 67:24]
      skip @[Counter.scala 67:17]
    node _T_36 = and(io.mem_write.ready, rb.entries[value].completed) @[POSIT_Locality.scala 43:33]
    node _T_37 = not(rb.entries[value].written) @[POSIT_Locality.scala 43:72]
    node _T_38 = and(_T_36, _T_37) @[POSIT_Locality.scala 43:68]
    when _T_38 : @[POSIT_Locality.scala 43:104]
      wbCountOn <= UInt<1>("h01") @[POSIT_Locality.scala 44:27]
      rb.entries[value].written <= UInt<1>("h01") @[POSIT_Locality.scala 45:47]
      skip @[POSIT_Locality.scala 43:104]
    else : @[POSIT_Locality.scala 46:20]
      wbCountOn <= UInt<1>("h00") @[POSIT_Locality.scala 47:27]
      skip @[POSIT_Locality.scala 46:20]
    node _T_39 = not(rb.entries[value].written) @[POSIT_Locality.scala 51:67]
    node _T_40 = and(rb.entries[value].completed, _T_39) @[POSIT_Locality.scala 51:63]
    io.mem_write.valid <= _T_40 @[POSIT_Locality.scala 51:28]
    io.mem_write.bits.wr_addr <= rb.entries[value].wr_addr @[POSIT_Locality.scala 52:35]
    io.mem_write.bits.result.exceptions <= rb.entries[value].result.exceptions @[POSIT_Locality.scala 53:34]
    io.mem_write.bits.result.gt <= rb.entries[value].result.gt @[POSIT_Locality.scala 53:34]
    io.mem_write.bits.result.eq <= rb.entries[value].result.eq @[POSIT_Locality.scala 53:34]
    io.mem_write.bits.result.lt <= rb.entries[value].result.lt @[POSIT_Locality.scala 53:34]
    io.mem_write.bits.result.out <= rb.entries[value].result.out @[POSIT_Locality.scala 53:34]
    io.mem_write.bits.result.isNaR <= rb.entries[value].result.isNaR @[POSIT_Locality.scala 53:34]
    io.mem_write.bits.result.isZero <= rb.entries[value].result.isZero @[POSIT_Locality.scala 53:34]
    inst dispatchArb of DispatchArbiter @[POSIT_Locality.scala 57:33]
    dispatchArb.clock <= clock
    dispatchArb.reset <= reset
    wire opsValidVec : UInt<1>[8] @[POSIT_Locality.scala 62:31]
    wire singleOpValidVec : UInt<1>[24] @[POSIT_Locality.scala 63:36]
    node _T_41 = eq(rb.entries[0].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 66:59]
    singleOpValidVec[0] <= _T_41 @[POSIT_Locality.scala 66:56]
    node _T_42 = eq(rb.entries[0].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_43 = and(singleOpValidVec[0], _T_42) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[1] <= _T_43 @[POSIT_Locality.scala 68:65]
    node _T_44 = eq(rb.entries[0].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_45 = and(singleOpValidVec[1], _T_44) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[2] <= _T_45 @[POSIT_Locality.scala 68:65]
    opsValidVec[0] <= singleOpValidVec[2] @[POSIT_Locality.scala 70:32]
    node _T_46 = eq(rb.entries[1].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 66:59]
    singleOpValidVec[3] <= _T_46 @[POSIT_Locality.scala 66:56]
    node _T_47 = eq(rb.entries[1].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_48 = and(singleOpValidVec[3], _T_47) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[4] <= _T_48 @[POSIT_Locality.scala 68:65]
    node _T_49 = eq(rb.entries[1].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_50 = and(singleOpValidVec[4], _T_49) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[5] <= _T_50 @[POSIT_Locality.scala 68:65]
    opsValidVec[1] <= singleOpValidVec[5] @[POSIT_Locality.scala 70:32]
    node _T_51 = eq(rb.entries[2].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 66:59]
    singleOpValidVec[6] <= _T_51 @[POSIT_Locality.scala 66:56]
    node _T_52 = eq(rb.entries[2].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_53 = and(singleOpValidVec[6], _T_52) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[7] <= _T_53 @[POSIT_Locality.scala 68:65]
    node _T_54 = eq(rb.entries[2].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_55 = and(singleOpValidVec[7], _T_54) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[8] <= _T_55 @[POSIT_Locality.scala 68:65]
    opsValidVec[2] <= singleOpValidVec[8] @[POSIT_Locality.scala 70:32]
    node _T_56 = eq(rb.entries[3].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 66:59]
    singleOpValidVec[9] <= _T_56 @[POSIT_Locality.scala 66:56]
    node _T_57 = eq(rb.entries[3].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_58 = and(singleOpValidVec[9], _T_57) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[10] <= _T_58 @[POSIT_Locality.scala 68:65]
    node _T_59 = eq(rb.entries[3].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_60 = and(singleOpValidVec[10], _T_59) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[11] <= _T_60 @[POSIT_Locality.scala 68:65]
    opsValidVec[3] <= singleOpValidVec[11] @[POSIT_Locality.scala 70:32]
    node _T_61 = eq(rb.entries[4].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 66:59]
    singleOpValidVec[12] <= _T_61 @[POSIT_Locality.scala 66:56]
    node _T_62 = eq(rb.entries[4].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_63 = and(singleOpValidVec[12], _T_62) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[13] <= _T_63 @[POSIT_Locality.scala 68:65]
    node _T_64 = eq(rb.entries[4].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_65 = and(singleOpValidVec[13], _T_64) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[14] <= _T_65 @[POSIT_Locality.scala 68:65]
    opsValidVec[4] <= singleOpValidVec[14] @[POSIT_Locality.scala 70:32]
    node _T_66 = eq(rb.entries[5].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 66:59]
    singleOpValidVec[15] <= _T_66 @[POSIT_Locality.scala 66:56]
    node _T_67 = eq(rb.entries[5].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_68 = and(singleOpValidVec[15], _T_67) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[16] <= _T_68 @[POSIT_Locality.scala 68:65]
    node _T_69 = eq(rb.entries[5].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_70 = and(singleOpValidVec[16], _T_69) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[17] <= _T_70 @[POSIT_Locality.scala 68:65]
    opsValidVec[5] <= singleOpValidVec[17] @[POSIT_Locality.scala 70:32]
    node _T_71 = eq(rb.entries[6].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 66:59]
    singleOpValidVec[18] <= _T_71 @[POSIT_Locality.scala 66:56]
    node _T_72 = eq(rb.entries[6].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_73 = and(singleOpValidVec[18], _T_72) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[19] <= _T_73 @[POSIT_Locality.scala 68:65]
    node _T_74 = eq(rb.entries[6].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_75 = and(singleOpValidVec[19], _T_74) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[20] <= _T_75 @[POSIT_Locality.scala 68:65]
    opsValidVec[6] <= singleOpValidVec[20] @[POSIT_Locality.scala 70:32]
    node _T_76 = eq(rb.entries[7].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 66:59]
    singleOpValidVec[21] <= _T_76 @[POSIT_Locality.scala 66:56]
    node _T_77 = eq(rb.entries[7].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_78 = and(singleOpValidVec[21], _T_77) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[22] <= _T_78 @[POSIT_Locality.scala 68:65]
    node _T_79 = eq(rb.entries[7].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:153]
    node _T_80 = and(singleOpValidVec[22], _T_79) @[POSIT_Locality.scala 68:110]
    singleOpValidVec[23] <= _T_80 @[POSIT_Locality.scala 68:65]
    opsValidVec[7] <= singleOpValidVec[23] @[POSIT_Locality.scala 70:32]
    wire waitingForDispatchVec : UInt<1>[8] @[POSIT_Locality.scala 72:41]
    node _T_81 = and(opsValidVec[0], rb.entries[0].valid) @[POSIT_Locality.scala 74:60]
    node _T_82 = eq(rb.entries[0].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_83 = and(_T_81, _T_82) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[0] <= _T_83 @[POSIT_Locality.scala 74:42]
    node _T_84 = and(opsValidVec[1], rb.entries[1].valid) @[POSIT_Locality.scala 74:60]
    node _T_85 = eq(rb.entries[1].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_86 = and(_T_84, _T_85) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[1] <= _T_86 @[POSIT_Locality.scala 74:42]
    node _T_87 = and(opsValidVec[2], rb.entries[2].valid) @[POSIT_Locality.scala 74:60]
    node _T_88 = eq(rb.entries[2].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_89 = and(_T_87, _T_88) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[2] <= _T_89 @[POSIT_Locality.scala 74:42]
    node _T_90 = and(opsValidVec[3], rb.entries[3].valid) @[POSIT_Locality.scala 74:60]
    node _T_91 = eq(rb.entries[3].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_92 = and(_T_90, _T_91) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[3] <= _T_92 @[POSIT_Locality.scala 74:42]
    node _T_93 = and(opsValidVec[4], rb.entries[4].valid) @[POSIT_Locality.scala 74:60]
    node _T_94 = eq(rb.entries[4].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_95 = and(_T_93, _T_94) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[4] <= _T_95 @[POSIT_Locality.scala 74:42]
    node _T_96 = and(opsValidVec[5], rb.entries[5].valid) @[POSIT_Locality.scala 74:60]
    node _T_97 = eq(rb.entries[5].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_98 = and(_T_96, _T_97) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[5] <= _T_98 @[POSIT_Locality.scala 74:42]
    node _T_99 = and(opsValidVec[6], rb.entries[6].valid) @[POSIT_Locality.scala 74:60]
    node _T_100 = eq(rb.entries[6].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_101 = and(_T_99, _T_100) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[6] <= _T_101 @[POSIT_Locality.scala 74:42]
    node _T_102 = and(opsValidVec[7], rb.entries[7].valid) @[POSIT_Locality.scala 74:60]
    node _T_103 = eq(rb.entries[7].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_104 = and(_T_102, _T_103) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[7] <= _T_104 @[POSIT_Locality.scala 74:42]
    node _T_105 = cat(waitingForDispatchVec[1], waitingForDispatchVec[0]) @[POSIT_Locality.scala 78:58]
    node _T_106 = cat(waitingForDispatchVec[3], waitingForDispatchVec[2]) @[POSIT_Locality.scala 78:58]
    node _T_107 = cat(_T_106, _T_105) @[POSIT_Locality.scala 78:58]
    node _T_108 = cat(waitingForDispatchVec[5], waitingForDispatchVec[4]) @[POSIT_Locality.scala 78:58]
    node _T_109 = cat(waitingForDispatchVec[7], waitingForDispatchVec[6]) @[POSIT_Locality.scala 78:58]
    node _T_110 = cat(_T_109, _T_108) @[POSIT_Locality.scala 78:58]
    node _T_111 = cat(_T_110, _T_107) @[POSIT_Locality.scala 78:58]
    dispatchArb.io.validity <= _T_111 @[POSIT_Locality.scala 78:33]
    dispatchArb.io.priority <= wbCountOn @[POSIT_Locality.scala 79:33]
    node _T_112 = eq(io.request.bits.wr_addr, UInt<1>("h00")) @[POSIT_Locality.scala 83:32]
    node _T_113 = and(_T_112, new_input_log) @[POSIT_Locality.scala 83:40]
    when _T_113 : @[POSIT_Locality.scala 83:57]
      rb.entries[0].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 84:50]
      skip @[POSIT_Locality.scala 83:57]
    else : @[POSIT_Locality.scala 85:28]
      node _T_114 = eq(dispatchArb.io.chosen, UInt<1>("h00")) @[POSIT_Locality.scala 86:89]
      node _T_115 = and(_T_114, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 86:102]
      node _T_116 = and(_T_115, pe.io.request.ready) @[POSIT_Locality.scala 86:130]
      node _T_117 = or(rb.entries[0].dispatched, _T_116) @[POSIT_Locality.scala 86:78]
      rb.entries[0].dispatched <= _T_117 @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:28]
    node _T_118 = eq(io.request.bits.wr_addr, UInt<1>("h01")) @[POSIT_Locality.scala 83:32]
    node _T_119 = and(_T_118, new_input_log) @[POSIT_Locality.scala 83:40]
    when _T_119 : @[POSIT_Locality.scala 83:57]
      rb.entries[1].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 84:50]
      skip @[POSIT_Locality.scala 83:57]
    else : @[POSIT_Locality.scala 85:28]
      node _T_120 = eq(dispatchArb.io.chosen, UInt<1>("h01")) @[POSIT_Locality.scala 86:89]
      node _T_121 = and(_T_120, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 86:102]
      node _T_122 = and(_T_121, pe.io.request.ready) @[POSIT_Locality.scala 86:130]
      node _T_123 = or(rb.entries[1].dispatched, _T_122) @[POSIT_Locality.scala 86:78]
      rb.entries[1].dispatched <= _T_123 @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:28]
    node _T_124 = eq(io.request.bits.wr_addr, UInt<2>("h02")) @[POSIT_Locality.scala 83:32]
    node _T_125 = and(_T_124, new_input_log) @[POSIT_Locality.scala 83:40]
    when _T_125 : @[POSIT_Locality.scala 83:57]
      rb.entries[2].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 84:50]
      skip @[POSIT_Locality.scala 83:57]
    else : @[POSIT_Locality.scala 85:28]
      node _T_126 = eq(dispatchArb.io.chosen, UInt<2>("h02")) @[POSIT_Locality.scala 86:89]
      node _T_127 = and(_T_126, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 86:102]
      node _T_128 = and(_T_127, pe.io.request.ready) @[POSIT_Locality.scala 86:130]
      node _T_129 = or(rb.entries[2].dispatched, _T_128) @[POSIT_Locality.scala 86:78]
      rb.entries[2].dispatched <= _T_129 @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:28]
    node _T_130 = eq(io.request.bits.wr_addr, UInt<2>("h03")) @[POSIT_Locality.scala 83:32]
    node _T_131 = and(_T_130, new_input_log) @[POSIT_Locality.scala 83:40]
    when _T_131 : @[POSIT_Locality.scala 83:57]
      rb.entries[3].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 84:50]
      skip @[POSIT_Locality.scala 83:57]
    else : @[POSIT_Locality.scala 85:28]
      node _T_132 = eq(dispatchArb.io.chosen, UInt<2>("h03")) @[POSIT_Locality.scala 86:89]
      node _T_133 = and(_T_132, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 86:102]
      node _T_134 = and(_T_133, pe.io.request.ready) @[POSIT_Locality.scala 86:130]
      node _T_135 = or(rb.entries[3].dispatched, _T_134) @[POSIT_Locality.scala 86:78]
      rb.entries[3].dispatched <= _T_135 @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:28]
    node _T_136 = eq(io.request.bits.wr_addr, UInt<3>("h04")) @[POSIT_Locality.scala 83:32]
    node _T_137 = and(_T_136, new_input_log) @[POSIT_Locality.scala 83:40]
    when _T_137 : @[POSIT_Locality.scala 83:57]
      rb.entries[4].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 84:50]
      skip @[POSIT_Locality.scala 83:57]
    else : @[POSIT_Locality.scala 85:28]
      node _T_138 = eq(dispatchArb.io.chosen, UInt<3>("h04")) @[POSIT_Locality.scala 86:89]
      node _T_139 = and(_T_138, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 86:102]
      node _T_140 = and(_T_139, pe.io.request.ready) @[POSIT_Locality.scala 86:130]
      node _T_141 = or(rb.entries[4].dispatched, _T_140) @[POSIT_Locality.scala 86:78]
      rb.entries[4].dispatched <= _T_141 @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:28]
    node _T_142 = eq(io.request.bits.wr_addr, UInt<3>("h05")) @[POSIT_Locality.scala 83:32]
    node _T_143 = and(_T_142, new_input_log) @[POSIT_Locality.scala 83:40]
    when _T_143 : @[POSIT_Locality.scala 83:57]
      rb.entries[5].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 84:50]
      skip @[POSIT_Locality.scala 83:57]
    else : @[POSIT_Locality.scala 85:28]
      node _T_144 = eq(dispatchArb.io.chosen, UInt<3>("h05")) @[POSIT_Locality.scala 86:89]
      node _T_145 = and(_T_144, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 86:102]
      node _T_146 = and(_T_145, pe.io.request.ready) @[POSIT_Locality.scala 86:130]
      node _T_147 = or(rb.entries[5].dispatched, _T_146) @[POSIT_Locality.scala 86:78]
      rb.entries[5].dispatched <= _T_147 @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:28]
    node _T_148 = eq(io.request.bits.wr_addr, UInt<3>("h06")) @[POSIT_Locality.scala 83:32]
    node _T_149 = and(_T_148, new_input_log) @[POSIT_Locality.scala 83:40]
    when _T_149 : @[POSIT_Locality.scala 83:57]
      rb.entries[6].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 84:50]
      skip @[POSIT_Locality.scala 83:57]
    else : @[POSIT_Locality.scala 85:28]
      node _T_150 = eq(dispatchArb.io.chosen, UInt<3>("h06")) @[POSIT_Locality.scala 86:89]
      node _T_151 = and(_T_150, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 86:102]
      node _T_152 = and(_T_151, pe.io.request.ready) @[POSIT_Locality.scala 86:130]
      node _T_153 = or(rb.entries[6].dispatched, _T_152) @[POSIT_Locality.scala 86:78]
      rb.entries[6].dispatched <= _T_153 @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:28]
    node _T_154 = eq(io.request.bits.wr_addr, UInt<3>("h07")) @[POSIT_Locality.scala 83:32]
    node _T_155 = and(_T_154, new_input_log) @[POSIT_Locality.scala 83:40]
    when _T_155 : @[POSIT_Locality.scala 83:57]
      rb.entries[7].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 84:50]
      skip @[POSIT_Locality.scala 83:57]
    else : @[POSIT_Locality.scala 85:28]
      node _T_156 = eq(dispatchArb.io.chosen, UInt<3>("h07")) @[POSIT_Locality.scala 86:89]
      node _T_157 = and(_T_156, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 86:102]
      node _T_158 = and(_T_157, pe.io.request.ready) @[POSIT_Locality.scala 86:130]
      node _T_159 = or(rb.entries[7].dispatched, _T_158) @[POSIT_Locality.scala 86:78]
      rb.entries[7].dispatched <= _T_159 @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:28]
    node _T_160 = and(dispatchArb.io.hasChosen, pe.io.request.ready) @[POSIT_Locality.scala 90:39]
    when _T_160 : @[POSIT_Locality.scala 90:61]
      pe.io.request.valid <= UInt<1>("h01") @[POSIT_Locality.scala 91:37]
      skip @[POSIT_Locality.scala 90:61]
    else : @[POSIT_Locality.scala 92:20]
      pe.io.request.valid <= UInt<1>("h00") @[POSIT_Locality.scala 93:37]
      skip @[POSIT_Locality.scala 92:20]
    pe.io.in_idx <= dispatchArb.io.chosen @[POSIT_Locality.scala 95:22]
    pe.io.result.ready <= io.mem_write.ready @[POSIT_Locality.scala 97:28]
    node _T_161 = bits(rb.entries[dispatchArb.io.chosen].request.operands[0].value, 31, 0) @[POSIT_Locality.scala 98:80]
    pe.io.request.bits.num1 <= _T_161 @[POSIT_Locality.scala 98:33]
    node _T_162 = bits(rb.entries[dispatchArb.io.chosen].request.operands[1].value, 31, 0) @[POSIT_Locality.scala 99:80]
    pe.io.request.bits.num2 <= _T_162 @[POSIT_Locality.scala 99:33]
    node _T_163 = bits(rb.entries[dispatchArb.io.chosen].request.operands[2].value, 31, 0) @[POSIT_Locality.scala 100:80]
    pe.io.request.bits.num3 <= _T_163 @[POSIT_Locality.scala 100:33]
    pe.io.request.bits.mode <= rb.entries[dispatchArb.io.chosen].request.mode @[POSIT_Locality.scala 101:33]
    pe.io.request.bits.inst <= rb.entries[dispatchArb.io.chosen].request.inst @[POSIT_Locality.scala 102:33]
    wire result_idx : UInt<3> @[POSIT_Locality.scala 104:30]
    result_idx <= pe.io.out_idx @[POSIT_Locality.scala 105:20]
    node _T_164 = and(pe.io.result.ready, pe.io.result.valid) @[POSIT_Locality.scala 106:33]
    when _T_164 : @[POSIT_Locality.scala 106:55]
      rb.entries[result_idx].result.exceptions <= pe.io.result.bits.exceptions @[POSIT_Locality.scala 107:47]
      rb.entries[result_idx].result.gt <= pe.io.result.bits.gt @[POSIT_Locality.scala 107:47]
      rb.entries[result_idx].result.eq <= pe.io.result.bits.eq @[POSIT_Locality.scala 107:47]
      rb.entries[result_idx].result.lt <= pe.io.result.bits.lt @[POSIT_Locality.scala 107:47]
      rb.entries[result_idx].result.out <= pe.io.result.bits.out @[POSIT_Locality.scala 107:47]
      rb.entries[result_idx].result.isNaR <= pe.io.result.bits.isNaR @[POSIT_Locality.scala 107:47]
      rb.entries[result_idx].result.isZero <= pe.io.result.bits.isZero @[POSIT_Locality.scala 107:47]
      rb.entries[result_idx].completed <= UInt<1>("h01") @[POSIT_Locality.scala 108:50]
      skip @[POSIT_Locality.scala 106:55]
    node _T_165 = eq(rb.entries[0].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_165 : @[POSIT_Locality.scala 114:77]
      node _T_166 = bits(rb.entries[0].request.operands[0].value, 2, 0)
      when rb.entries[_T_166].completed : @[POSIT_Locality.scala 115:100]
        node _T_167 = bits(rb.entries[0].request.operands[0].value, 2, 0)
        rb.entries[0].request.operands[0].value <= rb.entries[_T_167].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[0].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_168 = eq(rb.entries[0].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_168 : @[POSIT_Locality.scala 114:77]
      node _T_169 = bits(rb.entries[0].request.operands[1].value, 2, 0)
      when rb.entries[_T_169].completed : @[POSIT_Locality.scala 115:100]
        node _T_170 = bits(rb.entries[0].request.operands[1].value, 2, 0)
        rb.entries[0].request.operands[1].value <= rb.entries[_T_170].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[0].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_171 = eq(rb.entries[0].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_171 : @[POSIT_Locality.scala 114:77]
      node _T_172 = bits(rb.entries[0].request.operands[2].value, 2, 0)
      when rb.entries[_T_172].completed : @[POSIT_Locality.scala 115:100]
        node _T_173 = bits(rb.entries[0].request.operands[2].value, 2, 0)
        rb.entries[0].request.operands[2].value <= rb.entries[_T_173].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[0].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_174 = eq(rb.entries[1].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_174 : @[POSIT_Locality.scala 114:77]
      node _T_175 = bits(rb.entries[1].request.operands[0].value, 2, 0)
      when rb.entries[_T_175].completed : @[POSIT_Locality.scala 115:100]
        node _T_176 = bits(rb.entries[1].request.operands[0].value, 2, 0)
        rb.entries[1].request.operands[0].value <= rb.entries[_T_176].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[1].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_177 = eq(rb.entries[1].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_177 : @[POSIT_Locality.scala 114:77]
      node _T_178 = bits(rb.entries[1].request.operands[1].value, 2, 0)
      when rb.entries[_T_178].completed : @[POSIT_Locality.scala 115:100]
        node _T_179 = bits(rb.entries[1].request.operands[1].value, 2, 0)
        rb.entries[1].request.operands[1].value <= rb.entries[_T_179].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[1].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_180 = eq(rb.entries[1].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_180 : @[POSIT_Locality.scala 114:77]
      node _T_181 = bits(rb.entries[1].request.operands[2].value, 2, 0)
      when rb.entries[_T_181].completed : @[POSIT_Locality.scala 115:100]
        node _T_182 = bits(rb.entries[1].request.operands[2].value, 2, 0)
        rb.entries[1].request.operands[2].value <= rb.entries[_T_182].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[1].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_183 = eq(rb.entries[2].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_183 : @[POSIT_Locality.scala 114:77]
      node _T_184 = bits(rb.entries[2].request.operands[0].value, 2, 0)
      when rb.entries[_T_184].completed : @[POSIT_Locality.scala 115:100]
        node _T_185 = bits(rb.entries[2].request.operands[0].value, 2, 0)
        rb.entries[2].request.operands[0].value <= rb.entries[_T_185].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[2].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_186 = eq(rb.entries[2].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_186 : @[POSIT_Locality.scala 114:77]
      node _T_187 = bits(rb.entries[2].request.operands[1].value, 2, 0)
      when rb.entries[_T_187].completed : @[POSIT_Locality.scala 115:100]
        node _T_188 = bits(rb.entries[2].request.operands[1].value, 2, 0)
        rb.entries[2].request.operands[1].value <= rb.entries[_T_188].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[2].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_189 = eq(rb.entries[2].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_189 : @[POSIT_Locality.scala 114:77]
      node _T_190 = bits(rb.entries[2].request.operands[2].value, 2, 0)
      when rb.entries[_T_190].completed : @[POSIT_Locality.scala 115:100]
        node _T_191 = bits(rb.entries[2].request.operands[2].value, 2, 0)
        rb.entries[2].request.operands[2].value <= rb.entries[_T_191].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[2].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_192 = eq(rb.entries[3].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_192 : @[POSIT_Locality.scala 114:77]
      node _T_193 = bits(rb.entries[3].request.operands[0].value, 2, 0)
      when rb.entries[_T_193].completed : @[POSIT_Locality.scala 115:100]
        node _T_194 = bits(rb.entries[3].request.operands[0].value, 2, 0)
        rb.entries[3].request.operands[0].value <= rb.entries[_T_194].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[3].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_195 = eq(rb.entries[3].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_195 : @[POSIT_Locality.scala 114:77]
      node _T_196 = bits(rb.entries[3].request.operands[1].value, 2, 0)
      when rb.entries[_T_196].completed : @[POSIT_Locality.scala 115:100]
        node _T_197 = bits(rb.entries[3].request.operands[1].value, 2, 0)
        rb.entries[3].request.operands[1].value <= rb.entries[_T_197].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[3].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_198 = eq(rb.entries[3].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_198 : @[POSIT_Locality.scala 114:77]
      node _T_199 = bits(rb.entries[3].request.operands[2].value, 2, 0)
      when rb.entries[_T_199].completed : @[POSIT_Locality.scala 115:100]
        node _T_200 = bits(rb.entries[3].request.operands[2].value, 2, 0)
        rb.entries[3].request.operands[2].value <= rb.entries[_T_200].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[3].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_201 = eq(rb.entries[4].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_201 : @[POSIT_Locality.scala 114:77]
      node _T_202 = bits(rb.entries[4].request.operands[0].value, 2, 0)
      when rb.entries[_T_202].completed : @[POSIT_Locality.scala 115:100]
        node _T_203 = bits(rb.entries[4].request.operands[0].value, 2, 0)
        rb.entries[4].request.operands[0].value <= rb.entries[_T_203].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[4].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_204 = eq(rb.entries[4].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_204 : @[POSIT_Locality.scala 114:77]
      node _T_205 = bits(rb.entries[4].request.operands[1].value, 2, 0)
      when rb.entries[_T_205].completed : @[POSIT_Locality.scala 115:100]
        node _T_206 = bits(rb.entries[4].request.operands[1].value, 2, 0)
        rb.entries[4].request.operands[1].value <= rb.entries[_T_206].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[4].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_207 = eq(rb.entries[4].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_207 : @[POSIT_Locality.scala 114:77]
      node _T_208 = bits(rb.entries[4].request.operands[2].value, 2, 0)
      when rb.entries[_T_208].completed : @[POSIT_Locality.scala 115:100]
        node _T_209 = bits(rb.entries[4].request.operands[2].value, 2, 0)
        rb.entries[4].request.operands[2].value <= rb.entries[_T_209].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[4].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_210 = eq(rb.entries[5].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_210 : @[POSIT_Locality.scala 114:77]
      node _T_211 = bits(rb.entries[5].request.operands[0].value, 2, 0)
      when rb.entries[_T_211].completed : @[POSIT_Locality.scala 115:100]
        node _T_212 = bits(rb.entries[5].request.operands[0].value, 2, 0)
        rb.entries[5].request.operands[0].value <= rb.entries[_T_212].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[5].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_213 = eq(rb.entries[5].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_213 : @[POSIT_Locality.scala 114:77]
      node _T_214 = bits(rb.entries[5].request.operands[1].value, 2, 0)
      when rb.entries[_T_214].completed : @[POSIT_Locality.scala 115:100]
        node _T_215 = bits(rb.entries[5].request.operands[1].value, 2, 0)
        rb.entries[5].request.operands[1].value <= rb.entries[_T_215].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[5].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_216 = eq(rb.entries[5].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_216 : @[POSIT_Locality.scala 114:77]
      node _T_217 = bits(rb.entries[5].request.operands[2].value, 2, 0)
      when rb.entries[_T_217].completed : @[POSIT_Locality.scala 115:100]
        node _T_218 = bits(rb.entries[5].request.operands[2].value, 2, 0)
        rb.entries[5].request.operands[2].value <= rb.entries[_T_218].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[5].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_219 = eq(rb.entries[6].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_219 : @[POSIT_Locality.scala 114:77]
      node _T_220 = bits(rb.entries[6].request.operands[0].value, 2, 0)
      when rb.entries[_T_220].completed : @[POSIT_Locality.scala 115:100]
        node _T_221 = bits(rb.entries[6].request.operands[0].value, 2, 0)
        rb.entries[6].request.operands[0].value <= rb.entries[_T_221].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[6].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_222 = eq(rb.entries[6].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_222 : @[POSIT_Locality.scala 114:77]
      node _T_223 = bits(rb.entries[6].request.operands[1].value, 2, 0)
      when rb.entries[_T_223].completed : @[POSIT_Locality.scala 115:100]
        node _T_224 = bits(rb.entries[6].request.operands[1].value, 2, 0)
        rb.entries[6].request.operands[1].value <= rb.entries[_T_224].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[6].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_225 = eq(rb.entries[6].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_225 : @[POSIT_Locality.scala 114:77]
      node _T_226 = bits(rb.entries[6].request.operands[2].value, 2, 0)
      when rb.entries[_T_226].completed : @[POSIT_Locality.scala 115:100]
        node _T_227 = bits(rb.entries[6].request.operands[2].value, 2, 0)
        rb.entries[6].request.operands[2].value <= rb.entries[_T_227].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[6].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_228 = eq(rb.entries[7].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_228 : @[POSIT_Locality.scala 114:77]
      node _T_229 = bits(rb.entries[7].request.operands[0].value, 2, 0)
      when rb.entries[_T_229].completed : @[POSIT_Locality.scala 115:100]
        node _T_230 = bits(rb.entries[7].request.operands[0].value, 2, 0)
        rb.entries[7].request.operands[0].value <= rb.entries[_T_230].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[7].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_231 = eq(rb.entries[7].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_231 : @[POSIT_Locality.scala 114:77]
      node _T_232 = bits(rb.entries[7].request.operands[1].value, 2, 0)
      when rb.entries[_T_232].completed : @[POSIT_Locality.scala 115:100]
        node _T_233 = bits(rb.entries[7].request.operands[1].value, 2, 0)
        rb.entries[7].request.operands[1].value <= rb.entries[_T_233].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[7].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    node _T_234 = eq(rb.entries[7].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 114:69]
    when _T_234 : @[POSIT_Locality.scala 114:77]
      node _T_235 = bits(rb.entries[7].request.operands[2].value, 2, 0)
      when rb.entries[_T_235].completed : @[POSIT_Locality.scala 115:100]
        node _T_236 = bits(rb.entries[7].request.operands[2].value, 2, 0)
        rb.entries[7].request.operands[2].value <= rb.entries[_T_236].result.out @[POSIT_Locality.scala 116:81]
        rb.entries[7].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 118:80]
        skip @[POSIT_Locality.scala 115:100]
      skip @[POSIT_Locality.scala 114:77]
    when io.mem_read.resp_valid : @[POSIT_Locality.scala 125:37]
      node _T_237 = eq(rb.entries[0].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_237 : @[POSIT_Locality.scala 128:85]
        node _T_238 = eq(rb.entries[0].request.operands[0].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_238 : @[POSIT_Locality.scala 129:111]
          rb.entries[0].request.operands[0].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[0].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_239 = eq(rb.entries[0].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_239 : @[POSIT_Locality.scala 128:85]
        node _T_240 = eq(rb.entries[0].request.operands[1].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_240 : @[POSIT_Locality.scala 129:111]
          rb.entries[0].request.operands[1].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[0].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_241 = eq(rb.entries[0].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_241 : @[POSIT_Locality.scala 128:85]
        node _T_242 = eq(rb.entries[0].request.operands[2].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_242 : @[POSIT_Locality.scala 129:111]
          rb.entries[0].request.operands[2].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[0].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_243 = eq(rb.entries[1].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_243 : @[POSIT_Locality.scala 128:85]
        node _T_244 = eq(rb.entries[1].request.operands[0].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_244 : @[POSIT_Locality.scala 129:111]
          rb.entries[1].request.operands[0].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[1].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_245 = eq(rb.entries[1].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_245 : @[POSIT_Locality.scala 128:85]
        node _T_246 = eq(rb.entries[1].request.operands[1].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_246 : @[POSIT_Locality.scala 129:111]
          rb.entries[1].request.operands[1].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[1].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_247 = eq(rb.entries[1].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_247 : @[POSIT_Locality.scala 128:85]
        node _T_248 = eq(rb.entries[1].request.operands[2].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_248 : @[POSIT_Locality.scala 129:111]
          rb.entries[1].request.operands[2].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[1].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_249 = eq(rb.entries[2].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_249 : @[POSIT_Locality.scala 128:85]
        node _T_250 = eq(rb.entries[2].request.operands[0].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_250 : @[POSIT_Locality.scala 129:111]
          rb.entries[2].request.operands[0].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[2].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_251 = eq(rb.entries[2].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_251 : @[POSIT_Locality.scala 128:85]
        node _T_252 = eq(rb.entries[2].request.operands[1].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_252 : @[POSIT_Locality.scala 129:111]
          rb.entries[2].request.operands[1].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[2].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_253 = eq(rb.entries[2].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_253 : @[POSIT_Locality.scala 128:85]
        node _T_254 = eq(rb.entries[2].request.operands[2].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_254 : @[POSIT_Locality.scala 129:111]
          rb.entries[2].request.operands[2].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[2].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_255 = eq(rb.entries[3].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_255 : @[POSIT_Locality.scala 128:85]
        node _T_256 = eq(rb.entries[3].request.operands[0].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_256 : @[POSIT_Locality.scala 129:111]
          rb.entries[3].request.operands[0].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[3].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_257 = eq(rb.entries[3].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_257 : @[POSIT_Locality.scala 128:85]
        node _T_258 = eq(rb.entries[3].request.operands[1].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_258 : @[POSIT_Locality.scala 129:111]
          rb.entries[3].request.operands[1].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[3].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_259 = eq(rb.entries[3].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_259 : @[POSIT_Locality.scala 128:85]
        node _T_260 = eq(rb.entries[3].request.operands[2].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_260 : @[POSIT_Locality.scala 129:111]
          rb.entries[3].request.operands[2].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[3].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_261 = eq(rb.entries[4].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_261 : @[POSIT_Locality.scala 128:85]
        node _T_262 = eq(rb.entries[4].request.operands[0].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_262 : @[POSIT_Locality.scala 129:111]
          rb.entries[4].request.operands[0].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[4].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_263 = eq(rb.entries[4].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_263 : @[POSIT_Locality.scala 128:85]
        node _T_264 = eq(rb.entries[4].request.operands[1].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_264 : @[POSIT_Locality.scala 129:111]
          rb.entries[4].request.operands[1].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[4].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_265 = eq(rb.entries[4].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_265 : @[POSIT_Locality.scala 128:85]
        node _T_266 = eq(rb.entries[4].request.operands[2].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_266 : @[POSIT_Locality.scala 129:111]
          rb.entries[4].request.operands[2].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[4].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_267 = eq(rb.entries[5].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_267 : @[POSIT_Locality.scala 128:85]
        node _T_268 = eq(rb.entries[5].request.operands[0].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_268 : @[POSIT_Locality.scala 129:111]
          rb.entries[5].request.operands[0].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[5].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_269 = eq(rb.entries[5].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_269 : @[POSIT_Locality.scala 128:85]
        node _T_270 = eq(rb.entries[5].request.operands[1].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_270 : @[POSIT_Locality.scala 129:111]
          rb.entries[5].request.operands[1].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[5].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_271 = eq(rb.entries[5].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_271 : @[POSIT_Locality.scala 128:85]
        node _T_272 = eq(rb.entries[5].request.operands[2].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_272 : @[POSIT_Locality.scala 129:111]
          rb.entries[5].request.operands[2].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[5].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_273 = eq(rb.entries[6].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_273 : @[POSIT_Locality.scala 128:85]
        node _T_274 = eq(rb.entries[6].request.operands[0].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_274 : @[POSIT_Locality.scala 129:111]
          rb.entries[6].request.operands[0].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[6].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_275 = eq(rb.entries[6].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_275 : @[POSIT_Locality.scala 128:85]
        node _T_276 = eq(rb.entries[6].request.operands[1].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_276 : @[POSIT_Locality.scala 129:111]
          rb.entries[6].request.operands[1].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[6].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_277 = eq(rb.entries[6].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_277 : @[POSIT_Locality.scala 128:85]
        node _T_278 = eq(rb.entries[6].request.operands[2].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_278 : @[POSIT_Locality.scala 129:111]
          rb.entries[6].request.operands[2].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[6].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_279 = eq(rb.entries[7].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_279 : @[POSIT_Locality.scala 128:85]
        node _T_280 = eq(rb.entries[7].request.operands[0].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_280 : @[POSIT_Locality.scala 129:111]
          rb.entries[7].request.operands[0].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[7].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_281 = eq(rb.entries[7].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_281 : @[POSIT_Locality.scala 128:85]
        node _T_282 = eq(rb.entries[7].request.operands[1].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_282 : @[POSIT_Locality.scala 129:111]
          rb.entries[7].request.operands[1].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[7].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      node _T_283 = eq(rb.entries[7].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 128:77]
      when _T_283 : @[POSIT_Locality.scala 128:85]
        node _T_284 = eq(rb.entries[7].request.operands[2].value, io.mem_read.resp_tag) @[POSIT_Locality.scala 129:86]
        when _T_284 : @[POSIT_Locality.scala 129:111]
          rb.entries[7].request.operands[2].value <= io.mem_read.data @[POSIT_Locality.scala 130:89]
          rb.entries[7].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 131:88]
          skip @[POSIT_Locality.scala 129:111]
        skip @[POSIT_Locality.scala 128:85]
      skip @[POSIT_Locality.scala 125:37]
    wire waitingToBeFetched : UInt<1>[24] @[POSIT_Locality.scala 138:38]
    wire fetchOffSet : UInt<48>[24] @[POSIT_Locality.scala 139:31]
    wire crnt_inFetch : UInt<1>[24] @[POSIT_Locality.scala 140:32]
    wire inFetch : UInt<1>[24] @[POSIT_Locality.scala 141:27]
    node _T_285 = eq(rb.entries[0].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_286 = and(rb.entries[0].valid, _T_285) @[POSIT_Locality.scala 145:53]
    node _T_287 = eq(rb.entries[0].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_288 = and(_T_286, _T_287) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[0] <= _T_288 @[POSIT_Locality.scala 144:67]
    fetchOffSet[0] <= rb.entries[0].request.operands[0].value @[POSIT_Locality.scala 146:60]
    node _T_289 = eq(rb.entries[0].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_290 = and(rb.entries[0].valid, _T_289) @[POSIT_Locality.scala 145:53]
    node _T_291 = eq(rb.entries[0].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_292 = and(_T_290, _T_291) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[1] <= _T_292 @[POSIT_Locality.scala 144:67]
    fetchOffSet[1] <= rb.entries[0].request.operands[1].value @[POSIT_Locality.scala 146:60]
    node _T_293 = eq(rb.entries[0].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_294 = and(rb.entries[0].valid, _T_293) @[POSIT_Locality.scala 145:53]
    node _T_295 = eq(rb.entries[0].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_296 = and(_T_294, _T_295) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[2] <= _T_296 @[POSIT_Locality.scala 144:67]
    fetchOffSet[2] <= rb.entries[0].request.operands[2].value @[POSIT_Locality.scala 146:60]
    node _T_297 = eq(rb.entries[1].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_298 = and(rb.entries[1].valid, _T_297) @[POSIT_Locality.scala 145:53]
    node _T_299 = eq(rb.entries[1].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_300 = and(_T_298, _T_299) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[3] <= _T_300 @[POSIT_Locality.scala 144:67]
    fetchOffSet[3] <= rb.entries[1].request.operands[0].value @[POSIT_Locality.scala 146:60]
    node _T_301 = eq(rb.entries[1].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_302 = and(rb.entries[1].valid, _T_301) @[POSIT_Locality.scala 145:53]
    node _T_303 = eq(rb.entries[1].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_304 = and(_T_302, _T_303) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[4] <= _T_304 @[POSIT_Locality.scala 144:67]
    fetchOffSet[4] <= rb.entries[1].request.operands[1].value @[POSIT_Locality.scala 146:60]
    node _T_305 = eq(rb.entries[1].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_306 = and(rb.entries[1].valid, _T_305) @[POSIT_Locality.scala 145:53]
    node _T_307 = eq(rb.entries[1].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_308 = and(_T_306, _T_307) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[5] <= _T_308 @[POSIT_Locality.scala 144:67]
    fetchOffSet[5] <= rb.entries[1].request.operands[2].value @[POSIT_Locality.scala 146:60]
    node _T_309 = eq(rb.entries[2].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_310 = and(rb.entries[2].valid, _T_309) @[POSIT_Locality.scala 145:53]
    node _T_311 = eq(rb.entries[2].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_312 = and(_T_310, _T_311) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[6] <= _T_312 @[POSIT_Locality.scala 144:67]
    fetchOffSet[6] <= rb.entries[2].request.operands[0].value @[POSIT_Locality.scala 146:60]
    node _T_313 = eq(rb.entries[2].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_314 = and(rb.entries[2].valid, _T_313) @[POSIT_Locality.scala 145:53]
    node _T_315 = eq(rb.entries[2].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_316 = and(_T_314, _T_315) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[7] <= _T_316 @[POSIT_Locality.scala 144:67]
    fetchOffSet[7] <= rb.entries[2].request.operands[1].value @[POSIT_Locality.scala 146:60]
    node _T_317 = eq(rb.entries[2].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_318 = and(rb.entries[2].valid, _T_317) @[POSIT_Locality.scala 145:53]
    node _T_319 = eq(rb.entries[2].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_320 = and(_T_318, _T_319) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[8] <= _T_320 @[POSIT_Locality.scala 144:67]
    fetchOffSet[8] <= rb.entries[2].request.operands[2].value @[POSIT_Locality.scala 146:60]
    node _T_321 = eq(rb.entries[3].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_322 = and(rb.entries[3].valid, _T_321) @[POSIT_Locality.scala 145:53]
    node _T_323 = eq(rb.entries[3].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_324 = and(_T_322, _T_323) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[9] <= _T_324 @[POSIT_Locality.scala 144:67]
    fetchOffSet[9] <= rb.entries[3].request.operands[0].value @[POSIT_Locality.scala 146:60]
    node _T_325 = eq(rb.entries[3].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_326 = and(rb.entries[3].valid, _T_325) @[POSIT_Locality.scala 145:53]
    node _T_327 = eq(rb.entries[3].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_328 = and(_T_326, _T_327) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[10] <= _T_328 @[POSIT_Locality.scala 144:67]
    fetchOffSet[10] <= rb.entries[3].request.operands[1].value @[POSIT_Locality.scala 146:60]
    node _T_329 = eq(rb.entries[3].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_330 = and(rb.entries[3].valid, _T_329) @[POSIT_Locality.scala 145:53]
    node _T_331 = eq(rb.entries[3].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_332 = and(_T_330, _T_331) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[11] <= _T_332 @[POSIT_Locality.scala 144:67]
    fetchOffSet[11] <= rb.entries[3].request.operands[2].value @[POSIT_Locality.scala 146:60]
    node _T_333 = eq(rb.entries[4].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_334 = and(rb.entries[4].valid, _T_333) @[POSIT_Locality.scala 145:53]
    node _T_335 = eq(rb.entries[4].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_336 = and(_T_334, _T_335) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[12] <= _T_336 @[POSIT_Locality.scala 144:67]
    fetchOffSet[12] <= rb.entries[4].request.operands[0].value @[POSIT_Locality.scala 146:60]
    node _T_337 = eq(rb.entries[4].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_338 = and(rb.entries[4].valid, _T_337) @[POSIT_Locality.scala 145:53]
    node _T_339 = eq(rb.entries[4].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_340 = and(_T_338, _T_339) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[13] <= _T_340 @[POSIT_Locality.scala 144:67]
    fetchOffSet[13] <= rb.entries[4].request.operands[1].value @[POSIT_Locality.scala 146:60]
    node _T_341 = eq(rb.entries[4].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_342 = and(rb.entries[4].valid, _T_341) @[POSIT_Locality.scala 145:53]
    node _T_343 = eq(rb.entries[4].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_344 = and(_T_342, _T_343) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[14] <= _T_344 @[POSIT_Locality.scala 144:67]
    fetchOffSet[14] <= rb.entries[4].request.operands[2].value @[POSIT_Locality.scala 146:60]
    node _T_345 = eq(rb.entries[5].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_346 = and(rb.entries[5].valid, _T_345) @[POSIT_Locality.scala 145:53]
    node _T_347 = eq(rb.entries[5].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_348 = and(_T_346, _T_347) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[15] <= _T_348 @[POSIT_Locality.scala 144:67]
    fetchOffSet[15] <= rb.entries[5].request.operands[0].value @[POSIT_Locality.scala 146:60]
    node _T_349 = eq(rb.entries[5].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_350 = and(rb.entries[5].valid, _T_349) @[POSIT_Locality.scala 145:53]
    node _T_351 = eq(rb.entries[5].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_352 = and(_T_350, _T_351) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[16] <= _T_352 @[POSIT_Locality.scala 144:67]
    fetchOffSet[16] <= rb.entries[5].request.operands[1].value @[POSIT_Locality.scala 146:60]
    node _T_353 = eq(rb.entries[5].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_354 = and(rb.entries[5].valid, _T_353) @[POSIT_Locality.scala 145:53]
    node _T_355 = eq(rb.entries[5].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_356 = and(_T_354, _T_355) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[17] <= _T_356 @[POSIT_Locality.scala 144:67]
    fetchOffSet[17] <= rb.entries[5].request.operands[2].value @[POSIT_Locality.scala 146:60]
    node _T_357 = eq(rb.entries[6].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_358 = and(rb.entries[6].valid, _T_357) @[POSIT_Locality.scala 145:53]
    node _T_359 = eq(rb.entries[6].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_360 = and(_T_358, _T_359) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[18] <= _T_360 @[POSIT_Locality.scala 144:67]
    fetchOffSet[18] <= rb.entries[6].request.operands[0].value @[POSIT_Locality.scala 146:60]
    node _T_361 = eq(rb.entries[6].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_362 = and(rb.entries[6].valid, _T_361) @[POSIT_Locality.scala 145:53]
    node _T_363 = eq(rb.entries[6].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_364 = and(_T_362, _T_363) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[19] <= _T_364 @[POSIT_Locality.scala 144:67]
    fetchOffSet[19] <= rb.entries[6].request.operands[1].value @[POSIT_Locality.scala 146:60]
    node _T_365 = eq(rb.entries[6].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_366 = and(rb.entries[6].valid, _T_365) @[POSIT_Locality.scala 145:53]
    node _T_367 = eq(rb.entries[6].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_368 = and(_T_366, _T_367) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[20] <= _T_368 @[POSIT_Locality.scala 144:67]
    fetchOffSet[20] <= rb.entries[6].request.operands[2].value @[POSIT_Locality.scala 146:60]
    node _T_369 = eq(rb.entries[7].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_370 = and(rb.entries[7].valid, _T_369) @[POSIT_Locality.scala 145:53]
    node _T_371 = eq(rb.entries[7].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_372 = and(_T_370, _T_371) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[21] <= _T_372 @[POSIT_Locality.scala 144:67]
    fetchOffSet[21] <= rb.entries[7].request.operands[0].value @[POSIT_Locality.scala 146:60]
    node _T_373 = eq(rb.entries[7].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_374 = and(rb.entries[7].valid, _T_373) @[POSIT_Locality.scala 145:53]
    node _T_375 = eq(rb.entries[7].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_376 = and(_T_374, _T_375) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[22] <= _T_376 @[POSIT_Locality.scala 144:67]
    fetchOffSet[22] <= rb.entries[7].request.operands[1].value @[POSIT_Locality.scala 146:60]
    node _T_377 = eq(rb.entries[7].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 145:96]
    node _T_378 = and(rb.entries[7].valid, _T_377) @[POSIT_Locality.scala 145:53]
    node _T_379 = eq(rb.entries[7].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 145:109]
    node _T_380 = and(_T_378, _T_379) @[POSIT_Locality.scala 145:105]
    waitingToBeFetched[23] <= _T_380 @[POSIT_Locality.scala 144:67]
    fetchOffSet[23] <= rb.entries[7].request.operands[2].value @[POSIT_Locality.scala 146:60]
    inst fetchArb of DispatchArbiter_1 @[POSIT_Locality.scala 150:30]
    fetchArb.clock <= clock
    fetchArb.reset <= reset
    node _T_381 = cat(waitingToBeFetched[2], waitingToBeFetched[1]) @[POSIT_Locality.scala 151:52]
    node _T_382 = cat(_T_381, waitingToBeFetched[0]) @[POSIT_Locality.scala 151:52]
    node _T_383 = cat(waitingToBeFetched[5], waitingToBeFetched[4]) @[POSIT_Locality.scala 151:52]
    node _T_384 = cat(_T_383, waitingToBeFetched[3]) @[POSIT_Locality.scala 151:52]
    node _T_385 = cat(_T_384, _T_382) @[POSIT_Locality.scala 151:52]
    node _T_386 = cat(waitingToBeFetched[8], waitingToBeFetched[7]) @[POSIT_Locality.scala 151:52]
    node _T_387 = cat(_T_386, waitingToBeFetched[6]) @[POSIT_Locality.scala 151:52]
    node _T_388 = cat(waitingToBeFetched[11], waitingToBeFetched[10]) @[POSIT_Locality.scala 151:52]
    node _T_389 = cat(_T_388, waitingToBeFetched[9]) @[POSIT_Locality.scala 151:52]
    node _T_390 = cat(_T_389, _T_387) @[POSIT_Locality.scala 151:52]
    node _T_391 = cat(_T_390, _T_385) @[POSIT_Locality.scala 151:52]
    node _T_392 = cat(waitingToBeFetched[14], waitingToBeFetched[13]) @[POSIT_Locality.scala 151:52]
    node _T_393 = cat(_T_392, waitingToBeFetched[12]) @[POSIT_Locality.scala 151:52]
    node _T_394 = cat(waitingToBeFetched[17], waitingToBeFetched[16]) @[POSIT_Locality.scala 151:52]
    node _T_395 = cat(_T_394, waitingToBeFetched[15]) @[POSIT_Locality.scala 151:52]
    node _T_396 = cat(_T_395, _T_393) @[POSIT_Locality.scala 151:52]
    node _T_397 = cat(waitingToBeFetched[20], waitingToBeFetched[19]) @[POSIT_Locality.scala 151:52]
    node _T_398 = cat(_T_397, waitingToBeFetched[18]) @[POSIT_Locality.scala 151:52]
    node _T_399 = cat(waitingToBeFetched[23], waitingToBeFetched[22]) @[POSIT_Locality.scala 151:52]
    node _T_400 = cat(_T_399, waitingToBeFetched[21]) @[POSIT_Locality.scala 151:52]
    node _T_401 = cat(_T_400, _T_398) @[POSIT_Locality.scala 151:52]
    node _T_402 = cat(_T_401, _T_396) @[POSIT_Locality.scala 151:52]
    node _T_403 = cat(_T_402, _T_391) @[POSIT_Locality.scala 151:52]
    fetchArb.io.validity <= _T_403 @[POSIT_Locality.scala 151:30]
    fetchArb.io.priority <= wbCountOn @[POSIT_Locality.scala 152:30]
    crnt_inFetch[0] <= rb.entries[0].request.inFetch[0] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[1] <= rb.entries[0].request.inFetch[1] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[2] <= rb.entries[0].request.inFetch[2] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[3] <= rb.entries[1].request.inFetch[0] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[4] <= rb.entries[1].request.inFetch[1] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[5] <= rb.entries[1].request.inFetch[2] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[6] <= rb.entries[2].request.inFetch[0] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[7] <= rb.entries[2].request.inFetch[1] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[8] <= rb.entries[2].request.inFetch[2] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[9] <= rb.entries[3].request.inFetch[0] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[10] <= rb.entries[3].request.inFetch[1] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[11] <= rb.entries[3].request.inFetch[2] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[12] <= rb.entries[4].request.inFetch[0] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[13] <= rb.entries[4].request.inFetch[1] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[14] <= rb.entries[4].request.inFetch[2] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[15] <= rb.entries[5].request.inFetch[0] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[16] <= rb.entries[5].request.inFetch[1] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[17] <= rb.entries[5].request.inFetch[2] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[18] <= rb.entries[6].request.inFetch[0] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[19] <= rb.entries[6].request.inFetch[1] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[20] <= rb.entries[6].request.inFetch[2] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[21] <= rb.entries[7].request.inFetch[0] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[22] <= rb.entries[7].request.inFetch[1] @[POSIT_Locality.scala 156:61]
    crnt_inFetch[23] <= rb.entries[7].request.inFetch[2] @[POSIT_Locality.scala 156:61]
    when fetchArb.io.hasChosen : @[POSIT_Locality.scala 159:36]
      node _T_404 = cat(crnt_inFetch[2], crnt_inFetch[1]) @[POSIT_Locality.scala 160:42]
      node _T_405 = cat(_T_404, crnt_inFetch[0]) @[POSIT_Locality.scala 160:42]
      node _T_406 = cat(crnt_inFetch[5], crnt_inFetch[4]) @[POSIT_Locality.scala 160:42]
      node _T_407 = cat(_T_406, crnt_inFetch[3]) @[POSIT_Locality.scala 160:42]
      node _T_408 = cat(_T_407, _T_405) @[POSIT_Locality.scala 160:42]
      node _T_409 = cat(crnt_inFetch[8], crnt_inFetch[7]) @[POSIT_Locality.scala 160:42]
      node _T_410 = cat(_T_409, crnt_inFetch[6]) @[POSIT_Locality.scala 160:42]
      node _T_411 = cat(crnt_inFetch[11], crnt_inFetch[10]) @[POSIT_Locality.scala 160:42]
      node _T_412 = cat(_T_411, crnt_inFetch[9]) @[POSIT_Locality.scala 160:42]
      node _T_413 = cat(_T_412, _T_410) @[POSIT_Locality.scala 160:42]
      node _T_414 = cat(_T_413, _T_408) @[POSIT_Locality.scala 160:42]
      node _T_415 = cat(crnt_inFetch[14], crnt_inFetch[13]) @[POSIT_Locality.scala 160:42]
      node _T_416 = cat(_T_415, crnt_inFetch[12]) @[POSIT_Locality.scala 160:42]
      node _T_417 = cat(crnt_inFetch[17], crnt_inFetch[16]) @[POSIT_Locality.scala 160:42]
      node _T_418 = cat(_T_417, crnt_inFetch[15]) @[POSIT_Locality.scala 160:42]
      node _T_419 = cat(_T_418, _T_416) @[POSIT_Locality.scala 160:42]
      node _T_420 = cat(crnt_inFetch[20], crnt_inFetch[19]) @[POSIT_Locality.scala 160:42]
      node _T_421 = cat(_T_420, crnt_inFetch[18]) @[POSIT_Locality.scala 160:42]
      node _T_422 = cat(crnt_inFetch[23], crnt_inFetch[22]) @[POSIT_Locality.scala 160:42]
      node _T_423 = cat(_T_422, crnt_inFetch[21]) @[POSIT_Locality.scala 160:42]
      node _T_424 = cat(_T_423, _T_421) @[POSIT_Locality.scala 160:42]
      node _T_425 = cat(_T_424, _T_419) @[POSIT_Locality.scala 160:42]
      node _T_426 = cat(_T_425, _T_414) @[POSIT_Locality.scala 160:42]
      node _T_427 = dshl(UInt<1>("h01"), fetchArb.io.chosen) @[OneHot.scala 58:35]
      node _T_428 = bits(_T_427, 23, 0) @[POSIT_Locality.scala 160:80]
      node _T_429 = xor(_T_426, _T_428) @[POSIT_Locality.scala 160:49]
      node _T_430 = bits(_T_429, 0, 0) @[POSIT_Locality.scala 160:126]
      node _T_431 = bits(_T_429, 1, 1) @[POSIT_Locality.scala 160:126]
      node _T_432 = bits(_T_429, 2, 2) @[POSIT_Locality.scala 160:126]
      node _T_433 = bits(_T_429, 3, 3) @[POSIT_Locality.scala 160:126]
      node _T_434 = bits(_T_429, 4, 4) @[POSIT_Locality.scala 160:126]
      node _T_435 = bits(_T_429, 5, 5) @[POSIT_Locality.scala 160:126]
      node _T_436 = bits(_T_429, 6, 6) @[POSIT_Locality.scala 160:126]
      node _T_437 = bits(_T_429, 7, 7) @[POSIT_Locality.scala 160:126]
      node _T_438 = bits(_T_429, 8, 8) @[POSIT_Locality.scala 160:126]
      node _T_439 = bits(_T_429, 9, 9) @[POSIT_Locality.scala 160:126]
      node _T_440 = bits(_T_429, 10, 10) @[POSIT_Locality.scala 160:126]
      node _T_441 = bits(_T_429, 11, 11) @[POSIT_Locality.scala 160:126]
      node _T_442 = bits(_T_429, 12, 12) @[POSIT_Locality.scala 160:126]
      node _T_443 = bits(_T_429, 13, 13) @[POSIT_Locality.scala 160:126]
      node _T_444 = bits(_T_429, 14, 14) @[POSIT_Locality.scala 160:126]
      node _T_445 = bits(_T_429, 15, 15) @[POSIT_Locality.scala 160:126]
      node _T_446 = bits(_T_429, 16, 16) @[POSIT_Locality.scala 160:126]
      node _T_447 = bits(_T_429, 17, 17) @[POSIT_Locality.scala 160:126]
      node _T_448 = bits(_T_429, 18, 18) @[POSIT_Locality.scala 160:126]
      node _T_449 = bits(_T_429, 19, 19) @[POSIT_Locality.scala 160:126]
      node _T_450 = bits(_T_429, 20, 20) @[POSIT_Locality.scala 160:126]
      node _T_451 = bits(_T_429, 21, 21) @[POSIT_Locality.scala 160:126]
      node _T_452 = bits(_T_429, 22, 22) @[POSIT_Locality.scala 160:126]
      node _T_453 = bits(_T_429, 23, 23) @[POSIT_Locality.scala 160:126]
      inFetch[0] <= _T_430 @[POSIT_Locality.scala 160:25]
      inFetch[1] <= _T_431 @[POSIT_Locality.scala 160:25]
      inFetch[2] <= _T_432 @[POSIT_Locality.scala 160:25]
      inFetch[3] <= _T_433 @[POSIT_Locality.scala 160:25]
      inFetch[4] <= _T_434 @[POSIT_Locality.scala 160:25]
      inFetch[5] <= _T_435 @[POSIT_Locality.scala 160:25]
      inFetch[6] <= _T_436 @[POSIT_Locality.scala 160:25]
      inFetch[7] <= _T_437 @[POSIT_Locality.scala 160:25]
      inFetch[8] <= _T_438 @[POSIT_Locality.scala 160:25]
      inFetch[9] <= _T_439 @[POSIT_Locality.scala 160:25]
      inFetch[10] <= _T_440 @[POSIT_Locality.scala 160:25]
      inFetch[11] <= _T_441 @[POSIT_Locality.scala 160:25]
      inFetch[12] <= _T_442 @[POSIT_Locality.scala 160:25]
      inFetch[13] <= _T_443 @[POSIT_Locality.scala 160:25]
      inFetch[14] <= _T_444 @[POSIT_Locality.scala 160:25]
      inFetch[15] <= _T_445 @[POSIT_Locality.scala 160:25]
      inFetch[16] <= _T_446 @[POSIT_Locality.scala 160:25]
      inFetch[17] <= _T_447 @[POSIT_Locality.scala 160:25]
      inFetch[18] <= _T_448 @[POSIT_Locality.scala 160:25]
      inFetch[19] <= _T_449 @[POSIT_Locality.scala 160:25]
      inFetch[20] <= _T_450 @[POSIT_Locality.scala 160:25]
      inFetch[21] <= _T_451 @[POSIT_Locality.scala 160:25]
      inFetch[22] <= _T_452 @[POSIT_Locality.scala 160:25]
      inFetch[23] <= _T_453 @[POSIT_Locality.scala 160:25]
      io.mem_read.req_valid <= UInt<1>("h01") @[POSIT_Locality.scala 161:39]
      io.mem_read.req_addr <= fetchOffSet[fetchArb.io.chosen] @[POSIT_Locality.scala 162:38]
      skip @[POSIT_Locality.scala 159:36]
    else : @[POSIT_Locality.scala 163:20]
      inFetch[0] <= crnt_inFetch[0] @[POSIT_Locality.scala 164:25]
      inFetch[1] <= crnt_inFetch[1] @[POSIT_Locality.scala 164:25]
      inFetch[2] <= crnt_inFetch[2] @[POSIT_Locality.scala 164:25]
      inFetch[3] <= crnt_inFetch[3] @[POSIT_Locality.scala 164:25]
      inFetch[4] <= crnt_inFetch[4] @[POSIT_Locality.scala 164:25]
      inFetch[5] <= crnt_inFetch[5] @[POSIT_Locality.scala 164:25]
      inFetch[6] <= crnt_inFetch[6] @[POSIT_Locality.scala 164:25]
      inFetch[7] <= crnt_inFetch[7] @[POSIT_Locality.scala 164:25]
      inFetch[8] <= crnt_inFetch[8] @[POSIT_Locality.scala 164:25]
      inFetch[9] <= crnt_inFetch[9] @[POSIT_Locality.scala 164:25]
      inFetch[10] <= crnt_inFetch[10] @[POSIT_Locality.scala 164:25]
      inFetch[11] <= crnt_inFetch[11] @[POSIT_Locality.scala 164:25]
      inFetch[12] <= crnt_inFetch[12] @[POSIT_Locality.scala 164:25]
      inFetch[13] <= crnt_inFetch[13] @[POSIT_Locality.scala 164:25]
      inFetch[14] <= crnt_inFetch[14] @[POSIT_Locality.scala 164:25]
      inFetch[15] <= crnt_inFetch[15] @[POSIT_Locality.scala 164:25]
      inFetch[16] <= crnt_inFetch[16] @[POSIT_Locality.scala 164:25]
      inFetch[17] <= crnt_inFetch[17] @[POSIT_Locality.scala 164:25]
      inFetch[18] <= crnt_inFetch[18] @[POSIT_Locality.scala 164:25]
      inFetch[19] <= crnt_inFetch[19] @[POSIT_Locality.scala 164:25]
      inFetch[20] <= crnt_inFetch[20] @[POSIT_Locality.scala 164:25]
      inFetch[21] <= crnt_inFetch[21] @[POSIT_Locality.scala 164:25]
      inFetch[22] <= crnt_inFetch[22] @[POSIT_Locality.scala 164:25]
      inFetch[23] <= crnt_inFetch[23] @[POSIT_Locality.scala 164:25]
      io.mem_read.req_valid <= UInt<1>("h00") @[POSIT_Locality.scala 165:39]
      io.mem_read.req_addr <= fetchOffSet[fetchArb.io.chosen] @[POSIT_Locality.scala 166:38]
      skip @[POSIT_Locality.scala 163:20]
    node _T_454 = eq(io.request.bits.wr_addr, UInt<1>("h00")) @[POSIT_Locality.scala 169:32]
    node _T_455 = and(_T_454, new_input_log) @[POSIT_Locality.scala 169:40]
    when _T_455 : @[POSIT_Locality.scala 169:57]
      rb.entries[UInt<1>("h00")].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<1>("h00")].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<1>("h00")].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      skip @[POSIT_Locality.scala 169:57]
    else : @[POSIT_Locality.scala 171:28]
      rb.entries[0].request.inFetch[0] <= inFetch[0] @[POSIT_Locality.scala 173:66]
      rb.entries[0].request.inFetch[1] <= inFetch[1] @[POSIT_Locality.scala 173:66]
      rb.entries[0].request.inFetch[2] <= inFetch[2] @[POSIT_Locality.scala 173:66]
      skip @[POSIT_Locality.scala 171:28]
    node _T_456 = eq(io.request.bits.wr_addr, UInt<1>("h01")) @[POSIT_Locality.scala 169:32]
    node _T_457 = and(_T_456, new_input_log) @[POSIT_Locality.scala 169:40]
    when _T_457 : @[POSIT_Locality.scala 169:57]
      rb.entries[UInt<1>("h01")].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<1>("h01")].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<1>("h01")].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      skip @[POSIT_Locality.scala 169:57]
    else : @[POSIT_Locality.scala 171:28]
      rb.entries[1].request.inFetch[0] <= inFetch[3] @[POSIT_Locality.scala 173:66]
      rb.entries[1].request.inFetch[1] <= inFetch[4] @[POSIT_Locality.scala 173:66]
      rb.entries[1].request.inFetch[2] <= inFetch[5] @[POSIT_Locality.scala 173:66]
      skip @[POSIT_Locality.scala 171:28]
    node _T_458 = eq(io.request.bits.wr_addr, UInt<2>("h02")) @[POSIT_Locality.scala 169:32]
    node _T_459 = and(_T_458, new_input_log) @[POSIT_Locality.scala 169:40]
    when _T_459 : @[POSIT_Locality.scala 169:57]
      rb.entries[UInt<2>("h02")].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<2>("h02")].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<2>("h02")].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      skip @[POSIT_Locality.scala 169:57]
    else : @[POSIT_Locality.scala 171:28]
      rb.entries[2].request.inFetch[0] <= inFetch[6] @[POSIT_Locality.scala 173:66]
      rb.entries[2].request.inFetch[1] <= inFetch[7] @[POSIT_Locality.scala 173:66]
      rb.entries[2].request.inFetch[2] <= inFetch[8] @[POSIT_Locality.scala 173:66]
      skip @[POSIT_Locality.scala 171:28]
    node _T_460 = eq(io.request.bits.wr_addr, UInt<2>("h03")) @[POSIT_Locality.scala 169:32]
    node _T_461 = and(_T_460, new_input_log) @[POSIT_Locality.scala 169:40]
    when _T_461 : @[POSIT_Locality.scala 169:57]
      rb.entries[UInt<2>("h03")].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<2>("h03")].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<2>("h03")].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      skip @[POSIT_Locality.scala 169:57]
    else : @[POSIT_Locality.scala 171:28]
      rb.entries[3].request.inFetch[0] <= inFetch[9] @[POSIT_Locality.scala 173:66]
      rb.entries[3].request.inFetch[1] <= inFetch[10] @[POSIT_Locality.scala 173:66]
      rb.entries[3].request.inFetch[2] <= inFetch[11] @[POSIT_Locality.scala 173:66]
      skip @[POSIT_Locality.scala 171:28]
    node _T_462 = eq(io.request.bits.wr_addr, UInt<3>("h04")) @[POSIT_Locality.scala 169:32]
    node _T_463 = and(_T_462, new_input_log) @[POSIT_Locality.scala 169:40]
    when _T_463 : @[POSIT_Locality.scala 169:57]
      rb.entries[UInt<3>("h04")].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<3>("h04")].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<3>("h04")].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      skip @[POSIT_Locality.scala 169:57]
    else : @[POSIT_Locality.scala 171:28]
      rb.entries[4].request.inFetch[0] <= inFetch[12] @[POSIT_Locality.scala 173:66]
      rb.entries[4].request.inFetch[1] <= inFetch[13] @[POSIT_Locality.scala 173:66]
      rb.entries[4].request.inFetch[2] <= inFetch[14] @[POSIT_Locality.scala 173:66]
      skip @[POSIT_Locality.scala 171:28]
    node _T_464 = eq(io.request.bits.wr_addr, UInt<3>("h05")) @[POSIT_Locality.scala 169:32]
    node _T_465 = and(_T_464, new_input_log) @[POSIT_Locality.scala 169:40]
    when _T_465 : @[POSIT_Locality.scala 169:57]
      rb.entries[UInt<3>("h05")].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<3>("h05")].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<3>("h05")].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      skip @[POSIT_Locality.scala 169:57]
    else : @[POSIT_Locality.scala 171:28]
      rb.entries[5].request.inFetch[0] <= inFetch[15] @[POSIT_Locality.scala 173:66]
      rb.entries[5].request.inFetch[1] <= inFetch[16] @[POSIT_Locality.scala 173:66]
      rb.entries[5].request.inFetch[2] <= inFetch[17] @[POSIT_Locality.scala 173:66]
      skip @[POSIT_Locality.scala 171:28]
    node _T_466 = eq(io.request.bits.wr_addr, UInt<3>("h06")) @[POSIT_Locality.scala 169:32]
    node _T_467 = and(_T_466, new_input_log) @[POSIT_Locality.scala 169:40]
    when _T_467 : @[POSIT_Locality.scala 169:57]
      rb.entries[UInt<3>("h06")].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<3>("h06")].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<3>("h06")].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      skip @[POSIT_Locality.scala 169:57]
    else : @[POSIT_Locality.scala 171:28]
      rb.entries[6].request.inFetch[0] <= inFetch[18] @[POSIT_Locality.scala 173:66]
      rb.entries[6].request.inFetch[1] <= inFetch[19] @[POSIT_Locality.scala 173:66]
      rb.entries[6].request.inFetch[2] <= inFetch[20] @[POSIT_Locality.scala 173:66]
      skip @[POSIT_Locality.scala 171:28]
    node _T_468 = eq(io.request.bits.wr_addr, UInt<3>("h07")) @[POSIT_Locality.scala 169:32]
    node _T_469 = and(_T_468, new_input_log) @[POSIT_Locality.scala 169:40]
    when _T_469 : @[POSIT_Locality.scala 169:57]
      rb.entries[UInt<3>("h07")].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<3>("h07")].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      rb.entries[UInt<3>("h07")].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 170:57]
      skip @[POSIT_Locality.scala 169:57]
    else : @[POSIT_Locality.scala 171:28]
      rb.entries[7].request.inFetch[0] <= inFetch[21] @[POSIT_Locality.scala 173:66]
      rb.entries[7].request.inFetch[1] <= inFetch[22] @[POSIT_Locality.scala 173:66]
      rb.entries[7].request.inFetch[2] <= inFetch[23] @[POSIT_Locality.scala 173:66]
      skip @[POSIT_Locality.scala 171:28]
    node _T_470 = or(io.mem_read.req_valid, io.mem_read.resp_valid) @[POSIT_Locality.scala 179:44]
    when _T_470 : @[POSIT_Locality.scala 179:69]
      node _T_471 = bits(reset, 0, 0) @[POSIT_Locality.scala 180:31]
      node _T_472 = eq(_T_471, UInt<1>("h00")) @[POSIT_Locality.scala 180:31]
      when _T_472 : @[POSIT_Locality.scala 180:31]
        printf(clock, UInt<1>(1), "\t-mem_read:\n") @[POSIT_Locality.scala 180:31]
        skip @[POSIT_Locality.scala 180:31]
      node _T_473 = bits(reset, 0, 0) @[POSIT_Locality.scala 181:31]
      node _T_474 = eq(_T_473, UInt<1>("h00")) @[POSIT_Locality.scala 181:31]
      when _T_474 : @[POSIT_Locality.scala 181:31]
        printf(clock, UInt<1>(1), "\t\t-req_valid: %b\n", io.mem_read.req_valid) @[POSIT_Locality.scala 181:31]
        skip @[POSIT_Locality.scala 181:31]
      node _T_475 = bits(reset, 0, 0) @[POSIT_Locality.scala 182:31]
      node _T_476 = eq(_T_475, UInt<1>("h00")) @[POSIT_Locality.scala 182:31]
      when _T_476 : @[POSIT_Locality.scala 182:31]
        printf(clock, UInt<1>(1), "\t\t-req_addr: %x\n", io.mem_read.req_addr) @[POSIT_Locality.scala 182:31]
        skip @[POSIT_Locality.scala 182:31]
      node _T_477 = bits(reset, 0, 0) @[POSIT_Locality.scala 183:31]
      node _T_478 = eq(_T_477, UInt<1>("h00")) @[POSIT_Locality.scala 183:31]
      when _T_478 : @[POSIT_Locality.scala 183:31]
        printf(clock, UInt<1>(1), "\t\t-resp_valid: %b\n", io.mem_read.resp_valid) @[POSIT_Locality.scala 183:31]
        skip @[POSIT_Locality.scala 183:31]
      node _T_479 = bits(reset, 0, 0) @[POSIT_Locality.scala 184:31]
      node _T_480 = eq(_T_479, UInt<1>("h00")) @[POSIT_Locality.scala 184:31]
      when _T_480 : @[POSIT_Locality.scala 184:31]
        printf(clock, UInt<1>(1), "\t\t-data: %x\n", io.mem_read.data) @[POSIT_Locality.scala 184:31]
        skip @[POSIT_Locality.scala 184:31]
      node _T_481 = bits(reset, 0, 0) @[POSIT_Locality.scala 185:31]
      node _T_482 = eq(_T_481, UInt<1>("h00")) @[POSIT_Locality.scala 185:31]
      when _T_482 : @[POSIT_Locality.scala 185:31]
        printf(clock, UInt<1>(1), "\t\t-resp_tag: %x\n", io.mem_read.resp_tag) @[POSIT_Locality.scala 185:31]
        skip @[POSIT_Locality.scala 185:31]
      skip @[POSIT_Locality.scala 179:69]
    when io.mem_write.valid : @[POSIT_Locality.scala 187:41]
      node _T_483 = bits(reset, 0, 0) @[POSIT_Locality.scala 188:31]
      node _T_484 = eq(_T_483, UInt<1>("h00")) @[POSIT_Locality.scala 188:31]
      when _T_484 : @[POSIT_Locality.scala 188:31]
        printf(clock, UInt<1>(1), "\t-mem_write:\n") @[POSIT_Locality.scala 188:31]
        skip @[POSIT_Locality.scala 188:31]
      node _T_485 = bits(reset, 0, 0) @[POSIT_Locality.scala 189:31]
      node _T_486 = eq(_T_485, UInt<1>("h00")) @[POSIT_Locality.scala 189:31]
      when _T_486 : @[POSIT_Locality.scala 189:31]
        printf(clock, UInt<1>(1), "\t\t-valid: %b\n", io.mem_write.valid) @[POSIT_Locality.scala 189:31]
        skip @[POSIT_Locality.scala 189:31]
      node _T_487 = bits(reset, 0, 0) @[POSIT_Locality.scala 190:31]
      node _T_488 = eq(_T_487, UInt<1>("h00")) @[POSIT_Locality.scala 190:31]
      when _T_488 : @[POSIT_Locality.scala 190:31]
        printf(clock, UInt<1>(1), "\t\t-ready: %b\n", io.mem_write.ready) @[POSIT_Locality.scala 190:31]
        skip @[POSIT_Locality.scala 190:31]
      node _T_489 = bits(reset, 0, 0) @[POSIT_Locality.scala 191:31]
      node _T_490 = eq(_T_489, UInt<1>("h00")) @[POSIT_Locality.scala 191:31]
      when _T_490 : @[POSIT_Locality.scala 191:31]
        printf(clock, UInt<1>(1), "\t\t-bits:\n") @[POSIT_Locality.scala 191:31]
        skip @[POSIT_Locality.scala 191:31]
      node _T_491 = bits(reset, 0, 0) @[POSIT_Locality.scala 192:31]
      node _T_492 = eq(_T_491, UInt<1>("h00")) @[POSIT_Locality.scala 192:31]
      when _T_492 : @[POSIT_Locality.scala 192:31]
        printf(clock, UInt<1>(1), "\t\t\t-wr_addr: %x\n", io.mem_write.bits.wr_addr) @[POSIT_Locality.scala 192:31]
        skip @[POSIT_Locality.scala 192:31]
      node _T_493 = bits(reset, 0, 0) @[POSIT_Locality.scala 193:31]
      node _T_494 = eq(_T_493, UInt<1>("h00")) @[POSIT_Locality.scala 193:31]
      when _T_494 : @[POSIT_Locality.scala 193:31]
        printf(clock, UInt<1>(1), "\t\t\t-result: \n") @[POSIT_Locality.scala 193:31]
        skip @[POSIT_Locality.scala 193:31]
      node _T_495 = bits(reset, 0, 0) @[POSIT_Locality.scala 194:31]
      node _T_496 = eq(_T_495, UInt<1>("h00")) @[POSIT_Locality.scala 194:31]
      when _T_496 : @[POSIT_Locality.scala 194:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-isZero: %b\n", io.mem_write.bits.result.isZero) @[POSIT_Locality.scala 194:31]
        skip @[POSIT_Locality.scala 194:31]
      node _T_497 = bits(reset, 0, 0) @[POSIT_Locality.scala 195:31]
      node _T_498 = eq(_T_497, UInt<1>("h00")) @[POSIT_Locality.scala 195:31]
      when _T_498 : @[POSIT_Locality.scala 195:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-isNaR: %b\n", io.mem_write.bits.result.isNaR) @[POSIT_Locality.scala 195:31]
        skip @[POSIT_Locality.scala 195:31]
      node _T_499 = bits(reset, 0, 0) @[POSIT_Locality.scala 196:31]
      node _T_500 = eq(_T_499, UInt<1>("h00")) @[POSIT_Locality.scala 196:31]
      when _T_500 : @[POSIT_Locality.scala 196:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-lt: %b\n", io.mem_write.bits.result.lt) @[POSIT_Locality.scala 196:31]
        skip @[POSIT_Locality.scala 196:31]
      node _T_501 = bits(reset, 0, 0) @[POSIT_Locality.scala 197:31]
      node _T_502 = eq(_T_501, UInt<1>("h00")) @[POSIT_Locality.scala 197:31]
      when _T_502 : @[POSIT_Locality.scala 197:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-eq: %b\n", io.mem_write.bits.result.eq) @[POSIT_Locality.scala 197:31]
        skip @[POSIT_Locality.scala 197:31]
      node _T_503 = bits(reset, 0, 0) @[POSIT_Locality.scala 198:31]
      node _T_504 = eq(_T_503, UInt<1>("h00")) @[POSIT_Locality.scala 198:31]
      when _T_504 : @[POSIT_Locality.scala 198:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-gt: %b\n", io.mem_write.bits.result.gt) @[POSIT_Locality.scala 198:31]
        skip @[POSIT_Locality.scala 198:31]
      node _T_505 = bits(reset, 0, 0) @[POSIT_Locality.scala 199:31]
      node _T_506 = eq(_T_505, UInt<1>("h00")) @[POSIT_Locality.scala 199:31]
      when _T_506 : @[POSIT_Locality.scala 199:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-exceptions: %x\n", io.mem_write.bits.result.exceptions) @[POSIT_Locality.scala 199:31]
        skip @[POSIT_Locality.scala 199:31]
      node _T_507 = bits(reset, 0, 0) @[POSIT_Locality.scala 200:31]
      node _T_508 = eq(_T_507, UInt<1>("h00")) @[POSIT_Locality.scala 200:31]
      when _T_508 : @[POSIT_Locality.scala 200:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-out: %b\n", io.mem_write.bits.result.out) @[POSIT_Locality.scala 200:31]
        skip @[POSIT_Locality.scala 200:31]
      skip @[POSIT_Locality.scala 187:41]
    node _T_509 = or(io.request.valid, io.mem_write.valid) @[POSIT_Locality.scala 203:39]
    node _T_510 = or(_T_509, pe.io.result.valid) @[POSIT_Locality.scala 203:61]
    when _T_510 : @[POSIT_Locality.scala 203:83]
      node _T_511 = bits(reset, 0, 0) @[POSIT_Locality.scala 204:31]
      node _T_512 = eq(_T_511, UInt<1>("h00")) @[POSIT_Locality.scala 204:31]
      when _T_512 : @[POSIT_Locality.scala 204:31]
        printf(clock, UInt<1>(1), "top level io:\n") @[POSIT_Locality.scala 204:31]
        skip @[POSIT_Locality.scala 204:31]
      node _T_513 = bits(reset, 0, 0) @[POSIT_Locality.scala 205:31]
      node _T_514 = eq(_T_513, UInt<1>("h00")) @[POSIT_Locality.scala 205:31]
      when _T_514 : @[POSIT_Locality.scala 205:31]
        printf(clock, UInt<1>(1), "\t-request:\n") @[POSIT_Locality.scala 205:31]
        skip @[POSIT_Locality.scala 205:31]
      node _T_515 = bits(reset, 0, 0) @[POSIT_Locality.scala 206:31]
      node _T_516 = eq(_T_515, UInt<1>("h00")) @[POSIT_Locality.scala 206:31]
      when _T_516 : @[POSIT_Locality.scala 206:31]
        printf(clock, UInt<1>(1), "\t\t-valid: %b\n", io.request.valid) @[POSIT_Locality.scala 206:31]
        skip @[POSIT_Locality.scala 206:31]
      node _T_517 = bits(reset, 0, 0) @[POSIT_Locality.scala 207:31]
      node _T_518 = eq(_T_517, UInt<1>("h00")) @[POSIT_Locality.scala 207:31]
      when _T_518 : @[POSIT_Locality.scala 207:31]
        printf(clock, UInt<1>(1), "\t\t-ready: %b\n", io.request.ready) @[POSIT_Locality.scala 207:31]
        skip @[POSIT_Locality.scala 207:31]
      node _T_519 = bits(reset, 0, 0) @[POSIT_Locality.scala 208:31]
      node _T_520 = eq(_T_519, UInt<1>("h00")) @[POSIT_Locality.scala 208:31]
      when _T_520 : @[POSIT_Locality.scala 208:31]
        printf(clock, UInt<1>(1), "\t\t-bits:\n") @[POSIT_Locality.scala 208:31]
        skip @[POSIT_Locality.scala 208:31]
      node _T_521 = bits(reset, 0, 0) @[POSIT_Locality.scala 209:31]
      node _T_522 = eq(_T_521, UInt<1>("h00")) @[POSIT_Locality.scala 209:31]
      when _T_522 : @[POSIT_Locality.scala 209:31]
        printf(clock, UInt<1>(1), "\t\t\t-inst: %x\n", io.request.bits.inst) @[POSIT_Locality.scala 209:31]
        skip @[POSIT_Locality.scala 209:31]
      node _T_523 = bits(reset, 0, 0) @[POSIT_Locality.scala 210:31]
      node _T_524 = eq(_T_523, UInt<1>("h00")) @[POSIT_Locality.scala 210:31]
      when _T_524 : @[POSIT_Locality.scala 210:31]
        printf(clock, UInt<1>(1), "\t\t\t-mode: %x\n", io.request.bits.mode) @[POSIT_Locality.scala 210:31]
        skip @[POSIT_Locality.scala 210:31]
      node _T_525 = bits(reset, 0, 0) @[POSIT_Locality.scala 211:31]
      node _T_526 = eq(_T_525, UInt<1>("h00")) @[POSIT_Locality.scala 211:31]
      when _T_526 : @[POSIT_Locality.scala 211:31]
        printf(clock, UInt<1>(1), "\t\t\t-wr_addr: %x\n", io.request.bits.wr_addr) @[POSIT_Locality.scala 211:31]
        skip @[POSIT_Locality.scala 211:31]
      node _T_527 = bits(reset, 0, 0) @[POSIT_Locality.scala 213:39]
      node _T_528 = eq(_T_527, UInt<1>("h00")) @[POSIT_Locality.scala 213:39]
      when _T_528 : @[POSIT_Locality.scala 213:39]
        printf(clock, UInt<1>(1), "\t\t\t-operand0:\n") @[POSIT_Locality.scala 213:39]
        skip @[POSIT_Locality.scala 213:39]
      node _T_529 = bits(reset, 0, 0) @[POSIT_Locality.scala 214:39]
      node _T_530 = eq(_T_529, UInt<1>("h00")) @[POSIT_Locality.scala 214:39]
      when _T_530 : @[POSIT_Locality.scala 214:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-value: %x\n", io.request.bits.operands[0].value) @[POSIT_Locality.scala 214:39]
        skip @[POSIT_Locality.scala 214:39]
      node _T_531 = bits(reset, 0, 0) @[POSIT_Locality.scala 215:39]
      node _T_532 = eq(_T_531, UInt<1>("h00")) @[POSIT_Locality.scala 215:39]
      when _T_532 : @[POSIT_Locality.scala 215:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-mode: %x\n", io.request.bits.operands[0].mode) @[POSIT_Locality.scala 215:39]
        skip @[POSIT_Locality.scala 215:39]
      node _T_533 = bits(reset, 0, 0) @[POSIT_Locality.scala 213:39]
      node _T_534 = eq(_T_533, UInt<1>("h00")) @[POSIT_Locality.scala 213:39]
      when _T_534 : @[POSIT_Locality.scala 213:39]
        printf(clock, UInt<1>(1), "\t\t\t-operand1:\n") @[POSIT_Locality.scala 213:39]
        skip @[POSIT_Locality.scala 213:39]
      node _T_535 = bits(reset, 0, 0) @[POSIT_Locality.scala 214:39]
      node _T_536 = eq(_T_535, UInt<1>("h00")) @[POSIT_Locality.scala 214:39]
      when _T_536 : @[POSIT_Locality.scala 214:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-value: %x\n", io.request.bits.operands[1].value) @[POSIT_Locality.scala 214:39]
        skip @[POSIT_Locality.scala 214:39]
      node _T_537 = bits(reset, 0, 0) @[POSIT_Locality.scala 215:39]
      node _T_538 = eq(_T_537, UInt<1>("h00")) @[POSIT_Locality.scala 215:39]
      when _T_538 : @[POSIT_Locality.scala 215:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-mode: %x\n", io.request.bits.operands[1].mode) @[POSIT_Locality.scala 215:39]
        skip @[POSIT_Locality.scala 215:39]
      node _T_539 = bits(reset, 0, 0) @[POSIT_Locality.scala 213:39]
      node _T_540 = eq(_T_539, UInt<1>("h00")) @[POSIT_Locality.scala 213:39]
      when _T_540 : @[POSIT_Locality.scala 213:39]
        printf(clock, UInt<1>(1), "\t\t\t-operand2:\n") @[POSIT_Locality.scala 213:39]
        skip @[POSIT_Locality.scala 213:39]
      node _T_541 = bits(reset, 0, 0) @[POSIT_Locality.scala 214:39]
      node _T_542 = eq(_T_541, UInt<1>("h00")) @[POSIT_Locality.scala 214:39]
      when _T_542 : @[POSIT_Locality.scala 214:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-value: %x\n", io.request.bits.operands[2].value) @[POSIT_Locality.scala 214:39]
        skip @[POSIT_Locality.scala 214:39]
      node _T_543 = bits(reset, 0, 0) @[POSIT_Locality.scala 215:39]
      node _T_544 = eq(_T_543, UInt<1>("h00")) @[POSIT_Locality.scala 215:39]
      when _T_544 : @[POSIT_Locality.scala 215:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-mode: %x\n", io.request.bits.operands[2].mode) @[POSIT_Locality.scala 215:39]
        skip @[POSIT_Locality.scala 215:39]
      node _T_545 = bits(reset, 0, 0) @[POSIT_Locality.scala 218:31]
      node _T_546 = eq(_T_545, UInt<1>("h00")) @[POSIT_Locality.scala 218:31]
      when _T_546 : @[POSIT_Locality.scala 218:31]
        printf(clock, UInt<1>(1), "\t-fetchArb:\n") @[POSIT_Locality.scala 218:31]
        skip @[POSIT_Locality.scala 218:31]
      node _T_547 = bits(reset, 0, 0) @[POSIT_Locality.scala 219:31]
      node _T_548 = eq(_T_547, UInt<1>("h00")) @[POSIT_Locality.scala 219:31]
      when _T_548 : @[POSIT_Locality.scala 219:31]
        printf(clock, UInt<1>(1), "\t\t-validity:%b\n", fetchArb.io.validity) @[POSIT_Locality.scala 219:31]
        skip @[POSIT_Locality.scala 219:31]
      node _T_549 = bits(reset, 0, 0) @[POSIT_Locality.scala 220:31]
      node _T_550 = eq(_T_549, UInt<1>("h00")) @[POSIT_Locality.scala 220:31]
      when _T_550 : @[POSIT_Locality.scala 220:31]
        printf(clock, UInt<1>(1), "\t\t-priority:%x\n", fetchArb.io.priority) @[POSIT_Locality.scala 220:31]
        skip @[POSIT_Locality.scala 220:31]
      node _T_551 = bits(reset, 0, 0) @[POSIT_Locality.scala 221:31]
      node _T_552 = eq(_T_551, UInt<1>("h00")) @[POSIT_Locality.scala 221:31]
      when _T_552 : @[POSIT_Locality.scala 221:31]
        printf(clock, UInt<1>(1), "\t\t-chosen:%x\n", fetchArb.io.chosen) @[POSIT_Locality.scala 221:31]
        skip @[POSIT_Locality.scala 221:31]
      node _T_553 = bits(reset, 0, 0) @[POSIT_Locality.scala 222:31]
      node _T_554 = eq(_T_553, UInt<1>("h00")) @[POSIT_Locality.scala 222:31]
      when _T_554 : @[POSIT_Locality.scala 222:31]
        printf(clock, UInt<1>(1), "\t\t-hasChosen:%b\n", fetchArb.io.hasChosen) @[POSIT_Locality.scala 222:31]
        skip @[POSIT_Locality.scala 222:31]
      node _T_555 = bits(reset, 0, 0) @[POSIT_Locality.scala 224:31]
      node _T_556 = eq(_T_555, UInt<1>("h00")) @[POSIT_Locality.scala 224:31]
      when _T_556 : @[POSIT_Locality.scala 224:31]
        printf(clock, UInt<1>(1), "\t-dispatchArb\n") @[POSIT_Locality.scala 224:31]
        skip @[POSIT_Locality.scala 224:31]
      node _T_557 = bits(reset, 0, 0) @[POSIT_Locality.scala 225:31]
      node _T_558 = eq(_T_557, UInt<1>("h00")) @[POSIT_Locality.scala 225:31]
      when _T_558 : @[POSIT_Locality.scala 225:31]
        printf(clock, UInt<1>(1), "\t\t-validity:%b\n", dispatchArb.io.validity) @[POSIT_Locality.scala 225:31]
        skip @[POSIT_Locality.scala 225:31]
      node _T_559 = bits(reset, 0, 0) @[POSIT_Locality.scala 226:31]
      node _T_560 = eq(_T_559, UInt<1>("h00")) @[POSIT_Locality.scala 226:31]
      when _T_560 : @[POSIT_Locality.scala 226:31]
        printf(clock, UInt<1>(1), "\t\t-priority:%x\n", dispatchArb.io.priority) @[POSIT_Locality.scala 226:31]
        skip @[POSIT_Locality.scala 226:31]
      node _T_561 = bits(reset, 0, 0) @[POSIT_Locality.scala 227:31]
      node _T_562 = eq(_T_561, UInt<1>("h00")) @[POSIT_Locality.scala 227:31]
      when _T_562 : @[POSIT_Locality.scala 227:31]
        printf(clock, UInt<1>(1), "\t\t-chosen:%x\n", dispatchArb.io.chosen) @[POSIT_Locality.scala 227:31]
        skip @[POSIT_Locality.scala 227:31]
      node _T_563 = bits(reset, 0, 0) @[POSIT_Locality.scala 228:31]
      node _T_564 = eq(_T_563, UInt<1>("h00")) @[POSIT_Locality.scala 228:31]
      when _T_564 : @[POSIT_Locality.scala 228:31]
        printf(clock, UInt<1>(1), "\t\t-hasChosen:%b\n", dispatchArb.io.hasChosen) @[POSIT_Locality.scala 228:31]
        skip @[POSIT_Locality.scala 228:31]
      node _T_565 = bits(reset, 0, 0) @[POSIT_Locality.scala 230:31]
      node _T_566 = eq(_T_565, UInt<1>("h00")) @[POSIT_Locality.scala 230:31]
      when _T_566 : @[POSIT_Locality.scala 230:31]
        printf(clock, UInt<1>(1), "rb data: \n") @[POSIT_Locality.scala 230:31]
        skip @[POSIT_Locality.scala 230:31]
      node _T_567 = bits(reset, 0, 0) @[POSIT_Locality.scala 231:31]
      node _T_568 = eq(_T_567, UInt<1>("h00")) @[POSIT_Locality.scala 231:31]
      when _T_568 : @[POSIT_Locality.scala 231:31]
        printf(clock, UInt<1>(1), "idx | completed | valid | dispatched | writtern | wr_addr| inst | mode | num0 | mode0 | infetch0 | num1 | mode1 | infetch1 | num2 | mode2 | infetch2 | isZero | isNar | out | lt | eq | gt | exceptions\n") @[POSIT_Locality.scala 231:31]
        skip @[POSIT_Locality.scala 231:31]
      node _T_569 = bits(reset, 0, 0) @[POSIT_Locality.scala 238:39]
      node _T_570 = eq(_T_569, UInt<1>("h00")) @[POSIT_Locality.scala 238:39]
      when _T_570 : @[POSIT_Locality.scala 238:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<1>("h00"), rb.entries[0].completed, rb.entries[0].valid, rb.entries[0].dispatched, rb.entries[0].written, rb.entries[0].wr_addr, rb.entries[0].request.inst, rb.entries[0].request.mode, rb.entries[0].request.operands[0].value, rb.entries[0].request.operands[0].mode, rb.entries[0].request.inFetch[0], rb.entries[0].request.operands[1].value, rb.entries[0].request.operands[1].mode, rb.entries[0].request.inFetch[1], rb.entries[0].request.operands[2].value, rb.entries[0].request.operands[2].mode, rb.entries[0].request.inFetch[2], rb.entries[0].result.isZero, rb.entries[0].result.isNaR, rb.entries[0].result.out, rb.entries[0].result.lt, rb.entries[0].result.eq, rb.entries[0].result.gt, rb.entries[0].result.exceptions) @[POSIT_Locality.scala 238:39]
        skip @[POSIT_Locality.scala 238:39]
      node _T_571 = bits(reset, 0, 0) @[POSIT_Locality.scala 238:39]
      node _T_572 = eq(_T_571, UInt<1>("h00")) @[POSIT_Locality.scala 238:39]
      when _T_572 : @[POSIT_Locality.scala 238:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<1>("h01"), rb.entries[1].completed, rb.entries[1].valid, rb.entries[1].dispatched, rb.entries[1].written, rb.entries[1].wr_addr, rb.entries[1].request.inst, rb.entries[1].request.mode, rb.entries[1].request.operands[0].value, rb.entries[1].request.operands[0].mode, rb.entries[1].request.inFetch[0], rb.entries[1].request.operands[1].value, rb.entries[1].request.operands[1].mode, rb.entries[1].request.inFetch[1], rb.entries[1].request.operands[2].value, rb.entries[1].request.operands[2].mode, rb.entries[1].request.inFetch[2], rb.entries[1].result.isZero, rb.entries[1].result.isNaR, rb.entries[1].result.out, rb.entries[1].result.lt, rb.entries[1].result.eq, rb.entries[1].result.gt, rb.entries[1].result.exceptions) @[POSIT_Locality.scala 238:39]
        skip @[POSIT_Locality.scala 238:39]
      node _T_573 = bits(reset, 0, 0) @[POSIT_Locality.scala 238:39]
      node _T_574 = eq(_T_573, UInt<1>("h00")) @[POSIT_Locality.scala 238:39]
      when _T_574 : @[POSIT_Locality.scala 238:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<2>("h02"), rb.entries[2].completed, rb.entries[2].valid, rb.entries[2].dispatched, rb.entries[2].written, rb.entries[2].wr_addr, rb.entries[2].request.inst, rb.entries[2].request.mode, rb.entries[2].request.operands[0].value, rb.entries[2].request.operands[0].mode, rb.entries[2].request.inFetch[0], rb.entries[2].request.operands[1].value, rb.entries[2].request.operands[1].mode, rb.entries[2].request.inFetch[1], rb.entries[2].request.operands[2].value, rb.entries[2].request.operands[2].mode, rb.entries[2].request.inFetch[2], rb.entries[2].result.isZero, rb.entries[2].result.isNaR, rb.entries[2].result.out, rb.entries[2].result.lt, rb.entries[2].result.eq, rb.entries[2].result.gt, rb.entries[2].result.exceptions) @[POSIT_Locality.scala 238:39]
        skip @[POSIT_Locality.scala 238:39]
      node _T_575 = bits(reset, 0, 0) @[POSIT_Locality.scala 238:39]
      node _T_576 = eq(_T_575, UInt<1>("h00")) @[POSIT_Locality.scala 238:39]
      when _T_576 : @[POSIT_Locality.scala 238:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<2>("h03"), rb.entries[3].completed, rb.entries[3].valid, rb.entries[3].dispatched, rb.entries[3].written, rb.entries[3].wr_addr, rb.entries[3].request.inst, rb.entries[3].request.mode, rb.entries[3].request.operands[0].value, rb.entries[3].request.operands[0].mode, rb.entries[3].request.inFetch[0], rb.entries[3].request.operands[1].value, rb.entries[3].request.operands[1].mode, rb.entries[3].request.inFetch[1], rb.entries[3].request.operands[2].value, rb.entries[3].request.operands[2].mode, rb.entries[3].request.inFetch[2], rb.entries[3].result.isZero, rb.entries[3].result.isNaR, rb.entries[3].result.out, rb.entries[3].result.lt, rb.entries[3].result.eq, rb.entries[3].result.gt, rb.entries[3].result.exceptions) @[POSIT_Locality.scala 238:39]
        skip @[POSIT_Locality.scala 238:39]
      node _T_577 = bits(reset, 0, 0) @[POSIT_Locality.scala 238:39]
      node _T_578 = eq(_T_577, UInt<1>("h00")) @[POSIT_Locality.scala 238:39]
      when _T_578 : @[POSIT_Locality.scala 238:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<3>("h04"), rb.entries[4].completed, rb.entries[4].valid, rb.entries[4].dispatched, rb.entries[4].written, rb.entries[4].wr_addr, rb.entries[4].request.inst, rb.entries[4].request.mode, rb.entries[4].request.operands[0].value, rb.entries[4].request.operands[0].mode, rb.entries[4].request.inFetch[0], rb.entries[4].request.operands[1].value, rb.entries[4].request.operands[1].mode, rb.entries[4].request.inFetch[1], rb.entries[4].request.operands[2].value, rb.entries[4].request.operands[2].mode, rb.entries[4].request.inFetch[2], rb.entries[4].result.isZero, rb.entries[4].result.isNaR, rb.entries[4].result.out, rb.entries[4].result.lt, rb.entries[4].result.eq, rb.entries[4].result.gt, rb.entries[4].result.exceptions) @[POSIT_Locality.scala 238:39]
        skip @[POSIT_Locality.scala 238:39]
      node _T_579 = bits(reset, 0, 0) @[POSIT_Locality.scala 238:39]
      node _T_580 = eq(_T_579, UInt<1>("h00")) @[POSIT_Locality.scala 238:39]
      when _T_580 : @[POSIT_Locality.scala 238:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<3>("h05"), rb.entries[5].completed, rb.entries[5].valid, rb.entries[5].dispatched, rb.entries[5].written, rb.entries[5].wr_addr, rb.entries[5].request.inst, rb.entries[5].request.mode, rb.entries[5].request.operands[0].value, rb.entries[5].request.operands[0].mode, rb.entries[5].request.inFetch[0], rb.entries[5].request.operands[1].value, rb.entries[5].request.operands[1].mode, rb.entries[5].request.inFetch[1], rb.entries[5].request.operands[2].value, rb.entries[5].request.operands[2].mode, rb.entries[5].request.inFetch[2], rb.entries[5].result.isZero, rb.entries[5].result.isNaR, rb.entries[5].result.out, rb.entries[5].result.lt, rb.entries[5].result.eq, rb.entries[5].result.gt, rb.entries[5].result.exceptions) @[POSIT_Locality.scala 238:39]
        skip @[POSIT_Locality.scala 238:39]
      node _T_581 = bits(reset, 0, 0) @[POSIT_Locality.scala 238:39]
      node _T_582 = eq(_T_581, UInt<1>("h00")) @[POSIT_Locality.scala 238:39]
      when _T_582 : @[POSIT_Locality.scala 238:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<3>("h06"), rb.entries[6].completed, rb.entries[6].valid, rb.entries[6].dispatched, rb.entries[6].written, rb.entries[6].wr_addr, rb.entries[6].request.inst, rb.entries[6].request.mode, rb.entries[6].request.operands[0].value, rb.entries[6].request.operands[0].mode, rb.entries[6].request.inFetch[0], rb.entries[6].request.operands[1].value, rb.entries[6].request.operands[1].mode, rb.entries[6].request.inFetch[1], rb.entries[6].request.operands[2].value, rb.entries[6].request.operands[2].mode, rb.entries[6].request.inFetch[2], rb.entries[6].result.isZero, rb.entries[6].result.isNaR, rb.entries[6].result.out, rb.entries[6].result.lt, rb.entries[6].result.eq, rb.entries[6].result.gt, rb.entries[6].result.exceptions) @[POSIT_Locality.scala 238:39]
        skip @[POSIT_Locality.scala 238:39]
      node _T_583 = bits(reset, 0, 0) @[POSIT_Locality.scala 238:39]
      node _T_584 = eq(_T_583, UInt<1>("h00")) @[POSIT_Locality.scala 238:39]
      when _T_584 : @[POSIT_Locality.scala 238:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<3>("h07"), rb.entries[7].completed, rb.entries[7].valid, rb.entries[7].dispatched, rb.entries[7].written, rb.entries[7].wr_addr, rb.entries[7].request.inst, rb.entries[7].request.mode, rb.entries[7].request.operands[0].value, rb.entries[7].request.operands[0].mode, rb.entries[7].request.inFetch[0], rb.entries[7].request.operands[1].value, rb.entries[7].request.operands[1].mode, rb.entries[7].request.inFetch[1], rb.entries[7].request.operands[2].value, rb.entries[7].request.operands[2].mode, rb.entries[7].request.inFetch[2], rb.entries[7].result.isZero, rb.entries[7].result.isNaR, rb.entries[7].result.out, rb.entries[7].result.lt, rb.entries[7].result.eq, rb.entries[7].result.gt, rb.entries[7].result.exceptions) @[POSIT_Locality.scala 238:39]
        skip @[POSIT_Locality.scala 238:39]
      node _T_585 = bits(reset, 0, 0) @[POSIT_Locality.scala 244:31]
      node _T_586 = eq(_T_585, UInt<1>("h00")) @[POSIT_Locality.scala 244:31]
      when _T_586 : @[POSIT_Locality.scala 244:31]
        printf(clock, UInt<1>(1), "pe: \n") @[POSIT_Locality.scala 244:31]
        skip @[POSIT_Locality.scala 244:31]
      node _T_587 = bits(reset, 0, 0) @[POSIT_Locality.scala 248:31]
      node _T_588 = eq(_T_587, UInt<1>("h00")) @[POSIT_Locality.scala 248:31]
      when _T_588 : @[POSIT_Locality.scala 248:31]
        printf(clock, UInt<1>(1), "request: valid | ready | num 1 | num2 | num3 | inst | mode\n") @[POSIT_Locality.scala 248:31]
        skip @[POSIT_Locality.scala 248:31]
      node _T_589 = bits(reset, 0, 0) @[POSIT_Locality.scala 249:31]
      node _T_590 = eq(_T_589, UInt<1>("h00")) @[POSIT_Locality.scala 249:31]
      when _T_590 : @[POSIT_Locality.scala 249:31]
        printf(clock, UInt<1>(1), "\t %b | %b | %b | %b | %b | %x | %x\n", pe.io.request.valid, pe.io.request.ready, pe.io.request.bits.num1, pe.io.request.bits.num2, pe.io.request.bits.num3, pe.io.request.bits.inst, pe.io.request.bits.mode) @[POSIT_Locality.scala 249:31]
        skip @[POSIT_Locality.scala 249:31]
      node _T_591 = bits(reset, 0, 0) @[POSIT_Locality.scala 250:31]
      node _T_592 = eq(_T_591, UInt<1>("h00")) @[POSIT_Locality.scala 250:31]
      when _T_592 : @[POSIT_Locality.scala 250:31]
        printf(clock, UInt<1>(1), "result: valid | ready | isZero | isNar | out | lt | eq | gt | exceptions\n") @[POSIT_Locality.scala 250:31]
        skip @[POSIT_Locality.scala 250:31]
      node _T_593 = bits(reset, 0, 0) @[POSIT_Locality.scala 252:31]
      node _T_594 = eq(_T_593, UInt<1>("h00")) @[POSIT_Locality.scala 252:31]
      when _T_594 : @[POSIT_Locality.scala 252:31]
        printf(clock, UInt<1>(1), "\t %b | %b | %b | %b | %x | %b | %b | %b | %x\n", pe.io.result.valid, pe.io.result.ready, pe.io.result.bits.isZero, pe.io.result.bits.isNaR, pe.io.result.bits.out, pe.io.result.bits.lt, pe.io.result.bits.eq, pe.io.result.bits.gt, pe.io.result.bits.exceptions) @[POSIT_Locality.scala 252:31]
        skip @[POSIT_Locality.scala 252:31]
      skip @[POSIT_Locality.scala 203:83]
    
