;buildInfoPackage: chisel3, version: 3.2.8, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit POSIT_Locality : 
  module PositAddCore : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip sub : UInt<1>, flip input_valid : UInt<1>, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, output_valid : UInt<1>}
    
    wire result : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[PositAdd.scala 22:20]
    node _T = gt(io.num1.exponent, io.num2.exponent) @[PositAdd.scala 25:20]
    node _T_1 = eq(io.num1.exponent, io.num2.exponent) @[PositAdd.scala 26:21]
    node _T_2 = gt(io.num1.fraction, io.num2.fraction) @[PositAdd.scala 27:22]
    node _T_3 = and(_T_1, _T_2) @[PositAdd.scala 26:39]
    node num1magGt = or(_T, _T_3) @[PositAdd.scala 25:37]
    node num2AdjSign = xor(io.num2.sign, io.sub) @[PositAdd.scala 28:31]
    node largeSign = mux(num1magGt, io.num1.sign, num2AdjSign) @[PositAdd.scala 30:22]
    node largeExp = mux(num1magGt, io.num1.exponent, io.num2.exponent) @[PositAdd.scala 31:22]
    node _T_4 = mux(num1magGt, io.num1.fraction, io.num2.fraction) @[PositAdd.scala 33:12]
    node largeFrac = cat(_T_4, UInt<3>("h00")) @[Cat.scala 30:58]
    node smallSign = mux(num1magGt, num2AdjSign, io.num1.sign) @[PositAdd.scala 35:22]
    node smallExp = mux(num1magGt, io.num2.exponent, io.num1.exponent) @[PositAdd.scala 36:22]
    node _T_5 = mux(num1magGt, io.num2.fraction, io.num1.fraction) @[PositAdd.scala 38:12]
    node smallFrac = cat(_T_5, UInt<3>("h00")) @[Cat.scala 30:58]
    node _T_6 = sub(largeExp, smallExp) @[PositAdd.scala 40:27]
    node _T_7 = tail(_T_6, 1) @[PositAdd.scala 40:27]
    node _T_8 = asSInt(_T_7) @[PositAdd.scala 40:27]
    node expDiff = asUInt(_T_8) @[PositAdd.scala 40:45]
    node _T_9 = lt(expDiff, UInt<5>("h01f")) @[PositAdd.scala 42:17]
    node _T_10 = dshr(smallFrac, expDiff) @[PositAdd.scala 42:59]
    node shiftedSmallFrac = mux(_T_9, _T_10, UInt<1>("h00")) @[PositAdd.scala 42:8]
    node _T_11 = gt(expDiff, UInt<2>("h03")) @[PositAdd.scala 44:17]
    node _T_12 = sub(expDiff, UInt<2>("h03")) @[PositAdd.scala 45:36]
    node _T_13 = tail(_T_12, 1) @[PositAdd.scala 45:36]
    node _T_14 = dshl(UInt<1>("h01"), _T_13) @[PositAdd.scala 45:24]
    node _T_15 = sub(_T_14, UInt<1>("h01")) @[PositAdd.scala 45:100]
    node _T_16 = tail(_T_15, 1) @[PositAdd.scala 45:100]
    node _T_17 = and(smallFrac, _T_16) @[PositAdd.scala 45:16]
    node _T_18 = neq(_T_17, UInt<1>("h00")) @[PositAdd.scala 45:111]
    node smallFracStickyBit = mux(_T_11, _T_18, UInt<1>("h00")) @[PositAdd.scala 44:8]
    node _T_19 = xor(largeSign, smallSign) @[PositAdd.scala 48:32]
    node isAddition = eq(_T_19, UInt<1>("h00")) @[PositAdd.scala 48:20]
    reg isAddition_n : UInt<1>, clock @[PositAdd.scala 50:29]
    isAddition_n <= isAddition @[PositAdd.scala 50:29]
    reg shiftedSmallFrac_n : UInt, clock @[PositAdd.scala 51:35]
    shiftedSmallFrac_n <= shiftedSmallFrac @[PositAdd.scala 51:35]
    reg largeFrac_n : UInt, clock @[PositAdd.scala 52:28]
    largeFrac_n <= largeFrac @[PositAdd.scala 52:28]
    reg largeExp_n : SInt, clock @[PositAdd.scala 53:27]
    largeExp_n <= largeExp @[PositAdd.scala 53:27]
    reg valid_n : UInt<1>, clock @[PositAdd.scala 54:24]
    valid_n <= io.input_valid @[PositAdd.scala 54:24]
    node _T_20 = not(shiftedSmallFrac_n) @[PositAdd.scala 57:43]
    node _T_21 = add(_T_20, UInt<1>("h01")) @[PositAdd.scala 57:63]
    node _T_22 = tail(_T_21, 1) @[PositAdd.scala 57:63]
    node signedSmallerFrac = mux(isAddition_n, shiftedSmallFrac_n, _T_22) @[PositAdd.scala 57:8]
    node _T_23 = add(largeFrac_n, signedSmallerFrac) @[PositAdd.scala 59:56]
    wire adderFrac : UInt<32>
    adderFrac <= _T_23
    node _T_24 = bits(adderFrac, 31, 31) @[PositAdd.scala 61:45]
    node sumOverflow = and(isAddition_n, _T_24) @[PositAdd.scala 61:34]
    node _T_25 = asSInt(sumOverflow) @[PositAdd.scala 63:52]
    node _T_26 = sub(largeExp_n, _T_25) @[PositAdd.scala 63:32]
    node _T_27 = tail(_T_26, 1) @[PositAdd.scala 63:32]
    node adjAdderExp = asSInt(_T_27) @[PositAdd.scala 63:32]
    node _T_28 = bits(adderFrac, 31, 1) @[PositAdd.scala 65:31]
    node _T_29 = bits(adderFrac, 30, 0) @[PositAdd.scala 65:71]
    node adjAdderFrac = mux(sumOverflow, _T_28, _T_29) @[PositAdd.scala 65:8]
    node _T_30 = bits(adderFrac, 0, 0) @[PositAdd.scala 66:45]
    node sumStickyBit = and(sumOverflow, _T_30) @[PositAdd.scala 66:34]
    node _T_31 = bits(adjAdderFrac, 0, 0) @[common.scala 19:50]
    node _T_32 = bits(adjAdderFrac, 1, 1) @[common.scala 19:50]
    node _T_33 = bits(adjAdderFrac, 2, 2) @[common.scala 19:50]
    node _T_34 = bits(adjAdderFrac, 3, 3) @[common.scala 19:50]
    node _T_35 = bits(adjAdderFrac, 4, 4) @[common.scala 19:50]
    node _T_36 = bits(adjAdderFrac, 5, 5) @[common.scala 19:50]
    node _T_37 = bits(adjAdderFrac, 6, 6) @[common.scala 19:50]
    node _T_38 = bits(adjAdderFrac, 7, 7) @[common.scala 19:50]
    node _T_39 = bits(adjAdderFrac, 8, 8) @[common.scala 19:50]
    node _T_40 = bits(adjAdderFrac, 9, 9) @[common.scala 19:50]
    node _T_41 = bits(adjAdderFrac, 10, 10) @[common.scala 19:50]
    node _T_42 = bits(adjAdderFrac, 11, 11) @[common.scala 19:50]
    node _T_43 = bits(adjAdderFrac, 12, 12) @[common.scala 19:50]
    node _T_44 = bits(adjAdderFrac, 13, 13) @[common.scala 19:50]
    node _T_45 = bits(adjAdderFrac, 14, 14) @[common.scala 19:50]
    node _T_46 = bits(adjAdderFrac, 15, 15) @[common.scala 19:50]
    node _T_47 = bits(adjAdderFrac, 16, 16) @[common.scala 19:50]
    node _T_48 = bits(adjAdderFrac, 17, 17) @[common.scala 19:50]
    node _T_49 = bits(adjAdderFrac, 18, 18) @[common.scala 19:50]
    node _T_50 = bits(adjAdderFrac, 19, 19) @[common.scala 19:50]
    node _T_51 = bits(adjAdderFrac, 20, 20) @[common.scala 19:50]
    node _T_52 = bits(adjAdderFrac, 21, 21) @[common.scala 19:50]
    node _T_53 = bits(adjAdderFrac, 22, 22) @[common.scala 19:50]
    node _T_54 = bits(adjAdderFrac, 23, 23) @[common.scala 19:50]
    node _T_55 = bits(adjAdderFrac, 24, 24) @[common.scala 19:50]
    node _T_56 = bits(adjAdderFrac, 25, 25) @[common.scala 19:50]
    node _T_57 = bits(adjAdderFrac, 26, 26) @[common.scala 19:50]
    node _T_58 = bits(adjAdderFrac, 27, 27) @[common.scala 19:50]
    node _T_59 = bits(adjAdderFrac, 28, 28) @[common.scala 19:50]
    node _T_60 = bits(adjAdderFrac, 29, 29) @[common.scala 19:50]
    node _T_61 = bits(adjAdderFrac, 30, 30) @[common.scala 19:50]
    node _T_62 = mux(_T_32, UInt<5>("h01d"), UInt<5>("h01e")) @[Mux.scala 47:69]
    node _T_63 = mux(_T_33, UInt<5>("h01c"), _T_62) @[Mux.scala 47:69]
    node _T_64 = mux(_T_34, UInt<5>("h01b"), _T_63) @[Mux.scala 47:69]
    node _T_65 = mux(_T_35, UInt<5>("h01a"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_36, UInt<5>("h019"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_37, UInt<5>("h018"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_38, UInt<5>("h017"), _T_67) @[Mux.scala 47:69]
    node _T_69 = mux(_T_39, UInt<5>("h016"), _T_68) @[Mux.scala 47:69]
    node _T_70 = mux(_T_40, UInt<5>("h015"), _T_69) @[Mux.scala 47:69]
    node _T_71 = mux(_T_41, UInt<5>("h014"), _T_70) @[Mux.scala 47:69]
    node _T_72 = mux(_T_42, UInt<5>("h013"), _T_71) @[Mux.scala 47:69]
    node _T_73 = mux(_T_43, UInt<5>("h012"), _T_72) @[Mux.scala 47:69]
    node _T_74 = mux(_T_44, UInt<5>("h011"), _T_73) @[Mux.scala 47:69]
    node _T_75 = mux(_T_45, UInt<5>("h010"), _T_74) @[Mux.scala 47:69]
    node _T_76 = mux(_T_46, UInt<4>("h0f"), _T_75) @[Mux.scala 47:69]
    node _T_77 = mux(_T_47, UInt<4>("h0e"), _T_76) @[Mux.scala 47:69]
    node _T_78 = mux(_T_48, UInt<4>("h0d"), _T_77) @[Mux.scala 47:69]
    node _T_79 = mux(_T_49, UInt<4>("h0c"), _T_78) @[Mux.scala 47:69]
    node _T_80 = mux(_T_50, UInt<4>("h0b"), _T_79) @[Mux.scala 47:69]
    node _T_81 = mux(_T_51, UInt<4>("h0a"), _T_80) @[Mux.scala 47:69]
    node _T_82 = mux(_T_52, UInt<4>("h09"), _T_81) @[Mux.scala 47:69]
    node _T_83 = mux(_T_53, UInt<4>("h08"), _T_82) @[Mux.scala 47:69]
    node _T_84 = mux(_T_54, UInt<3>("h07"), _T_83) @[Mux.scala 47:69]
    node _T_85 = mux(_T_55, UInt<3>("h06"), _T_84) @[Mux.scala 47:69]
    node _T_86 = mux(_T_56, UInt<3>("h05"), _T_85) @[Mux.scala 47:69]
    node _T_87 = mux(_T_57, UInt<3>("h04"), _T_86) @[Mux.scala 47:69]
    node _T_88 = mux(_T_58, UInt<2>("h03"), _T_87) @[Mux.scala 47:69]
    node _T_89 = mux(_T_59, UInt<2>("h02"), _T_88) @[Mux.scala 47:69]
    node _T_90 = mux(_T_60, UInt<1>("h01"), _T_89) @[Mux.scala 47:69]
    node normalizationFactor = mux(_T_61, UInt<1>("h00"), _T_90) @[Mux.scala 47:69]
    node _T_91 = asSInt(normalizationFactor) @[PositAdd.scala 70:62]
    node _T_92 = sub(adjAdderExp, _T_91) @[PositAdd.scala 70:34]
    node _T_93 = tail(_T_92, 1) @[PositAdd.scala 70:34]
    node normExponent = asSInt(_T_93) @[PositAdd.scala 70:34]
    node normFraction = dshl(adjAdderFrac, normalizationFactor) @[PositAdd.scala 71:35]
    node _T_94 = or(io.num1.isNaR, io.num2.isNaR) @[PositAdd.scala 73:33]
    result.isNaR <= _T_94 @[PositAdd.scala 73:19]
    node _T_95 = and(io.num1.isZero, io.num2.isZero) @[PositAdd.scala 74:35]
    node _T_96 = eq(adderFrac, UInt<1>("h00")) @[PositAdd.scala 74:64]
    node _T_97 = or(_T_95, _T_96) @[PositAdd.scala 74:51]
    result.isZero <= _T_97 @[PositAdd.scala 74:19]
    result.sign <= largeSign @[PositAdd.scala 75:19]
    result.exponent <= normExponent @[PositAdd.scala 76:19]
    node _T_98 = bits(normFraction, 30, 3) @[PositAdd.scala 77:34]
    result.fraction <= _T_98 @[PositAdd.scala 77:19]
    node _T_99 = bits(normFraction, 2, 1) @[PositAdd.scala 79:34]
    io.trailingBits <= _T_99 @[PositAdd.scala 79:19]
    node _T_100 = bits(normFraction, 0, 0) @[PositAdd.scala 80:49]
    node _T_101 = neq(_T_100, UInt<1>("h00")) @[PositAdd.scala 80:76]
    node _T_102 = or(sumStickyBit, _T_101) @[PositAdd.scala 80:35]
    io.stickyBit <= _T_102 @[PositAdd.scala 80:19]
    io.out.isNaR <= result.isNaR @[PositAdd.scala 82:10]
    io.out.isZero <= result.isZero @[PositAdd.scala 82:10]
    io.out.fraction <= result.fraction @[PositAdd.scala 82:10]
    io.out.exponent <= result.exponent @[PositAdd.scala 82:10]
    io.out.sign <= result.sign @[PositAdd.scala 82:10]
    io.output_valid <= valid_n @[PositAdd.scala 83:19]
    
  module PositCompare : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : SInt<32>, flip num2 : SInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, flip validIn : UInt<1>, validOut : UInt<1>}
    
    io.validOut <= io.validIn @[PositCompare.scala 15:15]
    node _T = lt(io.num1, io.num2) @[PositCompare.scala 16:21]
    io.lt <= _T @[PositCompare.scala 16:9]
    node _T_1 = eq(io.num1, io.num2) @[PositCompare.scala 17:21]
    io.eq <= _T_1 @[PositCompare.scala 17:9]
    node _T_2 = eq(io.lt, UInt<1>("h00")) @[PositCompare.scala 18:13]
    node _T_3 = eq(io.eq, UInt<1>("h00")) @[PositCompare.scala 18:23]
    node _T_4 = and(_T_2, _T_3) @[PositCompare.scala 18:20]
    io.gt <= _T_4 @[PositCompare.scala 18:9]
    
  module PositFMACore : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num3 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip sub : UInt<1>, flip negate : UInt<1>, flip input_valid : UInt<1>, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, output_valid : UInt<1>}
    
    node productExponent = add(io.num1.exponent, io.num2.exponent) @[PositFMA.scala 25:39]
    node _T = mul(io.num1.fraction, io.num2.fraction) @[PositFMA.scala 27:63]
    wire productFraction : UInt<56>
    productFraction <= _T
    node prodOverflow = bits(productFraction, 55, 55) @[PositFMA.scala 29:44]
    node _T_1 = bits(productFraction, 55, 1) @[PositFMA.scala 31:38]
    node _T_2 = bits(productFraction, 54, 0) @[PositFMA.scala 31:89]
    node normProductFraction = mux(prodOverflow, _T_1, _T_2) @[PositFMA.scala 31:8]
    node _T_3 = cat(UInt<1>("h00"), prodOverflow) @[Cat.scala 30:58]
    node _T_4 = asSInt(_T_3) @[PositFMA.scala 32:76]
    node _T_5 = add(productExponent, _T_4) @[PositFMA.scala 32:45]
    node _T_6 = tail(_T_5, 1) @[PositFMA.scala 32:45]
    node normProductExponent = asSInt(_T_6) @[PositFMA.scala 32:45]
    node _T_7 = bits(productFraction, 0, 0) @[PositFMA.scala 33:59]
    node prodStickyBit = and(prodOverflow, _T_7) @[PositFMA.scala 33:42]
    node _T_8 = cat(io.num3.fraction, UInt<27>("h00")) @[Cat.scala 30:58]
    node addendFraction = mux(io.num3.isZero, UInt<1>("h00"), _T_8) @[PositFMA.scala 36:27]
    node _T_9 = xor(io.num1.sign, io.num2.sign) @[PositFMA.scala 39:39]
    node _T_10 = xor(_T_9, io.negate) @[PositFMA.scala 39:51]
    reg productSign : UInt<1>, clock @[PositFMA.scala 39:28]
    productSign <= _T_10 @[PositFMA.scala 39:28]
    node _T_11 = xor(io.num3.sign, io.negate) @[PositFMA.scala 40:39]
    node _T_12 = xor(_T_11, io.sub) @[PositFMA.scala 40:51]
    reg addendSign : UInt<1>, clock @[PositFMA.scala 40:28]
    addendSign <= _T_12 @[PositFMA.scala 40:28]
    reg addendExponent_n : SInt, clock @[PositFMA.scala 41:33]
    addendExponent_n <= io.num3.exponent @[PositFMA.scala 41:33]
    reg normProductExponent_n : SInt, clock @[PositFMA.scala 42:38]
    normProductExponent_n <= normProductExponent @[PositFMA.scala 42:38]
    reg addendFraction_n : UInt, clock @[PositFMA.scala 43:33]
    addendFraction_n <= addendFraction @[PositFMA.scala 43:33]
    reg normProductFraction_n : UInt, clock @[PositFMA.scala 44:38]
    normProductFraction_n <= normProductFraction @[PositFMA.scala 44:38]
    node _T_13 = not(io.num3.isZero) @[PositFMA.scala 46:13]
    node _T_14 = gt(io.num3.exponent, normProductExponent) @[PositFMA.scala 47:24]
    node _T_15 = eq(io.num3.exponent, normProductExponent) @[PositFMA.scala 48:25]
    node _T_16 = gt(addendFraction, normProductFraction) @[PositFMA.scala 48:68]
    node _T_17 = and(_T_15, _T_16) @[PositFMA.scala 48:49]
    node _T_18 = or(_T_14, _T_17) @[PositFMA.scala 47:47]
    node _T_19 = and(_T_13, _T_18) @[PositFMA.scala 46:27]
    reg isAddendGtProduct : UInt<1>, clock @[PositFMA.scala 46:12]
    isAddendGtProduct <= _T_19 @[PositFMA.scala 46:12]
    node gExp = mux(isAddendGtProduct, addendExponent_n, normProductExponent_n) @[PositFMA.scala 50:18]
    node gFrac = mux(isAddendGtProduct, addendFraction_n, normProductFraction_n) @[PositFMA.scala 51:18]
    node gSign = mux(isAddendGtProduct, addendSign, productSign) @[PositFMA.scala 52:18]
    node lExp = mux(isAddendGtProduct, normProductExponent_n, addendExponent_n) @[PositFMA.scala 54:18]
    node lFrac = mux(isAddendGtProduct, normProductFraction_n, addendFraction_n) @[PositFMA.scala 55:18]
    node lSign = mux(isAddendGtProduct, productSign, addendSign) @[PositFMA.scala 56:18]
    node _T_20 = sub(gExp, lExp) @[PositFMA.scala 58:23]
    node _T_21 = tail(_T_20, 1) @[PositFMA.scala 58:23]
    node _T_22 = asSInt(_T_21) @[PositFMA.scala 58:23]
    node expDiff = asUInt(_T_22) @[PositFMA.scala 58:37]
    node shftInBound = lt(expDiff, UInt<6>("h037")) @[PositFMA.scala 59:29]
    node _T_23 = dshr(lFrac, expDiff) @[PositFMA.scala 61:28]
    node shiftedLFrac = mux(shftInBound, _T_23, UInt<56>("h00")) @[PositFMA.scala 61:8]
    node _T_24 = dshl(UInt<1>("h01"), expDiff) @[OneHot.scala 58:35]
    node _T_25 = sub(_T_24, UInt<1>("h01")) @[common.scala 23:44]
    node _T_26 = tail(_T_25, 1) @[common.scala 23:44]
    node lfracStickyMask = bits(_T_26, 55, 0) @[PositFMA.scala 63:26]
    node _T_27 = and(lFrac, lfracStickyMask) @[PositFMA.scala 64:31]
    node lFracStickyBit = neq(_T_27, UInt<1>("h00")) @[PositFMA.scala 64:53]
    node _T_28 = xor(gSign, lSign) @[PositFMA.scala 66:28]
    node isAddition = not(_T_28) @[PositFMA.scala 66:20]
    node _T_29 = not(shiftedLFrac) @[PositFMA.scala 68:35]
    node _T_30 = add(_T_29, UInt<1>("h01")) @[PositFMA.scala 68:49]
    node _T_31 = tail(_T_30, 1) @[PositFMA.scala 68:49]
    node signedLFrac = mux(isAddition, shiftedLFrac, _T_31) @[PositFMA.scala 68:8]
    node _T_32 = add(gFrac, signedLFrac) @[PositFMA.scala 70:55]
    wire fmaFraction : UInt<56>
    fmaFraction <= _T_32
    node _T_33 = bits(fmaFraction, 55, 55) @[PositFMA.scala 72:45]
    node fmaOverflow = and(isAddition, _T_33) @[PositFMA.scala 72:32]
    node _T_34 = bits(fmaFraction, 54, 0) @[PositFMA.scala 74:50]
    node _T_35 = cat(_T_34, UInt<1>("h00")) @[Cat.scala 30:58]
    node adjFmaFraction = mux(fmaOverflow, fmaFraction, _T_35) @[PositFMA.scala 74:8]
    node _T_36 = cat(UInt<1>("h00"), fmaOverflow) @[Cat.scala 30:58]
    node _T_37 = asSInt(_T_36) @[PositFMA.scala 75:59]
    node _T_38 = add(gExp, _T_37) @[PositFMA.scala 75:29]
    node _T_39 = tail(_T_38, 1) @[PositFMA.scala 75:29]
    node adjFmaExponent = asSInt(_T_39) @[PositFMA.scala 75:29]
    node _T_40 = bits(adjFmaFraction, 0, 0) @[common.scala 19:50]
    node _T_41 = bits(adjFmaFraction, 1, 1) @[common.scala 19:50]
    node _T_42 = bits(adjFmaFraction, 2, 2) @[common.scala 19:50]
    node _T_43 = bits(adjFmaFraction, 3, 3) @[common.scala 19:50]
    node _T_44 = bits(adjFmaFraction, 4, 4) @[common.scala 19:50]
    node _T_45 = bits(adjFmaFraction, 5, 5) @[common.scala 19:50]
    node _T_46 = bits(adjFmaFraction, 6, 6) @[common.scala 19:50]
    node _T_47 = bits(adjFmaFraction, 7, 7) @[common.scala 19:50]
    node _T_48 = bits(adjFmaFraction, 8, 8) @[common.scala 19:50]
    node _T_49 = bits(adjFmaFraction, 9, 9) @[common.scala 19:50]
    node _T_50 = bits(adjFmaFraction, 10, 10) @[common.scala 19:50]
    node _T_51 = bits(adjFmaFraction, 11, 11) @[common.scala 19:50]
    node _T_52 = bits(adjFmaFraction, 12, 12) @[common.scala 19:50]
    node _T_53 = bits(adjFmaFraction, 13, 13) @[common.scala 19:50]
    node _T_54 = bits(adjFmaFraction, 14, 14) @[common.scala 19:50]
    node _T_55 = bits(adjFmaFraction, 15, 15) @[common.scala 19:50]
    node _T_56 = bits(adjFmaFraction, 16, 16) @[common.scala 19:50]
    node _T_57 = bits(adjFmaFraction, 17, 17) @[common.scala 19:50]
    node _T_58 = bits(adjFmaFraction, 18, 18) @[common.scala 19:50]
    node _T_59 = bits(adjFmaFraction, 19, 19) @[common.scala 19:50]
    node _T_60 = bits(adjFmaFraction, 20, 20) @[common.scala 19:50]
    node _T_61 = bits(adjFmaFraction, 21, 21) @[common.scala 19:50]
    node _T_62 = bits(adjFmaFraction, 22, 22) @[common.scala 19:50]
    node _T_63 = bits(adjFmaFraction, 23, 23) @[common.scala 19:50]
    node _T_64 = bits(adjFmaFraction, 24, 24) @[common.scala 19:50]
    node _T_65 = bits(adjFmaFraction, 25, 25) @[common.scala 19:50]
    node _T_66 = bits(adjFmaFraction, 26, 26) @[common.scala 19:50]
    node _T_67 = bits(adjFmaFraction, 27, 27) @[common.scala 19:50]
    node _T_68 = bits(adjFmaFraction, 28, 28) @[common.scala 19:50]
    node _T_69 = bits(adjFmaFraction, 29, 29) @[common.scala 19:50]
    node _T_70 = bits(adjFmaFraction, 30, 30) @[common.scala 19:50]
    node _T_71 = bits(adjFmaFraction, 31, 31) @[common.scala 19:50]
    node _T_72 = bits(adjFmaFraction, 32, 32) @[common.scala 19:50]
    node _T_73 = bits(adjFmaFraction, 33, 33) @[common.scala 19:50]
    node _T_74 = bits(adjFmaFraction, 34, 34) @[common.scala 19:50]
    node _T_75 = bits(adjFmaFraction, 35, 35) @[common.scala 19:50]
    node _T_76 = bits(adjFmaFraction, 36, 36) @[common.scala 19:50]
    node _T_77 = bits(adjFmaFraction, 37, 37) @[common.scala 19:50]
    node _T_78 = bits(adjFmaFraction, 38, 38) @[common.scala 19:50]
    node _T_79 = bits(adjFmaFraction, 39, 39) @[common.scala 19:50]
    node _T_80 = bits(adjFmaFraction, 40, 40) @[common.scala 19:50]
    node _T_81 = bits(adjFmaFraction, 41, 41) @[common.scala 19:50]
    node _T_82 = bits(adjFmaFraction, 42, 42) @[common.scala 19:50]
    node _T_83 = bits(adjFmaFraction, 43, 43) @[common.scala 19:50]
    node _T_84 = bits(adjFmaFraction, 44, 44) @[common.scala 19:50]
    node _T_85 = bits(adjFmaFraction, 45, 45) @[common.scala 19:50]
    node _T_86 = bits(adjFmaFraction, 46, 46) @[common.scala 19:50]
    node _T_87 = bits(adjFmaFraction, 47, 47) @[common.scala 19:50]
    node _T_88 = bits(adjFmaFraction, 48, 48) @[common.scala 19:50]
    node _T_89 = bits(adjFmaFraction, 49, 49) @[common.scala 19:50]
    node _T_90 = bits(adjFmaFraction, 50, 50) @[common.scala 19:50]
    node _T_91 = bits(adjFmaFraction, 51, 51) @[common.scala 19:50]
    node _T_92 = bits(adjFmaFraction, 52, 52) @[common.scala 19:50]
    node _T_93 = bits(adjFmaFraction, 53, 53) @[common.scala 19:50]
    node _T_94 = bits(adjFmaFraction, 54, 54) @[common.scala 19:50]
    node _T_95 = bits(adjFmaFraction, 55, 55) @[common.scala 19:50]
    node _T_96 = mux(_T_41, UInt<6>("h036"), UInt<6>("h037")) @[Mux.scala 47:69]
    node _T_97 = mux(_T_42, UInt<6>("h035"), _T_96) @[Mux.scala 47:69]
    node _T_98 = mux(_T_43, UInt<6>("h034"), _T_97) @[Mux.scala 47:69]
    node _T_99 = mux(_T_44, UInt<6>("h033"), _T_98) @[Mux.scala 47:69]
    node _T_100 = mux(_T_45, UInt<6>("h032"), _T_99) @[Mux.scala 47:69]
    node _T_101 = mux(_T_46, UInt<6>("h031"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_47, UInt<6>("h030"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_48, UInt<6>("h02f"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_49, UInt<6>("h02e"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_50, UInt<6>("h02d"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_51, UInt<6>("h02c"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_52, UInt<6>("h02b"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_53, UInt<6>("h02a"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_54, UInt<6>("h029"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_55, UInt<6>("h028"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_56, UInt<6>("h027"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_57, UInt<6>("h026"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_58, UInt<6>("h025"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_59, UInt<6>("h024"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_60, UInt<6>("h023"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_61, UInt<6>("h022"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_62, UInt<6>("h021"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_63, UInt<6>("h020"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_64, UInt<5>("h01f"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_65, UInt<5>("h01e"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_66, UInt<5>("h01d"), _T_120) @[Mux.scala 47:69]
    node _T_122 = mux(_T_67, UInt<5>("h01c"), _T_121) @[Mux.scala 47:69]
    node _T_123 = mux(_T_68, UInt<5>("h01b"), _T_122) @[Mux.scala 47:69]
    node _T_124 = mux(_T_69, UInt<5>("h01a"), _T_123) @[Mux.scala 47:69]
    node _T_125 = mux(_T_70, UInt<5>("h019"), _T_124) @[Mux.scala 47:69]
    node _T_126 = mux(_T_71, UInt<5>("h018"), _T_125) @[Mux.scala 47:69]
    node _T_127 = mux(_T_72, UInt<5>("h017"), _T_126) @[Mux.scala 47:69]
    node _T_128 = mux(_T_73, UInt<5>("h016"), _T_127) @[Mux.scala 47:69]
    node _T_129 = mux(_T_74, UInt<5>("h015"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_75, UInt<5>("h014"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_76, UInt<5>("h013"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_77, UInt<5>("h012"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_78, UInt<5>("h011"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_79, UInt<5>("h010"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_80, UInt<4>("h0f"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_81, UInt<4>("h0e"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_82, UInt<4>("h0d"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_83, UInt<4>("h0c"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_84, UInt<4>("h0b"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_85, UInt<4>("h0a"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_86, UInt<4>("h09"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_87, UInt<4>("h08"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_88, UInt<3>("h07"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_89, UInt<3>("h06"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_90, UInt<3>("h05"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_91, UInt<3>("h04"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_92, UInt<2>("h03"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_93, UInt<2>("h02"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_94, UInt<1>("h01"), _T_148) @[Mux.scala 47:69]
    node normalizationFactor = mux(_T_95, UInt<1>("h00"), _T_149) @[Mux.scala 47:69]
    node _T_150 = asSInt(normalizationFactor) @[PositFMA.scala 78:69]
    node normFmaExponent = sub(adjFmaExponent, _T_150) @[PositFMA.scala 78:40]
    node _T_151 = dshl(adjFmaFraction, normalizationFactor) @[PositFMA.scala 79:41]
    node normFmaFraction = bits(_T_151, 55, 0) @[PositFMA.scala 79:64]
    wire result : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[PositFMA.scala 81:20]
    node _T_152 = or(io.num1.isNaR, io.num2.isNaR) @[PositFMA.scala 83:41]
    node _T_153 = or(_T_152, io.num3.isNaR) @[PositFMA.scala 83:54]
    reg result_isNaR : UInt<1>, clock @[PositFMA.scala 83:29]
    result_isNaR <= _T_153 @[PositFMA.scala 83:29]
    node _T_154 = or(io.num1.isZero, io.num2.isZero) @[PositFMA.scala 84:56]
    node _T_155 = and(_T_154, io.num3.isZero) @[PositFMA.scala 84:71]
    reg result_isZero_second_half : UInt<1>, clock @[PositFMA.scala 84:42]
    result_isZero_second_half <= _T_155 @[PositFMA.scala 84:42]
    reg intermediate_valid : UInt<1>, clock @[PositFMA.scala 85:35]
    intermediate_valid <= io.input_valid @[PositFMA.scala 85:35]
    result.isNaR <= result_isNaR @[PositFMA.scala 86:19]
    node _T_156 = eq(result.isNaR, UInt<1>("h00")) @[PositFMA.scala 87:22]
    node _T_157 = and(_T_156, result_isZero_second_half) @[PositFMA.scala 87:36]
    result.isZero <= _T_157 @[PositFMA.scala 87:19]
    result.sign <= gSign @[PositFMA.scala 88:19]
    result.exponent <= normFmaExponent @[PositFMA.scala 89:19]
    node _T_158 = bits(normFmaFraction, 55, 28) @[PositFMA.scala 90:37]
    result.fraction <= _T_158 @[PositFMA.scala 90:19]
    node _T_159 = bits(normFmaFraction, 27, 26) @[PositFMA.scala 92:37]
    io.trailingBits <= _T_159 @[PositFMA.scala 92:19]
    node _T_160 = or(prodStickyBit, lFracStickyBit) @[PositFMA.scala 93:36]
    node _T_161 = bits(normFmaFraction, 25, 0) @[PositFMA.scala 93:70]
    node _T_162 = neq(_T_161, UInt<1>("h00")) @[PositFMA.scala 93:130]
    node _T_163 = or(_T_160, _T_162) @[PositFMA.scala 93:53]
    io.stickyBit <= _T_163 @[PositFMA.scala 93:19]
    io.out.isNaR <= result.isNaR @[PositFMA.scala 95:10]
    io.out.isZero <= result.isZero @[PositFMA.scala 95:10]
    io.out.fraction <= result.fraction @[PositFMA.scala 95:10]
    io.out.exponent <= result.exponent @[PositFMA.scala 95:10]
    io.out.sign <= result.sign @[PositFMA.scala 95:10]
    io.output_valid <= intermediate_valid @[PositFMA.scala 96:19]
    
  module PositDivSqrtCore : 
    input clock : Clock
    input reset : Reset
    output io : {flip validIn : UInt<1>, readyIn : UInt<1>, flip sqrtOp : UInt<1>, flip num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, validOut_div : UInt<1>, validOut_sqrt : UInt<1>, exceptions : UInt<5>, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    reg cycleCount : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[PositDivSqrt.scala 27:27]
    reg sqrtOp_stored : UInt<1>, clock @[PositDivSqrt.scala 29:26]
    reg isNaR_out : UInt<1>, clock @[PositDivSqrt.scala 30:26]
    reg isZero_out : UInt<1>, clock @[PositDivSqrt.scala 31:26]
    reg exec_out : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[PositDivSqrt.scala 32:30]
    reg sign_out : UInt<1>, clock @[PositDivSqrt.scala 33:26]
    reg divSqrtExp : SInt<9>, clock with : (reset => (reset, asSInt(UInt<9>("h00")))) @[PositDivSqrt.scala 34:30]
    reg divSqrtFrac : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[PositDivSqrt.scala 35:30]
    wire frac_out : UInt<32>
    frac_out <= UInt<32>("h00")
    wire exp_out : SInt<9>
    exp_out <= asSInt(UInt<9>("h00"))
    wire _T : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[PositDivSqrt.scala 39:38]
    _T.isNaR <= UInt<1>("h00") @[PositDivSqrt.scala 39:38]
    _T.isZero <= UInt<1>("h00") @[PositDivSqrt.scala 39:38]
    _T.fraction <= UInt<28>("h00") @[PositDivSqrt.scala 39:38]
    node _T_1 = asSInt(UInt<9>("h00")) @[PositDivSqrt.scala 39:38]
    _T.exponent <= _T_1 @[PositDivSqrt.scala 39:38]
    _T.sign <= UInt<1>("h00") @[PositDivSqrt.scala 39:38]
    wire result : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}
    result.isNaR <= _T.isNaR
    result.isZero <= _T.isZero
    result.fraction <= _T.fraction
    result.exponent <= _T.exponent
    result.sign <= _T.sign
    reg remLo : UInt<29>, clock with : (reset => (reset, UInt<29>("h00"))) @[PositDivSqrt.scala 40:24]
    reg remHi : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[PositDivSqrt.scala 41:24]
    reg divisor : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[PositDivSqrt.scala 42:24]
    node _T_2 = eq(io.sqrtOp, UInt<1>("h00")) @[PositDivSqrt.scala 44:21]
    node divZ = and(_T_2, io.num2.isZero) @[PositDivSqrt.scala 44:32]
    node _T_3 = or(io.num1.sign, io.num1.isNaR) @[PositDivSqrt.scala 45:46]
    node _T_4 = or(io.num1.isNaR, io.num2.isNaR) @[PositDivSqrt.scala 45:71]
    node _T_5 = or(_T_4, divZ) @[PositDivSqrt.scala 45:84]
    node isNaR = mux(io.sqrtOp, _T_3, _T_5) @[PositDivSqrt.scala 45:24]
    node specialCase = or(isNaR, io.num1.isZero) @[PositDivSqrt.scala 47:27]
    node _T_6 = sub(io.num1.exponent, io.num2.exponent) @[PositDivSqrt.scala 48:35]
    node _T_7 = tail(_T_6, 1) @[PositDivSqrt.scala 48:35]
    node expDiff = asSInt(_T_7) @[PositDivSqrt.scala 48:35]
    node idle = eq(cycleCount, UInt<1>("h00")) @[PositDivSqrt.scala 50:28]
    node readyIn = leq(cycleCount, UInt<1>("h01")) @[PositDivSqrt.scala 51:28]
    node starting = and(readyIn, io.validIn) @[PositDivSqrt.scala 53:34]
    node _T_8 = eq(specialCase, UInt<1>("h00")) @[PositDivSqrt.scala 54:38]
    node started_normally = and(starting, _T_8) @[PositDivSqrt.scala 54:35]
    node _T_9 = bits(io.num1.exponent, 0, 0) @[PositDivSqrt.scala 56:48]
    node _T_10 = bits(_T_9, 0, 0) @[PositDivSqrt.scala 56:58]
    node _T_11 = and(io.sqrtOp, _T_10) @[PositDivSqrt.scala 56:32]
    node _T_12 = shl(io.num1.fraction, 1) @[PositDivSqrt.scala 56:76]
    node radicand = mux(_T_11, _T_12, io.num1.fraction) @[PositDivSqrt.scala 56:21]
    node _T_13 = eq(idle, UInt<1>("h00")) @[PositDivSqrt.scala 58:8]
    node _T_14 = or(_T_13, io.validIn) @[PositDivSqrt.scala 58:14]
    when _T_14 : @[PositDivSqrt.scala 58:28]
      node _T_15 = and(starting, specialCase) @[PositDivSqrt.scala 59:32]
      node _T_16 = mux(_T_15, UInt<2>("h02"), UInt<1>("h00")) @[PositDivSqrt.scala 59:22]
      node _T_17 = mux(started_normally, UInt<6>("h020"), UInt<1>("h00")) @[PositDivSqrt.scala 60:22]
      node _T_18 = or(_T_16, _T_17) @[PositDivSqrt.scala 59:58]
      node _T_19 = eq(idle, UInt<1>("h00")) @[PositDivSqrt.scala 61:23]
      node _T_20 = sub(cycleCount, UInt<1>("h01")) @[PositDivSqrt.scala 61:41]
      node _T_21 = tail(_T_20, 1) @[PositDivSqrt.scala 61:41]
      node _T_22 = mux(_T_19, _T_21, UInt<1>("h00")) @[PositDivSqrt.scala 61:22]
      node _T_23 = or(_T_18, _T_22) @[PositDivSqrt.scala 60:72]
      cycleCount <= _T_23 @[PositDivSqrt.scala 59:16]
      skip @[PositDivSqrt.scala 58:28]
    io.readyIn <= readyIn @[PositDivSqrt.scala 64:14]
    when starting : @[PositDivSqrt.scala 66:18]
      sqrtOp_stored <= io.sqrtOp @[PositDivSqrt.scala 67:20]
      isNaR_out <= isNaR @[PositDivSqrt.scala 68:20]
      isZero_out <= io.num1.isZero @[PositDivSqrt.scala 69:20]
      node _T_24 = mux(divZ, UInt<4>("h08"), UInt<1>("h00")) @[PositDivSqrt.scala 70:26]
      exec_out <= _T_24 @[PositDivSqrt.scala 70:20]
      skip @[PositDivSqrt.scala 66:18]
    when started_normally : @[PositDivSqrt.scala 73:26]
      node _T_25 = xor(io.num1.sign, io.num2.sign) @[PositDivSqrt.scala 74:53]
      node _T_26 = mux(io.sqrtOp, UInt<1>("h00"), _T_25) @[PositDivSqrt.scala 74:22]
      sign_out <= _T_26 @[PositDivSqrt.scala 74:16]
      node _T_27 = shr(io.num1.exponent, 1) @[PositDivSqrt.scala 75:48]
      node _T_28 = mux(io.sqrtOp, _T_27, expDiff) @[PositDivSqrt.scala 75:22]
      divSqrtExp <= _T_28 @[PositDivSqrt.scala 75:16]
      skip @[PositDivSqrt.scala 73:26]
    node _T_29 = not(io.sqrtOp) @[PositDivSqrt.scala 78:27]
    node _T_30 = and(started_normally, _T_29) @[PositDivSqrt.scala 78:25]
    when _T_30 : @[PositDivSqrt.scala 78:39]
      divisor <= io.num2.fraction @[PositDivSqrt.scala 79:13]
      skip @[PositDivSqrt.scala 78:39]
    node _T_31 = and(readyIn, io.sqrtOp) @[PositDivSqrt.scala 82:24]
    node _T_32 = shl(radicand, 2) @[PositDivSqrt.scala 82:47]
    node _T_33 = mux(_T_31, _T_32, UInt<1>("h00")) @[PositDivSqrt.scala 82:15]
    node _T_34 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 83:16]
    node _T_35 = and(_T_34, sqrtOp_stored) @[PositDivSqrt.scala 83:25]
    node _T_36 = shl(remLo, 2) @[PositDivSqrt.scala 83:49]
    node _T_37 = mux(_T_35, _T_36, UInt<1>("h00")) @[PositDivSqrt.scala 83:15]
    node _T_38 = or(_T_33, _T_37) @[PositDivSqrt.scala 82:58]
    remLo <= _T_38 @[PositDivSqrt.scala 82:9]
    node _T_39 = and(readyIn, io.sqrtOp) @[PositDivSqrt.scala 85:25]
    node _T_40 = bits(radicand, 28, 27) @[PositDivSqrt.scala 85:47]
    node _T_41 = mux(_T_39, _T_40, UInt<1>("h00")) @[PositDivSqrt.scala 85:16]
    node _T_42 = eq(io.sqrtOp, UInt<1>("h00")) @[PositDivSqrt.scala 86:20]
    node _T_43 = and(readyIn, _T_42) @[PositDivSqrt.scala 86:17]
    node _T_44 = mux(_T_43, radicand, UInt<1>("h00")) @[PositDivSqrt.scala 86:8]
    node _T_45 = or(_T_41, _T_44) @[PositDivSqrt.scala 85:118]
    node _T_46 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 87:9]
    node _T_47 = and(_T_46, sqrtOp_stored) @[PositDivSqrt.scala 87:18]
    node _T_48 = dshl(remHi, UInt<2>("h02")) @[PositDivSqrt.scala 87:42]
    node _T_49 = dshr(remLo, UInt<5>("h01b")) @[PositDivSqrt.scala 87:57]
    node _T_50 = or(_T_48, _T_49) @[PositDivSqrt.scala 87:49]
    node _T_51 = mux(_T_47, _T_50, UInt<1>("h00")) @[PositDivSqrt.scala 87:8]
    node _T_52 = or(_T_45, _T_51) @[PositDivSqrt.scala 86:56]
    node _T_53 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 88:9]
    node _T_54 = eq(sqrtOp_stored, UInt<1>("h00")) @[PositDivSqrt.scala 88:21]
    node _T_55 = and(_T_53, _T_54) @[PositDivSqrt.scala 88:18]
    node _T_56 = dshl(remHi, UInt<1>("h01")) @[PositDivSqrt.scala 88:43]
    node _T_57 = mux(_T_55, _T_56, UInt<1>("h00")) @[PositDivSqrt.scala 88:8]
    node rem = or(_T_52, _T_57) @[PositDivSqrt.scala 87:84]
    node _T_58 = and(readyIn, io.sqrtOp) @[PositDivSqrt.scala 92:17]
    node _T_59 = mux(_T_58, UInt<1>("h01"), UInt<1>("h00")) @[PositDivSqrt.scala 92:8]
    node _T_60 = eq(io.sqrtOp, UInt<1>("h00")) @[PositDivSqrt.scala 93:20]
    node _T_61 = and(readyIn, _T_60) @[PositDivSqrt.scala 93:17]
    node _T_62 = mux(_T_61, io.num2.fraction, UInt<1>("h00")) @[PositDivSqrt.scala 93:8]
    node _T_63 = or(_T_59, _T_62) @[PositDivSqrt.scala 92:41]
    node _T_64 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 94:9]
    node _T_65 = and(_T_64, sqrtOp_stored) @[PositDivSqrt.scala 94:18]
    node _T_66 = dshl(divSqrtFrac, UInt<1>("h01")) @[PositDivSqrt.scala 94:52]
    node _T_67 = cat(_T_66, UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_68 = mux(_T_65, _T_67, UInt<1>("h00")) @[PositDivSqrt.scala 94:8]
    node _T_69 = or(_T_63, _T_68) @[PositDivSqrt.scala 93:52]
    node _T_70 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 95:9]
    node _T_71 = eq(sqrtOp_stored, UInt<1>("h00")) @[PositDivSqrt.scala 95:21]
    node _T_72 = and(_T_70, _T_71) @[PositDivSqrt.scala 95:18]
    node _T_73 = mux(_T_72, divisor, UInt<1>("h00")) @[PositDivSqrt.scala 95:8]
    node testDiv = or(_T_69, _T_73) @[PositDivSqrt.scala 94:71]
    node _T_74 = cvt(rem) @[PositDivSqrt.scala 97:21]
    node _T_75 = cvt(testDiv) @[PositDivSqrt.scala 97:36]
    node _T_76 = sub(_T_74, _T_75) @[PositDivSqrt.scala 97:26]
    node _T_77 = tail(_T_76, 1) @[PositDivSqrt.scala 97:26]
    node testRem = asSInt(_T_77) @[PositDivSqrt.scala 97:26]
    node nextBit = geq(testRem, asSInt(UInt<1>("h00"))) @[PositDivSqrt.scala 98:25]
    node _T_78 = gt(cycleCount, UInt<2>("h02")) @[PositDivSqrt.scala 100:39]
    node _T_79 = or(started_normally, _T_78) @[PositDivSqrt.scala 100:25]
    when _T_79 : @[PositDivSqrt.scala 100:46]
      node _T_80 = asUInt(testRem) @[PositDivSqrt.scala 101:41]
      node _T_81 = mux(nextBit, _T_80, rem) @[PositDivSqrt.scala 101:17]
      remHi <= _T_81 @[PositDivSqrt.scala 101:11]
      skip @[PositDivSqrt.scala 100:46]
    node nextFraction = cat(divSqrtFrac, nextBit) @[Cat.scala 30:58]
    node _T_82 = mux(started_normally, nextBit, UInt<1>("h00")) @[PositDivSqrt.scala 105:21]
    node _T_83 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 106:18]
    node _T_84 = mux(_T_83, nextFraction, UInt<1>("h00")) @[PositDivSqrt.scala 106:17]
    node _T_85 = or(_T_82, _T_84) @[PositDivSqrt.scala 105:54]
    divSqrtFrac <= _T_85 @[PositDivSqrt.scala 105:15]
    node _T_86 = bits(divSqrtFrac, 31, 31) @[PositDivSqrt.scala 108:29]
    node normReq = eq(_T_86, UInt<1>("h00")) @[PositDivSqrt.scala 108:17]
    node _T_87 = cat(divSqrtFrac, UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_88 = mux(normReq, _T_87, divSqrtFrac) @[PositDivSqrt.scala 109:18]
    frac_out <= _T_88 @[PositDivSqrt.scala 109:12]
    node _T_89 = asSInt(normReq) @[PositDivSqrt.scala 110:42]
    node _T_90 = add(divSqrtExp, _T_89) @[PositDivSqrt.scala 110:26]
    node _T_91 = tail(_T_90, 1) @[PositDivSqrt.scala 110:26]
    node _T_92 = asSInt(_T_91) @[PositDivSqrt.scala 110:26]
    exp_out <= _T_92 @[PositDivSqrt.scala 110:12]
    result.isNaR <= isNaR_out @[PositDivSqrt.scala 112:19]
    result.isZero <= isZero_out @[PositDivSqrt.scala 113:19]
    result.exponent <= exp_out @[PositDivSqrt.scala 114:19]
    result.sign <= sign_out @[PositDivSqrt.scala 115:19]
    node _T_93 = bits(frac_out, 31, 4) @[PositDivSqrt.scala 116:30]
    result.fraction <= _T_93 @[PositDivSqrt.scala 116:19]
    node validOut = eq(cycleCount, UInt<1>("h01")) @[PositDivSqrt.scala 118:29]
    node _T_94 = eq(sqrtOp_stored, UInt<1>("h00")) @[PositDivSqrt.scala 120:35]
    node _T_95 = and(validOut, _T_94) @[PositDivSqrt.scala 120:32]
    io.validOut_div <= _T_95 @[PositDivSqrt.scala 120:20]
    node _T_96 = and(validOut, sqrtOp_stored) @[PositDivSqrt.scala 121:32]
    io.validOut_sqrt <= _T_96 @[PositDivSqrt.scala 121:20]
    io.exceptions <= exec_out @[PositDivSqrt.scala 122:20]
    node _T_97 = bits(frac_out, 3, 2) @[PositDivSqrt.scala 124:30]
    io.trailingBits <= _T_97 @[PositDivSqrt.scala 124:19]
    node _T_98 = bits(frac_out, 1, 0) @[PositDivSqrt.scala 125:30]
    node _T_99 = neq(_T_98, UInt<1>("h00")) @[PositDivSqrt.scala 125:59]
    node _T_100 = neq(remHi, UInt<1>("h00")) @[PositDivSqrt.scala 125:73]
    node _T_101 = or(_T_99, _T_100) @[PositDivSqrt.scala 125:62]
    io.stickyBit <= _T_101 @[PositDivSqrt.scala 125:19]
    io.out.isNaR <= result.isNaR @[PositDivSqrt.scala 127:10]
    io.out.isZero <= result.isZero @[PositDivSqrt.scala 127:10]
    io.out.fraction <= result.fraction @[PositDivSqrt.scala 127:10]
    io.out.exponent <= result.exponent @[PositDivSqrt.scala 127:10]
    io.out.sign <= result.sign @[PositDivSqrt.scala 127:10]
    
  module PositMulCore : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip validIn : UInt<1>, validOut : UInt<1>}
    
    io.validOut <= io.validIn @[PositMul.scala 18:15]
    node _T = add(io.num1.exponent, io.num2.exponent) @[PositMul.scala 22:31]
    node _T_1 = tail(_T, 1) @[PositMul.scala 22:31]
    node prodExp = asSInt(_T_1) @[PositMul.scala 22:31]
    node _T_2 = mul(io.num1.fraction, io.num2.fraction) @[PositMul.scala 24:63]
    wire prodFrac : UInt<56>
    prodFrac <= _T_2
    node prodOverflow = bits(prodFrac, 55, 55) @[PositMul.scala 25:30]
    node _T_3 = not(prodOverflow) @[PositMul.scala 27:39]
    node normProductFrac = dshl(prodFrac, _T_3) @[PositMul.scala 27:35]
    node _T_4 = mux(prodOverflow, asSInt(UInt<2>("h01")), asSInt(UInt<1>("h00"))) @[PositMul.scala 28:38]
    node _T_5 = add(prodExp, _T_4) @[PositMul.scala 28:33]
    node _T_6 = tail(_T_5, 1) @[PositMul.scala 28:33]
    node normProductExp = asSInt(_T_6) @[PositMul.scala 28:33]
    wire result : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[PositMul.scala 30:20]
    node _T_7 = or(io.num1.isNaR, io.num2.isNaR) @[PositMul.scala 31:34]
    result.isNaR <= _T_7 @[PositMul.scala 31:19]
    node _T_8 = or(io.num1.isZero, io.num2.isZero) @[PositMul.scala 32:34]
    result.isZero <= _T_8 @[PositMul.scala 32:19]
    node _T_9 = xor(io.num1.sign, io.num2.sign) @[PositMul.scala 33:32]
    result.sign <= _T_9 @[PositMul.scala 33:19]
    result.exponent <= normProductExp @[PositMul.scala 34:19]
    node _T_10 = bits(normProductFrac, 55, 28) @[PositMul.scala 35:37]
    result.fraction <= _T_10 @[PositMul.scala 35:19]
    node _T_11 = bits(normProductFrac, 27, 26) @[PositMul.scala 37:37]
    io.trailingBits <= _T_11 @[PositMul.scala 37:19]
    node _T_12 = bits(normProductFrac, 25, 0) @[PositMul.scala 38:37]
    node _T_13 = neq(_T_12, UInt<1>("h00")) @[PositMul.scala 38:97]
    io.stickyBit <= _T_13 @[PositMul.scala 38:19]
    io.out.isNaR <= result.isNaR @[PositMul.scala 40:10]
    io.out.isZero <= result.isZero @[PositMul.scala 40:10]
    io.out.fraction <= result.fraction @[PositMul.scala 40:10]
    io.out.exponent <= result.exponent @[PositMul.scala 40:10]
    io.out.sign <= result.sign @[PositMul.scala 40:10]
    
  module PositExtractor : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    node sign = bits(io.in, 31, 31) @[PositExtractor.scala 12:21]
    node _T = not(io.in) @[PositExtractor.scala 13:26]
    node _T_1 = add(_T, UInt<1>("h01")) @[PositExtractor.scala 13:33]
    node _T_2 = tail(_T_1, 1) @[PositExtractor.scala 13:33]
    node absIn = mux(sign, _T_2, io.in) @[PositExtractor.scala 13:19]
    node _T_3 = bits(absIn, 30, 30) @[PositExtractor.scala 14:22]
    node negExp = not(_T_3) @[PositExtractor.scala 14:16]
    node regExpFrac = bits(absIn, 30, 0) @[PositExtractor.scala 16:26]
    node _T_4 = not(regExpFrac) @[PositExtractor.scala 17:45]
    node zerosRegime = mux(negExp, regExpFrac, _T_4) @[PositExtractor.scala 17:24]
    node _T_5 = neq(zerosRegime, UInt<1>("h00")) @[common.scala 61:41]
    node _T_6 = not(_T_5) @[common.scala 61:33]
    node _T_7 = bits(zerosRegime, 0, 0) @[common.scala 19:50]
    node _T_8 = bits(zerosRegime, 1, 1) @[common.scala 19:50]
    node _T_9 = bits(zerosRegime, 2, 2) @[common.scala 19:50]
    node _T_10 = bits(zerosRegime, 3, 3) @[common.scala 19:50]
    node _T_11 = bits(zerosRegime, 4, 4) @[common.scala 19:50]
    node _T_12 = bits(zerosRegime, 5, 5) @[common.scala 19:50]
    node _T_13 = bits(zerosRegime, 6, 6) @[common.scala 19:50]
    node _T_14 = bits(zerosRegime, 7, 7) @[common.scala 19:50]
    node _T_15 = bits(zerosRegime, 8, 8) @[common.scala 19:50]
    node _T_16 = bits(zerosRegime, 9, 9) @[common.scala 19:50]
    node _T_17 = bits(zerosRegime, 10, 10) @[common.scala 19:50]
    node _T_18 = bits(zerosRegime, 11, 11) @[common.scala 19:50]
    node _T_19 = bits(zerosRegime, 12, 12) @[common.scala 19:50]
    node _T_20 = bits(zerosRegime, 13, 13) @[common.scala 19:50]
    node _T_21 = bits(zerosRegime, 14, 14) @[common.scala 19:50]
    node _T_22 = bits(zerosRegime, 15, 15) @[common.scala 19:50]
    node _T_23 = bits(zerosRegime, 16, 16) @[common.scala 19:50]
    node _T_24 = bits(zerosRegime, 17, 17) @[common.scala 19:50]
    node _T_25 = bits(zerosRegime, 18, 18) @[common.scala 19:50]
    node _T_26 = bits(zerosRegime, 19, 19) @[common.scala 19:50]
    node _T_27 = bits(zerosRegime, 20, 20) @[common.scala 19:50]
    node _T_28 = bits(zerosRegime, 21, 21) @[common.scala 19:50]
    node _T_29 = bits(zerosRegime, 22, 22) @[common.scala 19:50]
    node _T_30 = bits(zerosRegime, 23, 23) @[common.scala 19:50]
    node _T_31 = bits(zerosRegime, 24, 24) @[common.scala 19:50]
    node _T_32 = bits(zerosRegime, 25, 25) @[common.scala 19:50]
    node _T_33 = bits(zerosRegime, 26, 26) @[common.scala 19:50]
    node _T_34 = bits(zerosRegime, 27, 27) @[common.scala 19:50]
    node _T_35 = bits(zerosRegime, 28, 28) @[common.scala 19:50]
    node _T_36 = bits(zerosRegime, 29, 29) @[common.scala 19:50]
    node _T_37 = bits(zerosRegime, 30, 30) @[common.scala 19:50]
    node _T_38 = mux(_T_8, UInt<5>("h01d"), UInt<5>("h01e")) @[Mux.scala 47:69]
    node _T_39 = mux(_T_9, UInt<5>("h01c"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_10, UInt<5>("h01b"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_11, UInt<5>("h01a"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_12, UInt<5>("h019"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_13, UInt<5>("h018"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_14, UInt<5>("h017"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_15, UInt<5>("h016"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_16, UInt<5>("h015"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_17, UInt<5>("h014"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_18, UInt<5>("h013"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_19, UInt<5>("h012"), _T_48) @[Mux.scala 47:69]
    node _T_50 = mux(_T_20, UInt<5>("h011"), _T_49) @[Mux.scala 47:69]
    node _T_51 = mux(_T_21, UInt<5>("h010"), _T_50) @[Mux.scala 47:69]
    node _T_52 = mux(_T_22, UInt<4>("h0f"), _T_51) @[Mux.scala 47:69]
    node _T_53 = mux(_T_23, UInt<4>("h0e"), _T_52) @[Mux.scala 47:69]
    node _T_54 = mux(_T_24, UInt<4>("h0d"), _T_53) @[Mux.scala 47:69]
    node _T_55 = mux(_T_25, UInt<4>("h0c"), _T_54) @[Mux.scala 47:69]
    node _T_56 = mux(_T_26, UInt<4>("h0b"), _T_55) @[Mux.scala 47:69]
    node _T_57 = mux(_T_27, UInt<4>("h0a"), _T_56) @[Mux.scala 47:69]
    node _T_58 = mux(_T_28, UInt<4>("h09"), _T_57) @[Mux.scala 47:69]
    node _T_59 = mux(_T_29, UInt<4>("h08"), _T_58) @[Mux.scala 47:69]
    node _T_60 = mux(_T_30, UInt<3>("h07"), _T_59) @[Mux.scala 47:69]
    node _T_61 = mux(_T_31, UInt<3>("h06"), _T_60) @[Mux.scala 47:69]
    node _T_62 = mux(_T_32, UInt<3>("h05"), _T_61) @[Mux.scala 47:69]
    node _T_63 = mux(_T_33, UInt<3>("h04"), _T_62) @[Mux.scala 47:69]
    node _T_64 = mux(_T_34, UInt<2>("h03"), _T_63) @[Mux.scala 47:69]
    node _T_65 = mux(_T_35, UInt<2>("h02"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_36, UInt<1>("h01"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_37, UInt<1>("h00"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_6, UInt<5>("h01f"), _T_67) @[PositExtractor.scala 20:10]
    node regimeCount = cat(UInt<1>("h00"), _T_68) @[Cat.scala 30:58]
    node _T_69 = not(regimeCount) @[PositExtractor.scala 22:17]
    node _T_70 = add(_T_69, UInt<1>("h01")) @[PositExtractor.scala 22:30]
    node _T_71 = tail(_T_70, 1) @[PositExtractor.scala 22:30]
    node _T_72 = sub(regimeCount, UInt<1>("h01")) @[PositExtractor.scala 22:49]
    node _T_73 = tail(_T_72, 1) @[PositExtractor.scala 22:49]
    node regime = mux(negExp, _T_71, _T_73) @[PositExtractor.scala 22:8]
    node _T_74 = add(regimeCount, UInt<2>("h02")) @[PositExtractor.scala 24:39]
    node _T_75 = tail(_T_74, 1) @[PositExtractor.scala 24:39]
    node expFrac = dshl(absIn, _T_75) @[PositExtractor.scala 24:23]
    node extractedExp = bits(expFrac, 31, 30) @[PositExtractor.scala 26:24]
    node frac = bits(expFrac, 29, 3) @[PositExtractor.scala 28:21]
    node _T_76 = bits(io.in, 31, 31) @[common.scala 27:43]
    node _T_77 = bits(io.in, 30, 0) @[common.scala 27:57]
    node _T_78 = neq(_T_77, UInt<1>("h00")) @[common.scala 27:71]
    node _T_79 = not(_T_78) @[common.scala 27:53]
    node _T_80 = and(_T_76, _T_79) @[common.scala 27:51]
    io.out.isNaR <= _T_80 @[PositExtractor.scala 30:19]
    node _T_81 = neq(io.in, UInt<1>("h00")) @[common.scala 61:41]
    node _T_82 = not(_T_81) @[common.scala 61:33]
    io.out.isZero <= _T_82 @[PositExtractor.scala 31:19]
    io.out.sign <= sign @[PositExtractor.scala 33:19]
    node _T_83 = cat(regime, extractedExp) @[Cat.scala 30:58]
    node _T_84 = asSInt(_T_83) @[PositExtractor.scala 37:11]
    io.out.exponent <= _T_84 @[PositExtractor.scala 34:19]
    node _T_85 = cat(UInt<1>("h01"), frac) @[Cat.scala 30:58]
    io.out.fraction <= _T_85 @[PositExtractor.scala 38:19]
    
  module PositExtractor_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    node sign = bits(io.in, 31, 31) @[PositExtractor.scala 12:21]
    node _T = not(io.in) @[PositExtractor.scala 13:26]
    node _T_1 = add(_T, UInt<1>("h01")) @[PositExtractor.scala 13:33]
    node _T_2 = tail(_T_1, 1) @[PositExtractor.scala 13:33]
    node absIn = mux(sign, _T_2, io.in) @[PositExtractor.scala 13:19]
    node _T_3 = bits(absIn, 30, 30) @[PositExtractor.scala 14:22]
    node negExp = not(_T_3) @[PositExtractor.scala 14:16]
    node regExpFrac = bits(absIn, 30, 0) @[PositExtractor.scala 16:26]
    node _T_4 = not(regExpFrac) @[PositExtractor.scala 17:45]
    node zerosRegime = mux(negExp, regExpFrac, _T_4) @[PositExtractor.scala 17:24]
    node _T_5 = neq(zerosRegime, UInt<1>("h00")) @[common.scala 61:41]
    node _T_6 = not(_T_5) @[common.scala 61:33]
    node _T_7 = bits(zerosRegime, 0, 0) @[common.scala 19:50]
    node _T_8 = bits(zerosRegime, 1, 1) @[common.scala 19:50]
    node _T_9 = bits(zerosRegime, 2, 2) @[common.scala 19:50]
    node _T_10 = bits(zerosRegime, 3, 3) @[common.scala 19:50]
    node _T_11 = bits(zerosRegime, 4, 4) @[common.scala 19:50]
    node _T_12 = bits(zerosRegime, 5, 5) @[common.scala 19:50]
    node _T_13 = bits(zerosRegime, 6, 6) @[common.scala 19:50]
    node _T_14 = bits(zerosRegime, 7, 7) @[common.scala 19:50]
    node _T_15 = bits(zerosRegime, 8, 8) @[common.scala 19:50]
    node _T_16 = bits(zerosRegime, 9, 9) @[common.scala 19:50]
    node _T_17 = bits(zerosRegime, 10, 10) @[common.scala 19:50]
    node _T_18 = bits(zerosRegime, 11, 11) @[common.scala 19:50]
    node _T_19 = bits(zerosRegime, 12, 12) @[common.scala 19:50]
    node _T_20 = bits(zerosRegime, 13, 13) @[common.scala 19:50]
    node _T_21 = bits(zerosRegime, 14, 14) @[common.scala 19:50]
    node _T_22 = bits(zerosRegime, 15, 15) @[common.scala 19:50]
    node _T_23 = bits(zerosRegime, 16, 16) @[common.scala 19:50]
    node _T_24 = bits(zerosRegime, 17, 17) @[common.scala 19:50]
    node _T_25 = bits(zerosRegime, 18, 18) @[common.scala 19:50]
    node _T_26 = bits(zerosRegime, 19, 19) @[common.scala 19:50]
    node _T_27 = bits(zerosRegime, 20, 20) @[common.scala 19:50]
    node _T_28 = bits(zerosRegime, 21, 21) @[common.scala 19:50]
    node _T_29 = bits(zerosRegime, 22, 22) @[common.scala 19:50]
    node _T_30 = bits(zerosRegime, 23, 23) @[common.scala 19:50]
    node _T_31 = bits(zerosRegime, 24, 24) @[common.scala 19:50]
    node _T_32 = bits(zerosRegime, 25, 25) @[common.scala 19:50]
    node _T_33 = bits(zerosRegime, 26, 26) @[common.scala 19:50]
    node _T_34 = bits(zerosRegime, 27, 27) @[common.scala 19:50]
    node _T_35 = bits(zerosRegime, 28, 28) @[common.scala 19:50]
    node _T_36 = bits(zerosRegime, 29, 29) @[common.scala 19:50]
    node _T_37 = bits(zerosRegime, 30, 30) @[common.scala 19:50]
    node _T_38 = mux(_T_8, UInt<5>("h01d"), UInt<5>("h01e")) @[Mux.scala 47:69]
    node _T_39 = mux(_T_9, UInt<5>("h01c"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_10, UInt<5>("h01b"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_11, UInt<5>("h01a"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_12, UInt<5>("h019"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_13, UInt<5>("h018"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_14, UInt<5>("h017"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_15, UInt<5>("h016"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_16, UInt<5>("h015"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_17, UInt<5>("h014"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_18, UInt<5>("h013"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_19, UInt<5>("h012"), _T_48) @[Mux.scala 47:69]
    node _T_50 = mux(_T_20, UInt<5>("h011"), _T_49) @[Mux.scala 47:69]
    node _T_51 = mux(_T_21, UInt<5>("h010"), _T_50) @[Mux.scala 47:69]
    node _T_52 = mux(_T_22, UInt<4>("h0f"), _T_51) @[Mux.scala 47:69]
    node _T_53 = mux(_T_23, UInt<4>("h0e"), _T_52) @[Mux.scala 47:69]
    node _T_54 = mux(_T_24, UInt<4>("h0d"), _T_53) @[Mux.scala 47:69]
    node _T_55 = mux(_T_25, UInt<4>("h0c"), _T_54) @[Mux.scala 47:69]
    node _T_56 = mux(_T_26, UInt<4>("h0b"), _T_55) @[Mux.scala 47:69]
    node _T_57 = mux(_T_27, UInt<4>("h0a"), _T_56) @[Mux.scala 47:69]
    node _T_58 = mux(_T_28, UInt<4>("h09"), _T_57) @[Mux.scala 47:69]
    node _T_59 = mux(_T_29, UInt<4>("h08"), _T_58) @[Mux.scala 47:69]
    node _T_60 = mux(_T_30, UInt<3>("h07"), _T_59) @[Mux.scala 47:69]
    node _T_61 = mux(_T_31, UInt<3>("h06"), _T_60) @[Mux.scala 47:69]
    node _T_62 = mux(_T_32, UInt<3>("h05"), _T_61) @[Mux.scala 47:69]
    node _T_63 = mux(_T_33, UInt<3>("h04"), _T_62) @[Mux.scala 47:69]
    node _T_64 = mux(_T_34, UInt<2>("h03"), _T_63) @[Mux.scala 47:69]
    node _T_65 = mux(_T_35, UInt<2>("h02"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_36, UInt<1>("h01"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_37, UInt<1>("h00"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_6, UInt<5>("h01f"), _T_67) @[PositExtractor.scala 20:10]
    node regimeCount = cat(UInt<1>("h00"), _T_68) @[Cat.scala 30:58]
    node _T_69 = not(regimeCount) @[PositExtractor.scala 22:17]
    node _T_70 = add(_T_69, UInt<1>("h01")) @[PositExtractor.scala 22:30]
    node _T_71 = tail(_T_70, 1) @[PositExtractor.scala 22:30]
    node _T_72 = sub(regimeCount, UInt<1>("h01")) @[PositExtractor.scala 22:49]
    node _T_73 = tail(_T_72, 1) @[PositExtractor.scala 22:49]
    node regime = mux(negExp, _T_71, _T_73) @[PositExtractor.scala 22:8]
    node _T_74 = add(regimeCount, UInt<2>("h02")) @[PositExtractor.scala 24:39]
    node _T_75 = tail(_T_74, 1) @[PositExtractor.scala 24:39]
    node expFrac = dshl(absIn, _T_75) @[PositExtractor.scala 24:23]
    node extractedExp = bits(expFrac, 31, 30) @[PositExtractor.scala 26:24]
    node frac = bits(expFrac, 29, 3) @[PositExtractor.scala 28:21]
    node _T_76 = bits(io.in, 31, 31) @[common.scala 27:43]
    node _T_77 = bits(io.in, 30, 0) @[common.scala 27:57]
    node _T_78 = neq(_T_77, UInt<1>("h00")) @[common.scala 27:71]
    node _T_79 = not(_T_78) @[common.scala 27:53]
    node _T_80 = and(_T_76, _T_79) @[common.scala 27:51]
    io.out.isNaR <= _T_80 @[PositExtractor.scala 30:19]
    node _T_81 = neq(io.in, UInt<1>("h00")) @[common.scala 61:41]
    node _T_82 = not(_T_81) @[common.scala 61:33]
    io.out.isZero <= _T_82 @[PositExtractor.scala 31:19]
    io.out.sign <= sign @[PositExtractor.scala 33:19]
    node _T_83 = cat(regime, extractedExp) @[Cat.scala 30:58]
    node _T_84 = asSInt(_T_83) @[PositExtractor.scala 37:11]
    io.out.exponent <= _T_84 @[PositExtractor.scala 34:19]
    node _T_85 = cat(UInt<1>("h01"), frac) @[Cat.scala 30:58]
    io.out.fraction <= _T_85 @[PositExtractor.scala 38:19]
    
  module PositExtractor_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    node sign = bits(io.in, 31, 31) @[PositExtractor.scala 12:21]
    node _T = not(io.in) @[PositExtractor.scala 13:26]
    node _T_1 = add(_T, UInt<1>("h01")) @[PositExtractor.scala 13:33]
    node _T_2 = tail(_T_1, 1) @[PositExtractor.scala 13:33]
    node absIn = mux(sign, _T_2, io.in) @[PositExtractor.scala 13:19]
    node _T_3 = bits(absIn, 30, 30) @[PositExtractor.scala 14:22]
    node negExp = not(_T_3) @[PositExtractor.scala 14:16]
    node regExpFrac = bits(absIn, 30, 0) @[PositExtractor.scala 16:26]
    node _T_4 = not(regExpFrac) @[PositExtractor.scala 17:45]
    node zerosRegime = mux(negExp, regExpFrac, _T_4) @[PositExtractor.scala 17:24]
    node _T_5 = neq(zerosRegime, UInt<1>("h00")) @[common.scala 61:41]
    node _T_6 = not(_T_5) @[common.scala 61:33]
    node _T_7 = bits(zerosRegime, 0, 0) @[common.scala 19:50]
    node _T_8 = bits(zerosRegime, 1, 1) @[common.scala 19:50]
    node _T_9 = bits(zerosRegime, 2, 2) @[common.scala 19:50]
    node _T_10 = bits(zerosRegime, 3, 3) @[common.scala 19:50]
    node _T_11 = bits(zerosRegime, 4, 4) @[common.scala 19:50]
    node _T_12 = bits(zerosRegime, 5, 5) @[common.scala 19:50]
    node _T_13 = bits(zerosRegime, 6, 6) @[common.scala 19:50]
    node _T_14 = bits(zerosRegime, 7, 7) @[common.scala 19:50]
    node _T_15 = bits(zerosRegime, 8, 8) @[common.scala 19:50]
    node _T_16 = bits(zerosRegime, 9, 9) @[common.scala 19:50]
    node _T_17 = bits(zerosRegime, 10, 10) @[common.scala 19:50]
    node _T_18 = bits(zerosRegime, 11, 11) @[common.scala 19:50]
    node _T_19 = bits(zerosRegime, 12, 12) @[common.scala 19:50]
    node _T_20 = bits(zerosRegime, 13, 13) @[common.scala 19:50]
    node _T_21 = bits(zerosRegime, 14, 14) @[common.scala 19:50]
    node _T_22 = bits(zerosRegime, 15, 15) @[common.scala 19:50]
    node _T_23 = bits(zerosRegime, 16, 16) @[common.scala 19:50]
    node _T_24 = bits(zerosRegime, 17, 17) @[common.scala 19:50]
    node _T_25 = bits(zerosRegime, 18, 18) @[common.scala 19:50]
    node _T_26 = bits(zerosRegime, 19, 19) @[common.scala 19:50]
    node _T_27 = bits(zerosRegime, 20, 20) @[common.scala 19:50]
    node _T_28 = bits(zerosRegime, 21, 21) @[common.scala 19:50]
    node _T_29 = bits(zerosRegime, 22, 22) @[common.scala 19:50]
    node _T_30 = bits(zerosRegime, 23, 23) @[common.scala 19:50]
    node _T_31 = bits(zerosRegime, 24, 24) @[common.scala 19:50]
    node _T_32 = bits(zerosRegime, 25, 25) @[common.scala 19:50]
    node _T_33 = bits(zerosRegime, 26, 26) @[common.scala 19:50]
    node _T_34 = bits(zerosRegime, 27, 27) @[common.scala 19:50]
    node _T_35 = bits(zerosRegime, 28, 28) @[common.scala 19:50]
    node _T_36 = bits(zerosRegime, 29, 29) @[common.scala 19:50]
    node _T_37 = bits(zerosRegime, 30, 30) @[common.scala 19:50]
    node _T_38 = mux(_T_8, UInt<5>("h01d"), UInt<5>("h01e")) @[Mux.scala 47:69]
    node _T_39 = mux(_T_9, UInt<5>("h01c"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_10, UInt<5>("h01b"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_11, UInt<5>("h01a"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_12, UInt<5>("h019"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_13, UInt<5>("h018"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_14, UInt<5>("h017"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_15, UInt<5>("h016"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_16, UInt<5>("h015"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_17, UInt<5>("h014"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_18, UInt<5>("h013"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_19, UInt<5>("h012"), _T_48) @[Mux.scala 47:69]
    node _T_50 = mux(_T_20, UInt<5>("h011"), _T_49) @[Mux.scala 47:69]
    node _T_51 = mux(_T_21, UInt<5>("h010"), _T_50) @[Mux.scala 47:69]
    node _T_52 = mux(_T_22, UInt<4>("h0f"), _T_51) @[Mux.scala 47:69]
    node _T_53 = mux(_T_23, UInt<4>("h0e"), _T_52) @[Mux.scala 47:69]
    node _T_54 = mux(_T_24, UInt<4>("h0d"), _T_53) @[Mux.scala 47:69]
    node _T_55 = mux(_T_25, UInt<4>("h0c"), _T_54) @[Mux.scala 47:69]
    node _T_56 = mux(_T_26, UInt<4>("h0b"), _T_55) @[Mux.scala 47:69]
    node _T_57 = mux(_T_27, UInt<4>("h0a"), _T_56) @[Mux.scala 47:69]
    node _T_58 = mux(_T_28, UInt<4>("h09"), _T_57) @[Mux.scala 47:69]
    node _T_59 = mux(_T_29, UInt<4>("h08"), _T_58) @[Mux.scala 47:69]
    node _T_60 = mux(_T_30, UInt<3>("h07"), _T_59) @[Mux.scala 47:69]
    node _T_61 = mux(_T_31, UInt<3>("h06"), _T_60) @[Mux.scala 47:69]
    node _T_62 = mux(_T_32, UInt<3>("h05"), _T_61) @[Mux.scala 47:69]
    node _T_63 = mux(_T_33, UInt<3>("h04"), _T_62) @[Mux.scala 47:69]
    node _T_64 = mux(_T_34, UInt<2>("h03"), _T_63) @[Mux.scala 47:69]
    node _T_65 = mux(_T_35, UInt<2>("h02"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_36, UInt<1>("h01"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_37, UInt<1>("h00"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_6, UInt<5>("h01f"), _T_67) @[PositExtractor.scala 20:10]
    node regimeCount = cat(UInt<1>("h00"), _T_68) @[Cat.scala 30:58]
    node _T_69 = not(regimeCount) @[PositExtractor.scala 22:17]
    node _T_70 = add(_T_69, UInt<1>("h01")) @[PositExtractor.scala 22:30]
    node _T_71 = tail(_T_70, 1) @[PositExtractor.scala 22:30]
    node _T_72 = sub(regimeCount, UInt<1>("h01")) @[PositExtractor.scala 22:49]
    node _T_73 = tail(_T_72, 1) @[PositExtractor.scala 22:49]
    node regime = mux(negExp, _T_71, _T_73) @[PositExtractor.scala 22:8]
    node _T_74 = add(regimeCount, UInt<2>("h02")) @[PositExtractor.scala 24:39]
    node _T_75 = tail(_T_74, 1) @[PositExtractor.scala 24:39]
    node expFrac = dshl(absIn, _T_75) @[PositExtractor.scala 24:23]
    node extractedExp = bits(expFrac, 31, 30) @[PositExtractor.scala 26:24]
    node frac = bits(expFrac, 29, 3) @[PositExtractor.scala 28:21]
    node _T_76 = bits(io.in, 31, 31) @[common.scala 27:43]
    node _T_77 = bits(io.in, 30, 0) @[common.scala 27:57]
    node _T_78 = neq(_T_77, UInt<1>("h00")) @[common.scala 27:71]
    node _T_79 = not(_T_78) @[common.scala 27:53]
    node _T_80 = and(_T_76, _T_79) @[common.scala 27:51]
    io.out.isNaR <= _T_80 @[PositExtractor.scala 30:19]
    node _T_81 = neq(io.in, UInt<1>("h00")) @[common.scala 61:41]
    node _T_82 = not(_T_81) @[common.scala 61:33]
    io.out.isZero <= _T_82 @[PositExtractor.scala 31:19]
    io.out.sign <= sign @[PositExtractor.scala 33:19]
    node _T_83 = cat(regime, extractedExp) @[Cat.scala 30:58]
    node _T_84 = asSInt(_T_83) @[PositExtractor.scala 37:11]
    io.out.exponent <= _T_84 @[PositExtractor.scala 34:19]
    node _T_85 = cat(UInt<1>("h01"), frac) @[Cat.scala 30:58]
    io.out.fraction <= _T_85 @[PositExtractor.scala 38:19]
    
  module PositGenerator : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module PositGenerator_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module PositGenerator_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module PositGenerator_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module PositGenerator_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module Posit : 
    input clock : Clock
    input reset : Reset
    output io : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {num1 : UInt<32>, num2 : UInt<32>, num3 : UInt<32>, inst : UInt<3>, mode : UInt<2>}}, result : {flip ready : UInt<1>, valid : UInt<1>, bits : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}}, flip in_idx : UInt<2>, out_idx : UInt<2>}
    
    inst positAddCore of PositAddCore @[POSIT.scala 44:34]
    positAddCore.clock <= clock
    positAddCore.reset <= reset
    inst positCompare of PositCompare @[POSIT.scala 45:34]
    positCompare.clock <= clock
    positCompare.reset <= reset
    inst positFMACore of PositFMACore @[POSIT.scala 46:34]
    positFMACore.clock <= clock
    positFMACore.reset <= reset
    inst positDivSqrtCore of PositDivSqrtCore @[POSIT.scala 47:38]
    positDivSqrtCore.clock <= clock
    positDivSqrtCore.reset <= reset
    inst positMulCore of PositMulCore @[POSIT.scala 48:34]
    positMulCore.clock <= clock
    positMulCore.reset <= reset
    reg init_num1 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 51:32]
    reg init_num2 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 52:32]
    reg init_num3 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 53:32]
    reg init_input_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 54:39]
    reg init_inst : UInt<3>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 55:32]
    reg init_mode : UInt<2>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 56:32]
    reg init_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 57:33]
    reg init_idx : UInt<2>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 58:31]
    reg result_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 60:35]
    reg exec_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 61:33]
    node _T = and(io.request.valid, io.request.ready) @[POSIT.scala 63:31]
    when _T : @[POSIT.scala 63:51]
      init_num1 <= io.request.bits.num1 @[POSIT.scala 64:27]
      init_num2 <= io.request.bits.num2 @[POSIT.scala 65:27]
      init_num3 <= io.request.bits.num3 @[POSIT.scala 66:27]
      init_valid <= io.request.valid @[POSIT.scala 67:28]
      init_inst <= io.request.bits.inst @[POSIT.scala 68:27]
      init_mode <= io.request.bits.mode @[POSIT.scala 69:27]
      init_idx <= io.in_idx @[POSIT.scala 70:26]
      skip @[POSIT.scala 63:51]
    else : @[POSIT.scala 71:65]
      node _T_1 = eq(result_valid, UInt<1>("h00")) @[POSIT.scala 71:21]
      node _T_2 = eq(exec_valid, UInt<1>("h00")) @[POSIT.scala 71:39]
      node _T_3 = and(_T_1, _T_2) @[POSIT.scala 71:36]
      node _T_4 = and(_T_3, init_valid) @[POSIT.scala 71:51]
      when _T_4 : @[POSIT.scala 71:65]
        init_valid <= UInt<1>("h00") @[POSIT.scala 72:28]
        skip @[POSIT.scala 71:65]
    inst num1Extractor of PositExtractor @[POSIT.scala 74:35]
    num1Extractor.clock <= clock
    num1Extractor.reset <= reset
    inst num2Extractor of PositExtractor_1 @[POSIT.scala 75:35]
    num2Extractor.clock <= clock
    num2Extractor.reset <= reset
    inst num3Extractor of PositExtractor_2 @[POSIT.scala 76:35]
    num3Extractor.clock <= clock
    num3Extractor.reset <= reset
    num1Extractor.io.in <= init_num1 @[POSIT.scala 77:29]
    num2Extractor.io.in <= init_num2 @[POSIT.scala 78:29]
    num3Extractor.io.in <= init_num3 @[POSIT.scala 79:29]
    wire _T_5 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 81:75]
    _T_5.isNaR <= UInt<1>("h00") @[POSIT.scala 81:75]
    _T_5.isZero <= UInt<1>("h00") @[POSIT.scala 81:75]
    _T_5.fraction <= UInt<28>("h00") @[POSIT.scala 81:75]
    node _T_6 = asSInt(UInt<9>("h00")) @[POSIT.scala 81:75]
    _T_5.exponent <= _T_6 @[POSIT.scala 81:75]
    _T_5.sign <= UInt<1>("h00") @[POSIT.scala 81:75]
    reg exec_num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, clock with : (reset => (reset, _T_5)) @[POSIT.scala 81:32]
    wire _T_7 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 82:75]
    _T_7.isNaR <= UInt<1>("h00") @[POSIT.scala 82:75]
    _T_7.isZero <= UInt<1>("h00") @[POSIT.scala 82:75]
    _T_7.fraction <= UInt<28>("h00") @[POSIT.scala 82:75]
    node _T_8 = asSInt(UInt<9>("h00")) @[POSIT.scala 82:75]
    _T_7.exponent <= _T_8 @[POSIT.scala 82:75]
    _T_7.sign <= UInt<1>("h00") @[POSIT.scala 82:75]
    reg exec_num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, clock with : (reset => (reset, _T_7)) @[POSIT.scala 82:32]
    wire _T_9 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 83:75]
    _T_9.isNaR <= UInt<1>("h00") @[POSIT.scala 83:75]
    _T_9.isZero <= UInt<1>("h00") @[POSIT.scala 83:75]
    _T_9.fraction <= UInt<28>("h00") @[POSIT.scala 83:75]
    node _T_10 = asSInt(UInt<9>("h00")) @[POSIT.scala 83:75]
    _T_9.exponent <= _T_10 @[POSIT.scala 83:75]
    _T_9.sign <= UInt<1>("h00") @[POSIT.scala 83:75]
    reg exec_num3 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, clock with : (reset => (reset, _T_9)) @[POSIT.scala 83:32]
    reg comp_num1 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 84:32]
    reg comp_num2 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 85:32]
    reg exec_input_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 86:39]
    reg exec_inst : UInt<3>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 87:32]
    reg exec_mode : UInt<2>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 88:32]
    reg exec_idx : UInt<2>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 89:31]
    reg dispatched : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 90:33]
    wire default_unpacked : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 92:36]
    wire _T_11 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 94:76]
    _T_11.isNaR <= UInt<1>("h00") @[POSIT.scala 94:76]
    _T_11.isZero <= UInt<1>("h00") @[POSIT.scala 94:76]
    _T_11.fraction <= UInt<28>("h00") @[POSIT.scala 94:76]
    node _T_12 = asSInt(UInt<9>("h00")) @[POSIT.scala 94:76]
    _T_11.exponent <= _T_12 @[POSIT.scala 94:76]
    _T_11.sign <= UInt<1>("h00") @[POSIT.scala 94:76]
    reg result_out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, clock with : (reset => (reset, _T_11)) @[POSIT.scala 94:33]
    reg result_stickyBit : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 95:39]
    reg result_trailingBits : UInt<2>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 96:42]
    reg result_lt : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 97:32]
    reg result_eq : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 98:32]
    reg result_gt : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 99:32]
    reg result_idx : UInt<2>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 100:33]
    node _T_13 = not(init_valid) @[POSIT.scala 102:29]
    io.request.ready <= _T_13 @[POSIT.scala 102:26]
    default_unpacked.sign <= UInt<1>("h00") @[POSIT.scala 103:32]
    default_unpacked.exponent <= asSInt(UInt<1>("h00")) @[POSIT.scala 104:35]
    default_unpacked.fraction <= UInt<1>("h00") @[POSIT.scala 105:35]
    default_unpacked.isZero <= UInt<1>("h00") @[POSIT.scala 106:33]
    default_unpacked.isNaR <= UInt<1>("h00") @[POSIT.scala 107:32]
    wire new_result_valid : UInt<1> @[POSIT.scala 108:36]
    node _T_14 = eq(result_valid, UInt<1>("h00")) @[POSIT.scala 110:16]
    node _T_15 = eq(exec_valid, UInt<1>("h00")) @[POSIT.scala 110:34]
    node _T_16 = and(_T_14, _T_15) @[POSIT.scala 110:31]
    node _T_17 = and(_T_16, init_valid) @[POSIT.scala 110:46]
    when _T_17 : @[POSIT.scala 110:60]
      comp_num1 <= init_num1 @[POSIT.scala 111:27]
      comp_num2 <= init_num2 @[POSIT.scala 112:27]
      exec_num1.isNaR <= num1Extractor.io.out.isNaR @[POSIT.scala 113:27]
      exec_num1.isZero <= num1Extractor.io.out.isZero @[POSIT.scala 113:27]
      exec_num1.fraction <= num1Extractor.io.out.fraction @[POSIT.scala 113:27]
      exec_num1.exponent <= num1Extractor.io.out.exponent @[POSIT.scala 113:27]
      exec_num1.sign <= num1Extractor.io.out.sign @[POSIT.scala 113:27]
      exec_num2.isNaR <= num2Extractor.io.out.isNaR @[POSIT.scala 114:27]
      exec_num2.isZero <= num2Extractor.io.out.isZero @[POSIT.scala 114:27]
      exec_num2.fraction <= num2Extractor.io.out.fraction @[POSIT.scala 114:27]
      exec_num2.exponent <= num2Extractor.io.out.exponent @[POSIT.scala 114:27]
      exec_num2.sign <= num2Extractor.io.out.sign @[POSIT.scala 114:27]
      exec_num3.isNaR <= num3Extractor.io.out.isNaR @[POSIT.scala 115:27]
      exec_num3.isZero <= num3Extractor.io.out.isZero @[POSIT.scala 115:27]
      exec_num3.fraction <= num3Extractor.io.out.fraction @[POSIT.scala 115:27]
      exec_num3.exponent <= num3Extractor.io.out.exponent @[POSIT.scala 115:27]
      exec_num3.sign <= num3Extractor.io.out.sign @[POSIT.scala 115:27]
      exec_valid <= init_valid @[POSIT.scala 116:28]
      exec_inst <= init_inst @[POSIT.scala 117:27]
      exec_mode <= init_mode @[POSIT.scala 118:27]
      exec_idx <= init_idx @[POSIT.scala 119:26]
      skip @[POSIT.scala 110:60]
    else : @[POSIT.scala 120:37]
      when new_result_valid : @[POSIT.scala 120:37]
        exec_valid <= UInt<1>("h00") @[POSIT.scala 121:28]
        skip @[POSIT.scala 120:37]
    when new_result_valid : @[POSIT.scala 124:31]
      dispatched <= UInt<1>("h00") @[POSIT.scala 125:28]
      skip @[POSIT.scala 124:31]
    else : @[POSIT.scala 126:31]
      when exec_valid : @[POSIT.scala 126:31]
        dispatched <= UInt<1>("h01") @[POSIT.scala 127:28]
        skip @[POSIT.scala 126:31]
    positAddCore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 130:30]
    positAddCore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 130:30]
    positAddCore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 130:30]
    positAddCore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 130:30]
    positAddCore.io.num1.sign <= exec_num1.sign @[POSIT.scala 130:30]
    positAddCore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 131:30]
    positAddCore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 131:30]
    positAddCore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 131:30]
    positAddCore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 131:30]
    positAddCore.io.num2.sign <= exec_num2.sign @[POSIT.scala 131:30]
    node _T_18 = bits(exec_mode, 0, 0) @[POSIT.scala 132:41]
    positAddCore.io.sub <= _T_18 @[POSIT.scala 132:29]
    node _T_19 = eq(exec_inst, UInt<3>("h01")) @[POSIT.scala 133:64]
    node _T_20 = and(exec_valid, _T_19) @[POSIT.scala 133:51]
    node _T_21 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 133:91]
    node _T_22 = and(_T_20, _T_21) @[POSIT.scala 133:87]
    positAddCore.io.input_valid <= _T_22 @[POSIT.scala 133:37]
    node _T_23 = asSInt(comp_num1) @[POSIT.scala 135:43]
    positCompare.io.num1 <= _T_23 @[POSIT.scala 135:30]
    node _T_24 = asSInt(comp_num2) @[POSIT.scala 136:43]
    positCompare.io.num2 <= _T_24 @[POSIT.scala 136:30]
    node _T_25 = eq(exec_inst, UInt<3>("h02")) @[POSIT.scala 137:60]
    node _T_26 = and(exec_valid, _T_25) @[POSIT.scala 137:47]
    node _T_27 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 137:84]
    node _T_28 = and(_T_26, _T_27) @[POSIT.scala 137:80]
    positCompare.io.validIn <= _T_28 @[POSIT.scala 137:33]
    positFMACore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 139:30]
    positFMACore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 139:30]
    positFMACore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 139:30]
    positFMACore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 139:30]
    positFMACore.io.num1.sign <= exec_num1.sign @[POSIT.scala 139:30]
    positFMACore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 140:30]
    positFMACore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 140:30]
    positFMACore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 140:30]
    positFMACore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 140:30]
    positFMACore.io.num2.sign <= exec_num2.sign @[POSIT.scala 140:30]
    positFMACore.io.num3.isNaR <= exec_num3.isNaR @[POSIT.scala 141:30]
    positFMACore.io.num3.isZero <= exec_num3.isZero @[POSIT.scala 141:30]
    positFMACore.io.num3.fraction <= exec_num3.fraction @[POSIT.scala 141:30]
    positFMACore.io.num3.exponent <= exec_num3.exponent @[POSIT.scala 141:30]
    positFMACore.io.num3.sign <= exec_num3.sign @[POSIT.scala 141:30]
    node _T_29 = bits(exec_mode, 0, 0) @[POSIT.scala 142:41]
    positFMACore.io.sub <= _T_29 @[POSIT.scala 142:29]
    node _T_30 = bits(exec_mode, 1, 1) @[POSIT.scala 143:44]
    positFMACore.io.negate <= _T_30 @[POSIT.scala 143:32]
    node _T_31 = eq(exec_inst, UInt<3>("h03")) @[POSIT.scala 144:64]
    node _T_32 = and(exec_valid, _T_31) @[POSIT.scala 144:51]
    node _T_33 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 144:88]
    node _T_34 = and(_T_32, _T_33) @[POSIT.scala 144:84]
    positFMACore.io.input_valid <= _T_34 @[POSIT.scala 144:37]
    positDivSqrtCore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 147:34]
    positDivSqrtCore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 147:34]
    positDivSqrtCore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 147:34]
    positDivSqrtCore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 147:34]
    positDivSqrtCore.io.num1.sign <= exec_num1.sign @[POSIT.scala 147:34]
    positDivSqrtCore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 148:34]
    positDivSqrtCore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 148:34]
    positDivSqrtCore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 148:34]
    positDivSqrtCore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 148:34]
    positDivSqrtCore.io.num2.sign <= exec_num2.sign @[POSIT.scala 148:34]
    node _T_35 = bits(exec_mode, 0, 0) @[POSIT.scala 149:48]
    positDivSqrtCore.io.sqrtOp <= _T_35 @[POSIT.scala 149:36]
    node _T_36 = eq(exec_inst, UInt<3>("h05")) @[POSIT.scala 150:64]
    node _T_37 = and(exec_valid, _T_36) @[POSIT.scala 150:51]
    node _T_38 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 150:92]
    node _T_39 = and(_T_37, _T_38) @[POSIT.scala 150:88]
    positDivSqrtCore.io.validIn <= _T_39 @[POSIT.scala 150:37]
    positMulCore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 153:30]
    positMulCore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 153:30]
    positMulCore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 153:30]
    positMulCore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 153:30]
    positMulCore.io.num1.sign <= exec_num1.sign @[POSIT.scala 153:30]
    positMulCore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 154:30]
    positMulCore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 154:30]
    positMulCore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 154:30]
    positMulCore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 154:30]
    positMulCore.io.num2.sign <= exec_num2.sign @[POSIT.scala 154:30]
    node _T_40 = eq(exec_inst, UInt<3>("h04")) @[POSIT.scala 155:60]
    node _T_41 = and(exec_valid, _T_40) @[POSIT.scala 155:47]
    node _T_42 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 155:84]
    node _T_43 = and(_T_41, _T_42) @[POSIT.scala 155:80]
    positMulCore.io.validIn <= _T_43 @[POSIT.scala 155:33]
    node _T_44 = or(positCompare.io.validOut, positMulCore.io.validOut) @[POSIT.scala 158:54]
    node _T_45 = or(_T_44, positDivSqrtCore.io.validOut_div) @[POSIT.scala 158:80]
    node _T_46 = or(_T_45, positDivSqrtCore.io.validOut_sqrt) @[POSIT.scala 159:58]
    node _T_47 = or(_T_46, positFMACore.io.output_valid) @[POSIT.scala 160:59]
    node _T_48 = or(_T_47, positAddCore.io.output_valid) @[POSIT.scala 160:90]
    new_result_valid <= _T_48 @[POSIT.scala 158:26]
    when io.result.ready : @[POSIT.scala 162:30]
      result_valid <= new_result_valid @[POSIT.scala 166:30]
      node _T_49 = eq(UInt<3>("h05"), exec_inst) @[Mux.scala 68:19]
      node _T_50 = mux(_T_49, positDivSqrtCore.io.out, default_unpacked) @[Mux.scala 68:16]
      node _T_51 = eq(UInt<3>("h04"), exec_inst) @[Mux.scala 68:19]
      node _T_52 = mux(_T_51, positMulCore.io.out, _T_50) @[Mux.scala 68:16]
      node _T_53 = eq(UInt<3>("h03"), exec_inst) @[Mux.scala 68:19]
      node _T_54 = mux(_T_53, positFMACore.io.out, _T_52) @[Mux.scala 68:16]
      node _T_55 = eq(UInt<3>("h01"), exec_inst) @[Mux.scala 68:19]
      node _T_56 = mux(_T_55, positAddCore.io.out, _T_54) @[Mux.scala 68:16]
      result_out.isNaR <= _T_56.isNaR @[POSIT.scala 167:28]
      result_out.isZero <= _T_56.isZero @[POSIT.scala 167:28]
      result_out.fraction <= _T_56.fraction @[POSIT.scala 167:28]
      result_out.exponent <= _T_56.exponent @[POSIT.scala 167:28]
      result_out.sign <= _T_56.sign @[POSIT.scala 167:28]
      node _T_57 = eq(UInt<3>("h05"), exec_inst) @[Mux.scala 68:19]
      node _T_58 = mux(_T_57, positDivSqrtCore.io.stickyBit, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_59 = eq(UInt<3>("h04"), exec_inst) @[Mux.scala 68:19]
      node _T_60 = mux(_T_59, positMulCore.io.stickyBit, _T_58) @[Mux.scala 68:16]
      node _T_61 = eq(UInt<3>("h03"), exec_inst) @[Mux.scala 68:19]
      node _T_62 = mux(_T_61, positFMACore.io.stickyBit, _T_60) @[Mux.scala 68:16]
      node _T_63 = eq(UInt<3>("h01"), exec_inst) @[Mux.scala 68:19]
      node _T_64 = mux(_T_63, positAddCore.io.stickyBit, _T_62) @[Mux.scala 68:16]
      result_stickyBit <= _T_64 @[POSIT.scala 175:34]
      node _T_65 = eq(UInt<3>("h05"), exec_inst) @[Mux.scala 68:19]
      node _T_66 = mux(_T_65, positDivSqrtCore.io.trailingBits, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_67 = eq(UInt<3>("h04"), exec_inst) @[Mux.scala 68:19]
      node _T_68 = mux(_T_67, positMulCore.io.trailingBits, _T_66) @[Mux.scala 68:16]
      node _T_69 = eq(UInt<3>("h03"), exec_inst) @[Mux.scala 68:19]
      node _T_70 = mux(_T_69, positFMACore.io.trailingBits, _T_68) @[Mux.scala 68:16]
      node _T_71 = eq(UInt<3>("h01"), exec_inst) @[Mux.scala 68:19]
      node _T_72 = mux(_T_71, positAddCore.io.trailingBits, _T_70) @[Mux.scala 68:16]
      result_trailingBits <= _T_72 @[POSIT.scala 183:37]
      result_lt <= positCompare.io.lt @[POSIT.scala 190:27]
      result_eq <= positCompare.io.eq @[POSIT.scala 191:27]
      result_gt <= positCompare.io.gt @[POSIT.scala 192:27]
      result_idx <= exec_idx @[POSIT.scala 193:28]
      skip @[POSIT.scala 162:30]
    inst positGenerator of PositGenerator @[POSIT.scala 197:36]
    positGenerator.clock <= clock
    positGenerator.reset <= reset
    positGenerator.io.in.isNaR <= result_out.isNaR @[POSIT.scala 198:40]
    positGenerator.io.in.isZero <= result_out.isZero @[POSIT.scala 198:40]
    positGenerator.io.in.fraction <= result_out.fraction @[POSIT.scala 198:40]
    positGenerator.io.in.exponent <= result_out.exponent @[POSIT.scala 198:40]
    positGenerator.io.in.sign <= result_out.sign @[POSIT.scala 198:40]
    positGenerator.io.trailingBits <= result_trailingBits @[POSIT.scala 199:40]
    positGenerator.io.stickyBit <= result_stickyBit @[POSIT.scala 200:40]
    inst PositGenerator of PositGenerator_1 @[POSIT.scala 203:50]
    PositGenerator.clock <= clock
    PositGenerator.reset <= reset
    inst PositGenerator_1 of PositGenerator_2 @[POSIT.scala 204:47]
    PositGenerator_1.clock <= clock
    PositGenerator_1.reset <= reset
    inst PositGenerator_2 of PositGenerator_3 @[POSIT.scala 205:47]
    PositGenerator_2.clock <= clock
    PositGenerator_2.reset <= reset
    inst PositGenerator_3 of PositGenerator_4 @[POSIT.scala 206:51]
    PositGenerator_3.clock <= clock
    PositGenerator_3.reset <= reset
    PositGenerator.io.in.isNaR <= positAddCore.io.out.isNaR @[POSIT.scala 208:54]
    PositGenerator.io.in.isZero <= positAddCore.io.out.isZero @[POSIT.scala 208:54]
    PositGenerator.io.in.fraction <= positAddCore.io.out.fraction @[POSIT.scala 208:54]
    PositGenerator.io.in.exponent <= positAddCore.io.out.exponent @[POSIT.scala 208:54]
    PositGenerator.io.in.sign <= positAddCore.io.out.sign @[POSIT.scala 208:54]
    PositGenerator.io.trailingBits <= positAddCore.io.trailingBits @[POSIT.scala 209:54]
    PositGenerator.io.stickyBit <= positAddCore.io.stickyBit @[POSIT.scala 210:54]
    PositGenerator_1.io.in.isNaR <= positFMACore.io.out.isNaR @[POSIT.scala 212:51]
    PositGenerator_1.io.in.isZero <= positFMACore.io.out.isZero @[POSIT.scala 212:51]
    PositGenerator_1.io.in.fraction <= positFMACore.io.out.fraction @[POSIT.scala 212:51]
    PositGenerator_1.io.in.exponent <= positFMACore.io.out.exponent @[POSIT.scala 212:51]
    PositGenerator_1.io.in.sign <= positFMACore.io.out.sign @[POSIT.scala 212:51]
    PositGenerator_1.io.trailingBits <= positFMACore.io.trailingBits @[POSIT.scala 213:51]
    PositGenerator_1.io.stickyBit <= positFMACore.io.stickyBit @[POSIT.scala 214:51]
    PositGenerator_2.io.in.isNaR <= positMulCore.io.out.isNaR @[POSIT.scala 216:51]
    PositGenerator_2.io.in.isZero <= positMulCore.io.out.isZero @[POSIT.scala 216:51]
    PositGenerator_2.io.in.fraction <= positMulCore.io.out.fraction @[POSIT.scala 216:51]
    PositGenerator_2.io.in.exponent <= positMulCore.io.out.exponent @[POSIT.scala 216:51]
    PositGenerator_2.io.in.sign <= positMulCore.io.out.sign @[POSIT.scala 216:51]
    PositGenerator_2.io.trailingBits <= positMulCore.io.trailingBits @[POSIT.scala 217:51]
    PositGenerator_2.io.stickyBit <= positMulCore.io.stickyBit @[POSIT.scala 218:51]
    PositGenerator_3.io.in.isNaR <= positDivSqrtCore.io.out.isNaR @[POSIT.scala 220:55]
    PositGenerator_3.io.in.isZero <= positDivSqrtCore.io.out.isZero @[POSIT.scala 220:55]
    PositGenerator_3.io.in.fraction <= positDivSqrtCore.io.out.fraction @[POSIT.scala 220:55]
    PositGenerator_3.io.in.exponent <= positDivSqrtCore.io.out.exponent @[POSIT.scala 220:55]
    PositGenerator_3.io.in.sign <= positDivSqrtCore.io.out.sign @[POSIT.scala 220:55]
    PositGenerator_3.io.trailingBits <= positDivSqrtCore.io.trailingBits @[POSIT.scala 221:55]
    PositGenerator_3.io.stickyBit <= positDivSqrtCore.io.stickyBit @[POSIT.scala 222:55]
    node _T_73 = and(io.request.valid, io.request.ready) @[POSIT.scala 232:39]
    when _T_73 : @[POSIT.scala 232:59]
      node _T_74 = asUInt(reset) @[POSIT.scala 233:31]
      node _T_75 = eq(_T_74, UInt<1>("h00")) @[POSIT.scala 233:31]
      when _T_75 : @[POSIT.scala 233:31]
        printf(clock, UInt<1>(1), "Init:\n") @[POSIT.scala 233:31]
        skip @[POSIT.scala 233:31]
      node _T_76 = asUInt(reset) @[POSIT.scala 234:31]
      node _T_77 = eq(_T_76, UInt<1>("h00")) @[POSIT.scala 234:31]
      when _T_77 : @[POSIT.scala 234:31]
        printf(clock, UInt<1>(1), "\tinit_valid: %d\n", io.request.valid) @[POSIT.scala 234:31]
        skip @[POSIT.scala 234:31]
      node _T_78 = asUInt(reset) @[POSIT.scala 235:31]
      node _T_79 = eq(_T_78, UInt<1>("h00")) @[POSIT.scala 235:31]
      when _T_79 : @[POSIT.scala 235:31]
        printf(clock, UInt<1>(1), "\tinit_inst: %d\n", io.request.bits.inst) @[POSIT.scala 235:31]
        skip @[POSIT.scala 235:31]
      node _T_80 = asUInt(reset) @[POSIT.scala 236:31]
      node _T_81 = eq(_T_80, UInt<1>("h00")) @[POSIT.scala 236:31]
      when _T_81 : @[POSIT.scala 236:31]
        printf(clock, UInt<1>(1), "\tidx: %d\n", io.in_idx) @[POSIT.scala 236:31]
        skip @[POSIT.scala 236:31]
      skip @[POSIT.scala 232:59]
    else : @[POSIT.scala 238:73]
      node _T_82 = eq(result_valid, UInt<1>("h00")) @[POSIT.scala 238:29]
      node _T_83 = eq(exec_valid, UInt<1>("h00")) @[POSIT.scala 238:47]
      node _T_84 = and(_T_82, _T_83) @[POSIT.scala 238:44]
      node _T_85 = and(_T_84, init_valid) @[POSIT.scala 238:59]
      when _T_85 : @[POSIT.scala 238:73]
        node _T_86 = asUInt(reset) @[POSIT.scala 239:31]
        node _T_87 = eq(_T_86, UInt<1>("h00")) @[POSIT.scala 239:31]
        when _T_87 : @[POSIT.scala 239:31]
          printf(clock, UInt<1>(1), "\tinit_valid: %d\n", UInt<1>("h00")) @[POSIT.scala 239:31]
          skip @[POSIT.scala 239:31]
        skip @[POSIT.scala 238:73]
    when new_result_valid : @[POSIT.scala 241:39]
      node _T_88 = asUInt(reset) @[POSIT.scala 242:31]
      node _T_89 = eq(_T_88, UInt<1>("h00")) @[POSIT.scala 242:31]
      when _T_89 : @[POSIT.scala 242:31]
        printf(clock, UInt<1>(1), "new results!\n") @[POSIT.scala 242:31]
        skip @[POSIT.scala 242:31]
      skip @[POSIT.scala 241:39]
    node _T_90 = eq(result_valid, UInt<1>("h00")) @[POSIT.scala 244:24]
    node _T_91 = eq(exec_valid, UInt<1>("h00")) @[POSIT.scala 244:42]
    node _T_92 = and(_T_90, _T_91) @[POSIT.scala 244:39]
    node _T_93 = and(_T_92, init_valid) @[POSIT.scala 244:54]
    when _T_93 : @[POSIT.scala 244:68]
      node _T_94 = asUInt(reset) @[POSIT.scala 245:31]
      node _T_95 = eq(_T_94, UInt<1>("h00")) @[POSIT.scala 245:31]
      when _T_95 : @[POSIT.scala 245:31]
        printf(clock, UInt<1>(1), "Exec:\n") @[POSIT.scala 245:31]
        skip @[POSIT.scala 245:31]
      node _T_96 = asUInt(reset) @[POSIT.scala 246:31]
      node _T_97 = eq(_T_96, UInt<1>("h00")) @[POSIT.scala 246:31]
      when _T_97 : @[POSIT.scala 246:31]
        printf(clock, UInt<1>(1), "\t exec_valid: %d\n", init_valid) @[POSIT.scala 246:31]
        skip @[POSIT.scala 246:31]
      node _T_98 = asUInt(reset) @[POSIT.scala 247:31]
      node _T_99 = eq(_T_98, UInt<1>("h00")) @[POSIT.scala 247:31]
      when _T_99 : @[POSIT.scala 247:31]
        printf(clock, UInt<1>(1), "\t exec_inst: %d\n", init_inst) @[POSIT.scala 247:31]
        skip @[POSIT.scala 247:31]
      node _T_100 = asUInt(reset) @[POSIT.scala 248:31]
      node _T_101 = eq(_T_100, UInt<1>("h00")) @[POSIT.scala 248:31]
      when _T_101 : @[POSIT.scala 248:31]
        printf(clock, UInt<1>(1), "\t exec_idx: %d\n", init_idx) @[POSIT.scala 248:31]
        skip @[POSIT.scala 248:31]
      skip @[POSIT.scala 244:68]
    else : @[POSIT.scala 249:45]
      when new_result_valid : @[POSIT.scala 249:45]
        node _T_102 = asUInt(reset) @[POSIT.scala 250:31]
        node _T_103 = eq(_T_102, UInt<1>("h00")) @[POSIT.scala 250:31]
        when _T_103 : @[POSIT.scala 250:31]
          printf(clock, UInt<1>(1), "\t exec_valid: %d\n", UInt<1>("h00")) @[POSIT.scala 250:31]
          skip @[POSIT.scala 250:31]
        skip @[POSIT.scala 249:45]
    when new_result_valid : @[POSIT.scala 253:39]
      node _T_104 = asUInt(reset) @[POSIT.scala 254:31]
      node _T_105 = eq(_T_104, UInt<1>("h00")) @[POSIT.scala 254:31]
      when _T_105 : @[POSIT.scala 254:31]
        printf(clock, UInt<1>(1), "\tdispatched: %d\n", UInt<1>("h00")) @[POSIT.scala 254:31]
        skip @[POSIT.scala 254:31]
      skip @[POSIT.scala 253:39]
    else : @[POSIT.scala 255:39]
      when exec_valid : @[POSIT.scala 255:39]
        node _T_106 = asUInt(reset) @[POSIT.scala 256:31]
        node _T_107 = eq(_T_106, UInt<1>("h00")) @[POSIT.scala 256:31]
        when _T_107 : @[POSIT.scala 256:31]
          printf(clock, UInt<1>(1), "\tdispatched: %d\n", UInt<1>("h01")) @[POSIT.scala 256:31]
          skip @[POSIT.scala 256:31]
        skip @[POSIT.scala 255:39]
    when io.result.valid : @[POSIT.scala 259:38]
      node _T_108 = asUInt(reset) @[POSIT.scala 260:31]
      node _T_109 = eq(_T_108, UInt<1>("h00")) @[POSIT.scala 260:31]
      when _T_109 : @[POSIT.scala 260:31]
        printf(clock, UInt<1>(1), "valid idx: %d\n", io.out_idx) @[POSIT.scala 260:31]
        skip @[POSIT.scala 260:31]
      skip @[POSIT.scala 259:38]
    node _T_110 = neq(positGenerator.io.out, UInt<1>("h00")) @[common.scala 61:41]
    node _T_111 = not(_T_110) @[common.scala 61:33]
    node _T_112 = or(result_out.isZero, _T_111) @[POSIT.scala 265:52]
    io.result.bits.isZero <= _T_112 @[POSIT.scala 265:31]
    node _T_113 = bits(positGenerator.io.out, 31, 31) @[common.scala 27:43]
    node _T_114 = bits(positGenerator.io.out, 30, 0) @[common.scala 27:57]
    node _T_115 = neq(_T_114, UInt<1>("h00")) @[common.scala 27:71]
    node _T_116 = not(_T_115) @[common.scala 27:53]
    node _T_117 = and(_T_113, _T_116) @[common.scala 27:51]
    node _T_118 = or(result_out.isNaR, _T_117) @[POSIT.scala 266:52]
    io.result.bits.isNaR <= _T_118 @[POSIT.scala 266:31]
    io.result.bits.out <= positGenerator.io.out @[POSIT.scala 267:31]
    io.result.bits.lt <= result_lt @[POSIT.scala 268:27]
    io.result.bits.eq <= result_eq @[POSIT.scala 269:27]
    io.result.bits.gt <= result_gt @[POSIT.scala 270:27]
    io.result.bits.exceptions <= positDivSqrtCore.io.exceptions @[POSIT.scala 271:35]
    io.out_idx <= result_idx @[POSIT.scala 272:20]
    io.result.valid <= result_valid @[POSIT.scala 274:25]
    
  module DispatchArbiter : 
    input clock : Clock
    input reset : Reset
    output io : {flip validity : UInt<4>, flip priority : UInt<2>, chosen : UInt<2>, hasChosen : UInt<1>}
    
    wire afterPriority : UInt<1>[4] @[DispatchArbiter.scala 14:33]
    wire beforePriority : UInt<1>[4] @[DispatchArbiter.scala 15:34]
    node _T = geq(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_1 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 19:64]
    node _T_2 = mux(_T, _T_1, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[3] <= _T_2 @[DispatchArbiter.scala 18:34]
    node _T_3 = lt(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_4 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 21:63]
    node _T_5 = mux(_T_3, _T_4, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[3] <= _T_5 @[DispatchArbiter.scala 20:35]
    node _T_6 = geq(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_7 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 19:64]
    node _T_8 = mux(_T_6, _T_7, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[2] <= _T_8 @[DispatchArbiter.scala 18:34]
    node _T_9 = lt(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_10 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 21:63]
    node _T_11 = mux(_T_9, _T_10, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[2] <= _T_11 @[DispatchArbiter.scala 20:35]
    node _T_12 = geq(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_13 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 19:64]
    node _T_14 = mux(_T_12, _T_13, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[1] <= _T_14 @[DispatchArbiter.scala 18:34]
    node _T_15 = lt(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_16 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 21:63]
    node _T_17 = mux(_T_15, _T_16, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[1] <= _T_17 @[DispatchArbiter.scala 20:35]
    node _T_18 = geq(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_19 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 19:64]
    node _T_20 = mux(_T_18, _T_19, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[0] <= _T_20 @[DispatchArbiter.scala 18:34]
    node _T_21 = lt(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_22 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 21:63]
    node _T_23 = mux(_T_21, _T_22, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[0] <= _T_23 @[DispatchArbiter.scala 20:35]
    wire afterPriorityChosen : UInt<2> @[DispatchArbiter.scala 24:33]
    afterPriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 25:23]
    wire beforePriorityChosen : UInt<2> @[DispatchArbiter.scala 26:34]
    beforePriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 27:24]
    when afterPriority[2] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[2] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[1] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[1] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[0] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[0] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    node _T_24 = or(UInt<1>("h00"), afterPriority[0]) @[DispatchArbiter.scala 37:54]
    node _T_25 = or(_T_24, afterPriority[1]) @[DispatchArbiter.scala 37:54]
    node _T_26 = or(_T_25, afterPriority[2]) @[DispatchArbiter.scala 37:54]
    node afterPriorityExist = or(_T_26, afterPriority[3]) @[DispatchArbiter.scala 37:54]
    node _T_27 = or(UInt<1>("h00"), beforePriority[0]) @[DispatchArbiter.scala 38:56]
    node _T_28 = or(_T_27, beforePriority[1]) @[DispatchArbiter.scala 38:56]
    node _T_29 = or(_T_28, beforePriority[2]) @[DispatchArbiter.scala 38:56]
    node beforePriorityExist = or(_T_29, beforePriority[3]) @[DispatchArbiter.scala 38:56]
    node _T_30 = or(afterPriorityExist, beforePriorityExist) @[DispatchArbiter.scala 40:44]
    io.hasChosen <= _T_30 @[DispatchArbiter.scala 40:22]
    node _T_31 = mux(afterPriorityExist, afterPriorityChosen, beforePriorityChosen) @[DispatchArbiter.scala 41:25]
    io.chosen <= _T_31 @[DispatchArbiter.scala 41:19]
    
  module DispatchArbiter_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip validity : UInt<12>, flip priority : UInt<4>, chosen : UInt<4>, hasChosen : UInt<1>}
    
    wire afterPriority : UInt<1>[12] @[DispatchArbiter.scala 14:33]
    wire beforePriority : UInt<1>[12] @[DispatchArbiter.scala 15:34]
    node _T = geq(UInt<4>("h0b"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_1 = bits(io.validity, 11, 11) @[DispatchArbiter.scala 19:64]
    node _T_2 = mux(_T, _T_1, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[11] <= _T_2 @[DispatchArbiter.scala 18:34]
    node _T_3 = lt(UInt<4>("h0b"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_4 = bits(io.validity, 11, 11) @[DispatchArbiter.scala 21:63]
    node _T_5 = mux(_T_3, _T_4, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[11] <= _T_5 @[DispatchArbiter.scala 20:35]
    node _T_6 = geq(UInt<4>("h0a"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_7 = bits(io.validity, 10, 10) @[DispatchArbiter.scala 19:64]
    node _T_8 = mux(_T_6, _T_7, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[10] <= _T_8 @[DispatchArbiter.scala 18:34]
    node _T_9 = lt(UInt<4>("h0a"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_10 = bits(io.validity, 10, 10) @[DispatchArbiter.scala 21:63]
    node _T_11 = mux(_T_9, _T_10, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[10] <= _T_11 @[DispatchArbiter.scala 20:35]
    node _T_12 = geq(UInt<4>("h09"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_13 = bits(io.validity, 9, 9) @[DispatchArbiter.scala 19:64]
    node _T_14 = mux(_T_12, _T_13, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[9] <= _T_14 @[DispatchArbiter.scala 18:34]
    node _T_15 = lt(UInt<4>("h09"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_16 = bits(io.validity, 9, 9) @[DispatchArbiter.scala 21:63]
    node _T_17 = mux(_T_15, _T_16, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[9] <= _T_17 @[DispatchArbiter.scala 20:35]
    node _T_18 = geq(UInt<4>("h08"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_19 = bits(io.validity, 8, 8) @[DispatchArbiter.scala 19:64]
    node _T_20 = mux(_T_18, _T_19, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[8] <= _T_20 @[DispatchArbiter.scala 18:34]
    node _T_21 = lt(UInt<4>("h08"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_22 = bits(io.validity, 8, 8) @[DispatchArbiter.scala 21:63]
    node _T_23 = mux(_T_21, _T_22, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[8] <= _T_23 @[DispatchArbiter.scala 20:35]
    node _T_24 = geq(UInt<3>("h07"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_25 = bits(io.validity, 7, 7) @[DispatchArbiter.scala 19:64]
    node _T_26 = mux(_T_24, _T_25, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[7] <= _T_26 @[DispatchArbiter.scala 18:34]
    node _T_27 = lt(UInt<3>("h07"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_28 = bits(io.validity, 7, 7) @[DispatchArbiter.scala 21:63]
    node _T_29 = mux(_T_27, _T_28, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[7] <= _T_29 @[DispatchArbiter.scala 20:35]
    node _T_30 = geq(UInt<3>("h06"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_31 = bits(io.validity, 6, 6) @[DispatchArbiter.scala 19:64]
    node _T_32 = mux(_T_30, _T_31, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[6] <= _T_32 @[DispatchArbiter.scala 18:34]
    node _T_33 = lt(UInt<3>("h06"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_34 = bits(io.validity, 6, 6) @[DispatchArbiter.scala 21:63]
    node _T_35 = mux(_T_33, _T_34, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[6] <= _T_35 @[DispatchArbiter.scala 20:35]
    node _T_36 = geq(UInt<3>("h05"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_37 = bits(io.validity, 5, 5) @[DispatchArbiter.scala 19:64]
    node _T_38 = mux(_T_36, _T_37, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[5] <= _T_38 @[DispatchArbiter.scala 18:34]
    node _T_39 = lt(UInt<3>("h05"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_40 = bits(io.validity, 5, 5) @[DispatchArbiter.scala 21:63]
    node _T_41 = mux(_T_39, _T_40, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[5] <= _T_41 @[DispatchArbiter.scala 20:35]
    node _T_42 = geq(UInt<3>("h04"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_43 = bits(io.validity, 4, 4) @[DispatchArbiter.scala 19:64]
    node _T_44 = mux(_T_42, _T_43, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[4] <= _T_44 @[DispatchArbiter.scala 18:34]
    node _T_45 = lt(UInt<3>("h04"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_46 = bits(io.validity, 4, 4) @[DispatchArbiter.scala 21:63]
    node _T_47 = mux(_T_45, _T_46, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[4] <= _T_47 @[DispatchArbiter.scala 20:35]
    node _T_48 = geq(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_49 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 19:64]
    node _T_50 = mux(_T_48, _T_49, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[3] <= _T_50 @[DispatchArbiter.scala 18:34]
    node _T_51 = lt(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_52 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 21:63]
    node _T_53 = mux(_T_51, _T_52, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[3] <= _T_53 @[DispatchArbiter.scala 20:35]
    node _T_54 = geq(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_55 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 19:64]
    node _T_56 = mux(_T_54, _T_55, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[2] <= _T_56 @[DispatchArbiter.scala 18:34]
    node _T_57 = lt(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_58 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 21:63]
    node _T_59 = mux(_T_57, _T_58, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[2] <= _T_59 @[DispatchArbiter.scala 20:35]
    node _T_60 = geq(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_61 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 19:64]
    node _T_62 = mux(_T_60, _T_61, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[1] <= _T_62 @[DispatchArbiter.scala 18:34]
    node _T_63 = lt(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_64 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 21:63]
    node _T_65 = mux(_T_63, _T_64, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[1] <= _T_65 @[DispatchArbiter.scala 20:35]
    node _T_66 = geq(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_67 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 19:64]
    node _T_68 = mux(_T_66, _T_67, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[0] <= _T_68 @[DispatchArbiter.scala 18:34]
    node _T_69 = lt(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_70 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 21:63]
    node _T_71 = mux(_T_69, _T_70, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[0] <= _T_71 @[DispatchArbiter.scala 20:35]
    wire afterPriorityChosen : UInt<4> @[DispatchArbiter.scala 24:33]
    afterPriorityChosen <= UInt<4>("h0b") @[DispatchArbiter.scala 25:23]
    wire beforePriorityChosen : UInt<4> @[DispatchArbiter.scala 26:34]
    beforePriorityChosen <= UInt<4>("h0b") @[DispatchArbiter.scala 27:24]
    when afterPriority[10] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0a") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[10] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<4>("h0a") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[9] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h09") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[9] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<4>("h09") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[8] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h08") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[8] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<4>("h08") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[7] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h07") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[7] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<3>("h07") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[6] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h06") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[6] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<3>("h06") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[5] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h05") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[5] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<3>("h05") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[4] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h04") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[4] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<3>("h04") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[3] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[3] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[2] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[2] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[1] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[1] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[0] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[0] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    node _T_72 = or(UInt<1>("h00"), afterPriority[0]) @[DispatchArbiter.scala 37:54]
    node _T_73 = or(_T_72, afterPriority[1]) @[DispatchArbiter.scala 37:54]
    node _T_74 = or(_T_73, afterPriority[2]) @[DispatchArbiter.scala 37:54]
    node _T_75 = or(_T_74, afterPriority[3]) @[DispatchArbiter.scala 37:54]
    node _T_76 = or(_T_75, afterPriority[4]) @[DispatchArbiter.scala 37:54]
    node _T_77 = or(_T_76, afterPriority[5]) @[DispatchArbiter.scala 37:54]
    node _T_78 = or(_T_77, afterPriority[6]) @[DispatchArbiter.scala 37:54]
    node _T_79 = or(_T_78, afterPriority[7]) @[DispatchArbiter.scala 37:54]
    node _T_80 = or(_T_79, afterPriority[8]) @[DispatchArbiter.scala 37:54]
    node _T_81 = or(_T_80, afterPriority[9]) @[DispatchArbiter.scala 37:54]
    node _T_82 = or(_T_81, afterPriority[10]) @[DispatchArbiter.scala 37:54]
    node afterPriorityExist = or(_T_82, afterPriority[11]) @[DispatchArbiter.scala 37:54]
    node _T_83 = or(UInt<1>("h00"), beforePriority[0]) @[DispatchArbiter.scala 38:56]
    node _T_84 = or(_T_83, beforePriority[1]) @[DispatchArbiter.scala 38:56]
    node _T_85 = or(_T_84, beforePriority[2]) @[DispatchArbiter.scala 38:56]
    node _T_86 = or(_T_85, beforePriority[3]) @[DispatchArbiter.scala 38:56]
    node _T_87 = or(_T_86, beforePriority[4]) @[DispatchArbiter.scala 38:56]
    node _T_88 = or(_T_87, beforePriority[5]) @[DispatchArbiter.scala 38:56]
    node _T_89 = or(_T_88, beforePriority[6]) @[DispatchArbiter.scala 38:56]
    node _T_90 = or(_T_89, beforePriority[7]) @[DispatchArbiter.scala 38:56]
    node _T_91 = or(_T_90, beforePriority[8]) @[DispatchArbiter.scala 38:56]
    node _T_92 = or(_T_91, beforePriority[9]) @[DispatchArbiter.scala 38:56]
    node _T_93 = or(_T_92, beforePriority[10]) @[DispatchArbiter.scala 38:56]
    node beforePriorityExist = or(_T_93, beforePriority[11]) @[DispatchArbiter.scala 38:56]
    node _T_94 = or(afterPriorityExist, beforePriorityExist) @[DispatchArbiter.scala 40:44]
    io.hasChosen <= _T_94 @[DispatchArbiter.scala 40:22]
    node _T_95 = mux(afterPriorityExist, afterPriorityChosen, beforePriorityChosen) @[DispatchArbiter.scala 41:25]
    io.chosen <= _T_95 @[DispatchArbiter.scala 41:19]
    
  module POSIT_Locality : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {operands : {value : UInt<32>, mode : UInt<2>}[3], inst : UInt<3>, mode : UInt<2>, wr_addr : UInt<8>}}, mem_write : {flip ready : UInt<1>, valid : UInt<1>, bits : {result : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}, wr_addr : UInt<8>}}, mem_read : {req_valid : UInt<1>, req_addr : UInt<42>, req_tag : UInt<16>, flip data : UInt<512>, flip resp_valid : UInt<1>, flip resp_tag : UInt<14>}}
    
    inst pe of Posit @[POSIT_Locality.scala 12:24]
    pe.clock <= clock
    pe.reset <= reset
    wire _T : {entries : {operands : {value : UInt<32>, mode : UInt<2>}[3], completed : UInt<1>, valid : UInt<1>, dispatched : UInt<1>, written : UInt<1>, wr_addr : UInt<8>, request : {operands : {value : UInt<32>, mode : UInt<2>}[3], inst : UInt<3>, mode : UInt<2>, wr_addr : UInt<8>, inFetch : UInt<1>[3]}, result : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}}[4]} @[POSIT_Locality.scala 16:57]
    _T.entries[0].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].written <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].valid <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].completed <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].written <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].valid <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].completed <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].written <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].valid <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].completed <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].written <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].valid <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].completed <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    reg rb : {entries : {operands : {value : UInt<32>, mode : UInt<2>}[3], completed : UInt<1>, valid : UInt<1>, dispatched : UInt<1>, written : UInt<1>, wr_addr : UInt<8>, request : {operands : {value : UInt<32>, mode : UInt<2>}[3], inst : UInt<3>, mode : UInt<2>, wr_addr : UInt<8>, inFetch : UInt<1>[3]}, result : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}}[4]}, clock with : (reset => (reset, _T)) @[POSIT_Locality.scala 16:25]
    wire new_input_log : UInt<1> @[POSIT_Locality.scala 19:33]
    node _T_1 = bits(io.request.bits.wr_addr, 1, 0)
    node _T_2 = bits(io.request.bits.wr_addr, 1, 0)
    node _T_3 = eq(rb.entries[_T_2].valid, UInt<1>("h00")) @[POSIT_Locality.scala 21:80]
    node _T_4 = or(rb.entries[_T_1].written, _T_3) @[POSIT_Locality.scala 21:77]
    node _T_5 = and(io.request.valid, _T_4) @[POSIT_Locality.scala 21:43]
    new_input_log <= _T_5 @[POSIT_Locality.scala 21:23]
    node _T_6 = bits(io.request.bits.wr_addr, 1, 0)
    node _T_7 = bits(io.request.bits.wr_addr, 1, 0)
    node _T_8 = eq(rb.entries[_T_7].valid, UInt<1>("h00")) @[POSIT_Locality.scala 24:63]
    node _T_9 = or(rb.entries[_T_6].written, _T_8) @[POSIT_Locality.scala 24:59]
    io.request.ready <= _T_9 @[POSIT_Locality.scala 24:26]
    when new_input_log : @[POSIT_Locality.scala 25:28]
      node _T_10 = bits(reset, 0, 0) @[POSIT_Locality.scala 26:23]
      node _T_11 = eq(_T_10, UInt<1>("h00")) @[POSIT_Locality.scala 26:23]
      when _T_11 : @[POSIT_Locality.scala 26:23]
        printf(clock, UInt<1>(1), "written new entry\n") @[POSIT_Locality.scala 26:23]
        skip @[POSIT_Locality.scala 26:23]
      node _T_12 = bits(io.request.bits.wr_addr, 1, 0)
      rb.entries[_T_12].completed <= UInt<1>("h00") @[POSIT_Locality.scala 27:49]
      node _T_13 = bits(io.request.bits.wr_addr, 1, 0)
      rb.entries[_T_13].valid <= UInt<1>("h01") @[POSIT_Locality.scala 28:45]
      node _T_14 = bits(io.request.bits.wr_addr, 1, 0)
      rb.entries[_T_14].written <= UInt<1>("h00") @[POSIT_Locality.scala 29:47]
      node _T_15 = bits(io.request.bits.wr_addr, 1, 0)
      rb.entries[_T_15].wr_addr <= io.request.bits.wr_addr @[POSIT_Locality.scala 30:47]
      node _T_16 = bits(io.request.bits.wr_addr, 1, 0)
      rb.entries[_T_16].request.inst <= io.request.bits.inst @[POSIT_Locality.scala 31:52]
      node _T_17 = bits(io.request.bits.wr_addr, 1, 0)
      rb.entries[_T_17].request.mode <= io.request.bits.mode @[POSIT_Locality.scala 32:52]
      node _T_18 = bits(reset, 0, 0) @[POSIT_Locality.scala 34:31]
      node _T_19 = eq(_T_18, UInt<1>("h00")) @[POSIT_Locality.scala 34:31]
      when _T_19 : @[POSIT_Locality.scala 34:31]
        printf(clock, UInt<1>(1), "op%d: mode: %d value: %d\n", UInt<1>("h00"), io.request.bits.operands[0].mode, io.request.bits.operands[0].value) @[POSIT_Locality.scala 34:31]
        skip @[POSIT_Locality.scala 34:31]
      node _T_20 = bits(io.request.bits.wr_addr, 1, 0)
      rb.entries[_T_20].request.operands[0].value <= io.request.bits.operands[0].value @[POSIT_Locality.scala 35:73]
      node _T_21 = bits(io.request.bits.wr_addr, 1, 0)
      rb.entries[_T_21].request.operands[0].mode <= io.request.bits.operands[0].mode @[POSIT_Locality.scala 36:72]
      node _T_22 = bits(reset, 0, 0) @[POSIT_Locality.scala 34:31]
      node _T_23 = eq(_T_22, UInt<1>("h00")) @[POSIT_Locality.scala 34:31]
      when _T_23 : @[POSIT_Locality.scala 34:31]
        printf(clock, UInt<1>(1), "op%d: mode: %d value: %d\n", UInt<1>("h01"), io.request.bits.operands[1].mode, io.request.bits.operands[1].value) @[POSIT_Locality.scala 34:31]
        skip @[POSIT_Locality.scala 34:31]
      node _T_24 = bits(io.request.bits.wr_addr, 1, 0)
      rb.entries[_T_24].request.operands[1].value <= io.request.bits.operands[1].value @[POSIT_Locality.scala 35:73]
      node _T_25 = bits(io.request.bits.wr_addr, 1, 0)
      rb.entries[_T_25].request.operands[1].mode <= io.request.bits.operands[1].mode @[POSIT_Locality.scala 36:72]
      node _T_26 = bits(reset, 0, 0) @[POSIT_Locality.scala 34:31]
      node _T_27 = eq(_T_26, UInt<1>("h00")) @[POSIT_Locality.scala 34:31]
      when _T_27 : @[POSIT_Locality.scala 34:31]
        printf(clock, UInt<1>(1), "op%d: mode: %d value: %d\n", UInt<2>("h02"), io.request.bits.operands[2].mode, io.request.bits.operands[2].value) @[POSIT_Locality.scala 34:31]
        skip @[POSIT_Locality.scala 34:31]
      node _T_28 = bits(io.request.bits.wr_addr, 1, 0)
      rb.entries[_T_28].request.operands[2].value <= io.request.bits.operands[2].value @[POSIT_Locality.scala 35:73]
      node _T_29 = bits(io.request.bits.wr_addr, 1, 0)
      rb.entries[_T_29].request.operands[2].mode <= io.request.bits.operands[2].mode @[POSIT_Locality.scala 36:72]
      node _T_30 = bits(io.request.bits.wr_addr, 1, 0)
      wire _T_31 : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>} @[POSIT_Locality.scala 38:61]
      _T_31.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 38:61]
      _T_31.gt <= UInt<1>("h00") @[POSIT_Locality.scala 38:61]
      _T_31.eq <= UInt<1>("h00") @[POSIT_Locality.scala 38:61]
      _T_31.lt <= UInt<1>("h00") @[POSIT_Locality.scala 38:61]
      _T_31.out <= UInt<32>("h00") @[POSIT_Locality.scala 38:61]
      _T_31.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 38:61]
      _T_31.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 38:61]
      rb.entries[_T_30].result.exceptions <= _T_31.exceptions @[POSIT_Locality.scala 38:46]
      rb.entries[_T_30].result.gt <= _T_31.gt @[POSIT_Locality.scala 38:46]
      rb.entries[_T_30].result.eq <= _T_31.eq @[POSIT_Locality.scala 38:46]
      rb.entries[_T_30].result.lt <= _T_31.lt @[POSIT_Locality.scala 38:46]
      rb.entries[_T_30].result.out <= _T_31.out @[POSIT_Locality.scala 38:46]
      rb.entries[_T_30].result.isNaR <= _T_31.isNaR @[POSIT_Locality.scala 38:46]
      rb.entries[_T_30].result.isZero <= _T_31.isZero @[POSIT_Locality.scala 38:46]
      skip @[POSIT_Locality.scala 25:28]
    wire wbCountOn : UInt<1> @[POSIT_Locality.scala 43:29]
    reg value : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Counter.scala 29:33]
    wire _T_32 : UInt<1>
    _T_32 <= UInt<1>("h00")
    when wbCountOn : @[Counter.scala 67:17]
      node _T_33 = eq(value, UInt<2>("h03")) @[Counter.scala 38:24]
      node _T_34 = add(value, UInt<1>("h01")) @[Counter.scala 39:22]
      node _T_35 = tail(_T_34, 1) @[Counter.scala 39:22]
      value <= _T_35 @[Counter.scala 39:13]
      _T_32 <= _T_33 @[Counter.scala 67:24]
      skip @[Counter.scala 67:17]
    node _T_36 = and(io.mem_write.ready, rb.entries[value].completed) @[POSIT_Locality.scala 45:33]
    node _T_37 = not(rb.entries[value].written) @[POSIT_Locality.scala 45:72]
    node _T_38 = and(_T_36, _T_37) @[POSIT_Locality.scala 45:68]
    when _T_38 : @[POSIT_Locality.scala 45:104]
      wbCountOn <= UInt<1>("h01") @[POSIT_Locality.scala 46:27]
      rb.entries[value].written <= UInt<1>("h01") @[POSIT_Locality.scala 47:47]
      skip @[POSIT_Locality.scala 45:104]
    else : @[POSIT_Locality.scala 48:20]
      wbCountOn <= UInt<1>("h00") @[POSIT_Locality.scala 49:27]
      skip @[POSIT_Locality.scala 48:20]
    node _T_39 = not(rb.entries[value].written) @[POSIT_Locality.scala 53:67]
    node _T_40 = and(rb.entries[value].completed, _T_39) @[POSIT_Locality.scala 53:63]
    io.mem_write.valid <= _T_40 @[POSIT_Locality.scala 53:28]
    io.mem_write.bits.wr_addr <= rb.entries[value].wr_addr @[POSIT_Locality.scala 54:35]
    io.mem_write.bits.result.exceptions <= rb.entries[value].result.exceptions @[POSIT_Locality.scala 55:34]
    io.mem_write.bits.result.gt <= rb.entries[value].result.gt @[POSIT_Locality.scala 55:34]
    io.mem_write.bits.result.eq <= rb.entries[value].result.eq @[POSIT_Locality.scala 55:34]
    io.mem_write.bits.result.lt <= rb.entries[value].result.lt @[POSIT_Locality.scala 55:34]
    io.mem_write.bits.result.out <= rb.entries[value].result.out @[POSIT_Locality.scala 55:34]
    io.mem_write.bits.result.isNaR <= rb.entries[value].result.isNaR @[POSIT_Locality.scala 55:34]
    io.mem_write.bits.result.isZero <= rb.entries[value].result.isZero @[POSIT_Locality.scala 55:34]
    inst dispatchArb of DispatchArbiter @[POSIT_Locality.scala 59:33]
    dispatchArb.clock <= clock
    dispatchArb.reset <= reset
    wire opsValidVec : UInt<1>[4] @[POSIT_Locality.scala 64:31]
    wire singleOpValidVec : UInt<1>[12] @[POSIT_Locality.scala 65:36]
    node _T_41 = eq(rb.entries[0].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:52]
    singleOpValidVec[0] <= _T_41 @[POSIT_Locality.scala 68:49]
    node _T_42 = eq(rb.entries[0].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_43 = and(singleOpValidVec[0], _T_42) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[1] <= _T_43 @[POSIT_Locality.scala 70:58]
    node _T_44 = eq(rb.entries[0].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_45 = and(singleOpValidVec[1], _T_44) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[2] <= _T_45 @[POSIT_Locality.scala 70:58]
    opsValidVec[0] <= singleOpValidVec[2] @[POSIT_Locality.scala 72:32]
    node _T_46 = eq(rb.entries[1].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:52]
    singleOpValidVec[3] <= _T_46 @[POSIT_Locality.scala 68:49]
    node _T_47 = eq(rb.entries[1].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_48 = and(singleOpValidVec[3], _T_47) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[4] <= _T_48 @[POSIT_Locality.scala 70:58]
    node _T_49 = eq(rb.entries[1].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_50 = and(singleOpValidVec[4], _T_49) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[5] <= _T_50 @[POSIT_Locality.scala 70:58]
    opsValidVec[1] <= singleOpValidVec[5] @[POSIT_Locality.scala 72:32]
    node _T_51 = eq(rb.entries[2].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:52]
    singleOpValidVec[6] <= _T_51 @[POSIT_Locality.scala 68:49]
    node _T_52 = eq(rb.entries[2].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_53 = and(singleOpValidVec[6], _T_52) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[7] <= _T_53 @[POSIT_Locality.scala 70:58]
    node _T_54 = eq(rb.entries[2].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_55 = and(singleOpValidVec[7], _T_54) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[8] <= _T_55 @[POSIT_Locality.scala 70:58]
    opsValidVec[2] <= singleOpValidVec[8] @[POSIT_Locality.scala 72:32]
    node _T_56 = eq(rb.entries[3].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:52]
    singleOpValidVec[9] <= _T_56 @[POSIT_Locality.scala 68:49]
    node _T_57 = eq(rb.entries[3].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_58 = and(singleOpValidVec[9], _T_57) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[10] <= _T_58 @[POSIT_Locality.scala 70:58]
    node _T_59 = eq(rb.entries[3].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_60 = and(singleOpValidVec[10], _T_59) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[11] <= _T_60 @[POSIT_Locality.scala 70:58]
    opsValidVec[3] <= singleOpValidVec[11] @[POSIT_Locality.scala 72:32]
    wire waitingForDispatchVec : UInt<1>[4] @[POSIT_Locality.scala 74:41]
    node _T_61 = and(opsValidVec[0], rb.entries[0].valid) @[POSIT_Locality.scala 76:60]
    node _T_62 = eq(rb.entries[0].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 76:85]
    node _T_63 = and(_T_61, _T_62) @[POSIT_Locality.scala 76:82]
    waitingForDispatchVec[0] <= _T_63 @[POSIT_Locality.scala 76:42]
    node _T_64 = and(opsValidVec[1], rb.entries[1].valid) @[POSIT_Locality.scala 76:60]
    node _T_65 = eq(rb.entries[1].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 76:85]
    node _T_66 = and(_T_64, _T_65) @[POSIT_Locality.scala 76:82]
    waitingForDispatchVec[1] <= _T_66 @[POSIT_Locality.scala 76:42]
    node _T_67 = and(opsValidVec[2], rb.entries[2].valid) @[POSIT_Locality.scala 76:60]
    node _T_68 = eq(rb.entries[2].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 76:85]
    node _T_69 = and(_T_67, _T_68) @[POSIT_Locality.scala 76:82]
    waitingForDispatchVec[2] <= _T_69 @[POSIT_Locality.scala 76:42]
    node _T_70 = and(opsValidVec[3], rb.entries[3].valid) @[POSIT_Locality.scala 76:60]
    node _T_71 = eq(rb.entries[3].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 76:85]
    node _T_72 = and(_T_70, _T_71) @[POSIT_Locality.scala 76:82]
    waitingForDispatchVec[3] <= _T_72 @[POSIT_Locality.scala 76:42]
    node _T_73 = cat(waitingForDispatchVec[1], waitingForDispatchVec[0]) @[POSIT_Locality.scala 80:58]
    node _T_74 = cat(waitingForDispatchVec[3], waitingForDispatchVec[2]) @[POSIT_Locality.scala 80:58]
    node _T_75 = cat(_T_74, _T_73) @[POSIT_Locality.scala 80:58]
    dispatchArb.io.validity <= _T_75 @[POSIT_Locality.scala 80:33]
    dispatchArb.io.priority <= wbCountOn @[POSIT_Locality.scala 81:33]
    node _T_76 = eq(io.request.bits.wr_addr, UInt<1>("h00")) @[POSIT_Locality.scala 85:32]
    node _T_77 = and(_T_76, new_input_log) @[POSIT_Locality.scala 85:40]
    when _T_77 : @[POSIT_Locality.scala 85:57]
      rb.entries[0].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:57]
    else : @[POSIT_Locality.scala 87:28]
      node _T_78 = eq(dispatchArb.io.chosen, UInt<1>("h00")) @[POSIT_Locality.scala 88:89]
      node _T_79 = and(_T_78, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 88:102]
      node _T_80 = and(_T_79, pe.io.request.ready) @[POSIT_Locality.scala 88:130]
      node _T_81 = or(rb.entries[0].dispatched, _T_80) @[POSIT_Locality.scala 88:78]
      rb.entries[0].dispatched <= _T_81 @[POSIT_Locality.scala 88:50]
      skip @[POSIT_Locality.scala 87:28]
    node _T_82 = eq(io.request.bits.wr_addr, UInt<1>("h01")) @[POSIT_Locality.scala 85:32]
    node _T_83 = and(_T_82, new_input_log) @[POSIT_Locality.scala 85:40]
    when _T_83 : @[POSIT_Locality.scala 85:57]
      rb.entries[1].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:57]
    else : @[POSIT_Locality.scala 87:28]
      node _T_84 = eq(dispatchArb.io.chosen, UInt<1>("h01")) @[POSIT_Locality.scala 88:89]
      node _T_85 = and(_T_84, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 88:102]
      node _T_86 = and(_T_85, pe.io.request.ready) @[POSIT_Locality.scala 88:130]
      node _T_87 = or(rb.entries[1].dispatched, _T_86) @[POSIT_Locality.scala 88:78]
      rb.entries[1].dispatched <= _T_87 @[POSIT_Locality.scala 88:50]
      skip @[POSIT_Locality.scala 87:28]
    node _T_88 = eq(io.request.bits.wr_addr, UInt<2>("h02")) @[POSIT_Locality.scala 85:32]
    node _T_89 = and(_T_88, new_input_log) @[POSIT_Locality.scala 85:40]
    when _T_89 : @[POSIT_Locality.scala 85:57]
      rb.entries[2].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:57]
    else : @[POSIT_Locality.scala 87:28]
      node _T_90 = eq(dispatchArb.io.chosen, UInt<2>("h02")) @[POSIT_Locality.scala 88:89]
      node _T_91 = and(_T_90, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 88:102]
      node _T_92 = and(_T_91, pe.io.request.ready) @[POSIT_Locality.scala 88:130]
      node _T_93 = or(rb.entries[2].dispatched, _T_92) @[POSIT_Locality.scala 88:78]
      rb.entries[2].dispatched <= _T_93 @[POSIT_Locality.scala 88:50]
      skip @[POSIT_Locality.scala 87:28]
    node _T_94 = eq(io.request.bits.wr_addr, UInt<2>("h03")) @[POSIT_Locality.scala 85:32]
    node _T_95 = and(_T_94, new_input_log) @[POSIT_Locality.scala 85:40]
    when _T_95 : @[POSIT_Locality.scala 85:57]
      rb.entries[3].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:57]
    else : @[POSIT_Locality.scala 87:28]
      node _T_96 = eq(dispatchArb.io.chosen, UInt<2>("h03")) @[POSIT_Locality.scala 88:89]
      node _T_97 = and(_T_96, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 88:102]
      node _T_98 = and(_T_97, pe.io.request.ready) @[POSIT_Locality.scala 88:130]
      node _T_99 = or(rb.entries[3].dispatched, _T_98) @[POSIT_Locality.scala 88:78]
      rb.entries[3].dispatched <= _T_99 @[POSIT_Locality.scala 88:50]
      skip @[POSIT_Locality.scala 87:28]
    node _T_100 = and(dispatchArb.io.hasChosen, pe.io.request.ready) @[POSIT_Locality.scala 92:39]
    when _T_100 : @[POSIT_Locality.scala 92:61]
      pe.io.request.valid <= UInt<1>("h01") @[POSIT_Locality.scala 93:37]
      skip @[POSIT_Locality.scala 92:61]
    else : @[POSIT_Locality.scala 94:20]
      pe.io.request.valid <= UInt<1>("h00") @[POSIT_Locality.scala 95:37]
      skip @[POSIT_Locality.scala 94:20]
    pe.io.in_idx <= dispatchArb.io.chosen @[POSIT_Locality.scala 97:22]
    pe.io.result.ready <= io.mem_write.ready @[POSIT_Locality.scala 99:28]
    node _T_101 = bits(rb.entries[dispatchArb.io.chosen].request.operands[0].value, 31, 0) @[POSIT_Locality.scala 100:80]
    pe.io.request.bits.num1 <= _T_101 @[POSIT_Locality.scala 100:33]
    node _T_102 = bits(rb.entries[dispatchArb.io.chosen].request.operands[1].value, 31, 0) @[POSIT_Locality.scala 101:80]
    pe.io.request.bits.num2 <= _T_102 @[POSIT_Locality.scala 101:33]
    node _T_103 = bits(rb.entries[dispatchArb.io.chosen].request.operands[2].value, 31, 0) @[POSIT_Locality.scala 102:80]
    pe.io.request.bits.num3 <= _T_103 @[POSIT_Locality.scala 102:33]
    pe.io.request.bits.mode <= rb.entries[dispatchArb.io.chosen].request.mode @[POSIT_Locality.scala 103:33]
    pe.io.request.bits.inst <= rb.entries[dispatchArb.io.chosen].request.inst @[POSIT_Locality.scala 104:33]
    wire result_idx : UInt<2> @[POSIT_Locality.scala 106:30]
    result_idx <= pe.io.out_idx @[POSIT_Locality.scala 107:20]
    node _T_104 = and(pe.io.result.ready, pe.io.result.valid) @[POSIT_Locality.scala 108:33]
    when _T_104 : @[POSIT_Locality.scala 108:55]
      rb.entries[result_idx].result.exceptions <= pe.io.result.bits.exceptions @[POSIT_Locality.scala 109:47]
      rb.entries[result_idx].result.gt <= pe.io.result.bits.gt @[POSIT_Locality.scala 109:47]
      rb.entries[result_idx].result.eq <= pe.io.result.bits.eq @[POSIT_Locality.scala 109:47]
      rb.entries[result_idx].result.lt <= pe.io.result.bits.lt @[POSIT_Locality.scala 109:47]
      rb.entries[result_idx].result.out <= pe.io.result.bits.out @[POSIT_Locality.scala 109:47]
      rb.entries[result_idx].result.isNaR <= pe.io.result.bits.isNaR @[POSIT_Locality.scala 109:47]
      rb.entries[result_idx].result.isZero <= pe.io.result.bits.isZero @[POSIT_Locality.scala 109:47]
      rb.entries[result_idx].completed <= UInt<1>("h01") @[POSIT_Locality.scala 110:50]
      skip @[POSIT_Locality.scala 108:55]
    node _T_105 = eq(rb.entries[0].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_105 : @[POSIT_Locality.scala 116:77]
      node _T_106 = bits(rb.entries[0].request.operands[0].value, 1, 0)
      when rb.entries[_T_106].completed : @[POSIT_Locality.scala 117:100]
        node _T_107 = bits(rb.entries[0].request.operands[0].value, 1, 0)
        rb.entries[0].request.operands[0].value <= rb.entries[_T_107].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[0].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_108 = eq(rb.entries[0].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_108 : @[POSIT_Locality.scala 116:77]
      node _T_109 = bits(rb.entries[0].request.operands[1].value, 1, 0)
      when rb.entries[_T_109].completed : @[POSIT_Locality.scala 117:100]
        node _T_110 = bits(rb.entries[0].request.operands[1].value, 1, 0)
        rb.entries[0].request.operands[1].value <= rb.entries[_T_110].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[0].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_111 = eq(rb.entries[0].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_111 : @[POSIT_Locality.scala 116:77]
      node _T_112 = bits(rb.entries[0].request.operands[2].value, 1, 0)
      when rb.entries[_T_112].completed : @[POSIT_Locality.scala 117:100]
        node _T_113 = bits(rb.entries[0].request.operands[2].value, 1, 0)
        rb.entries[0].request.operands[2].value <= rb.entries[_T_113].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[0].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_114 = eq(rb.entries[1].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_114 : @[POSIT_Locality.scala 116:77]
      node _T_115 = bits(rb.entries[1].request.operands[0].value, 1, 0)
      when rb.entries[_T_115].completed : @[POSIT_Locality.scala 117:100]
        node _T_116 = bits(rb.entries[1].request.operands[0].value, 1, 0)
        rb.entries[1].request.operands[0].value <= rb.entries[_T_116].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[1].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_117 = eq(rb.entries[1].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_117 : @[POSIT_Locality.scala 116:77]
      node _T_118 = bits(rb.entries[1].request.operands[1].value, 1, 0)
      when rb.entries[_T_118].completed : @[POSIT_Locality.scala 117:100]
        node _T_119 = bits(rb.entries[1].request.operands[1].value, 1, 0)
        rb.entries[1].request.operands[1].value <= rb.entries[_T_119].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[1].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_120 = eq(rb.entries[1].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_120 : @[POSIT_Locality.scala 116:77]
      node _T_121 = bits(rb.entries[1].request.operands[2].value, 1, 0)
      when rb.entries[_T_121].completed : @[POSIT_Locality.scala 117:100]
        node _T_122 = bits(rb.entries[1].request.operands[2].value, 1, 0)
        rb.entries[1].request.operands[2].value <= rb.entries[_T_122].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[1].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_123 = eq(rb.entries[2].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_123 : @[POSIT_Locality.scala 116:77]
      node _T_124 = bits(rb.entries[2].request.operands[0].value, 1, 0)
      when rb.entries[_T_124].completed : @[POSIT_Locality.scala 117:100]
        node _T_125 = bits(rb.entries[2].request.operands[0].value, 1, 0)
        rb.entries[2].request.operands[0].value <= rb.entries[_T_125].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[2].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_126 = eq(rb.entries[2].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_126 : @[POSIT_Locality.scala 116:77]
      node _T_127 = bits(rb.entries[2].request.operands[1].value, 1, 0)
      when rb.entries[_T_127].completed : @[POSIT_Locality.scala 117:100]
        node _T_128 = bits(rb.entries[2].request.operands[1].value, 1, 0)
        rb.entries[2].request.operands[1].value <= rb.entries[_T_128].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[2].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_129 = eq(rb.entries[2].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_129 : @[POSIT_Locality.scala 116:77]
      node _T_130 = bits(rb.entries[2].request.operands[2].value, 1, 0)
      when rb.entries[_T_130].completed : @[POSIT_Locality.scala 117:100]
        node _T_131 = bits(rb.entries[2].request.operands[2].value, 1, 0)
        rb.entries[2].request.operands[2].value <= rb.entries[_T_131].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[2].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_132 = eq(rb.entries[3].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_132 : @[POSIT_Locality.scala 116:77]
      node _T_133 = bits(rb.entries[3].request.operands[0].value, 1, 0)
      when rb.entries[_T_133].completed : @[POSIT_Locality.scala 117:100]
        node _T_134 = bits(rb.entries[3].request.operands[0].value, 1, 0)
        rb.entries[3].request.operands[0].value <= rb.entries[_T_134].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[3].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_135 = eq(rb.entries[3].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_135 : @[POSIT_Locality.scala 116:77]
      node _T_136 = bits(rb.entries[3].request.operands[1].value, 1, 0)
      when rb.entries[_T_136].completed : @[POSIT_Locality.scala 117:100]
        node _T_137 = bits(rb.entries[3].request.operands[1].value, 1, 0)
        rb.entries[3].request.operands[1].value <= rb.entries[_T_137].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[3].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_138 = eq(rb.entries[3].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_138 : @[POSIT_Locality.scala 116:77]
      node _T_139 = bits(rb.entries[3].request.operands[2].value, 1, 0)
      when rb.entries[_T_139].completed : @[POSIT_Locality.scala 117:100]
        node _T_140 = bits(rb.entries[3].request.operands[2].value, 1, 0)
        rb.entries[3].request.operands[2].value <= rb.entries[_T_140].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[3].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    reg reg_infetch_cacheline : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[POSIT_Locality.scala 127:45]
    when io.mem_read.resp_valid : @[POSIT_Locality.scala 128:37]
      node _T_141 = bits(rb.entries[0].request.operands[0].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_142 = bits(rb.entries[0].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_143 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_144 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_145 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_146 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_147 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_148 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_149 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_150 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_151 = eq(UInt<3>("h07"), _T_142) @[Mux.scala 68:19]
      node _T_152 = mux(_T_151, _T_150, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_153 = eq(UInt<3>("h06"), _T_142) @[Mux.scala 68:19]
      node _T_154 = mux(_T_153, _T_149, _T_152) @[Mux.scala 68:16]
      node _T_155 = eq(UInt<3>("h05"), _T_142) @[Mux.scala 68:19]
      node _T_156 = mux(_T_155, _T_148, _T_154) @[Mux.scala 68:16]
      node _T_157 = eq(UInt<3>("h04"), _T_142) @[Mux.scala 68:19]
      node _T_158 = mux(_T_157, _T_147, _T_156) @[Mux.scala 68:16]
      node _T_159 = eq(UInt<2>("h03"), _T_142) @[Mux.scala 68:19]
      node _T_160 = mux(_T_159, _T_146, _T_158) @[Mux.scala 68:16]
      node _T_161 = eq(UInt<2>("h02"), _T_142) @[Mux.scala 68:19]
      node _T_162 = mux(_T_161, _T_145, _T_160) @[Mux.scala 68:16]
      node _T_163 = eq(UInt<1>("h01"), _T_142) @[Mux.scala 68:19]
      node _T_164 = mux(_T_163, _T_144, _T_162) @[Mux.scala 68:16]
      node _T_165 = eq(UInt<1>("h00"), _T_142) @[Mux.scala 68:19]
      node _T_166 = mux(_T_165, _T_143, _T_164) @[Mux.scala 68:16]
      node _T_167 = bits(rb.entries[0].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_168 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_169 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_170 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_171 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_172 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_173 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_174 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_175 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_176 = eq(UInt<3>("h07"), _T_167) @[Mux.scala 68:19]
      node _T_177 = mux(_T_176, _T_175, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_178 = eq(UInt<3>("h06"), _T_167) @[Mux.scala 68:19]
      node _T_179 = mux(_T_178, _T_174, _T_177) @[Mux.scala 68:16]
      node _T_180 = eq(UInt<3>("h05"), _T_167) @[Mux.scala 68:19]
      node _T_181 = mux(_T_180, _T_173, _T_179) @[Mux.scala 68:16]
      node _T_182 = eq(UInt<3>("h04"), _T_167) @[Mux.scala 68:19]
      node _T_183 = mux(_T_182, _T_172, _T_181) @[Mux.scala 68:16]
      node _T_184 = eq(UInt<2>("h03"), _T_167) @[Mux.scala 68:19]
      node _T_185 = mux(_T_184, _T_171, _T_183) @[Mux.scala 68:16]
      node _T_186 = eq(UInt<2>("h02"), _T_167) @[Mux.scala 68:19]
      node _T_187 = mux(_T_186, _T_170, _T_185) @[Mux.scala 68:16]
      node _T_188 = eq(UInt<1>("h01"), _T_167) @[Mux.scala 68:19]
      node _T_189 = mux(_T_188, _T_169, _T_187) @[Mux.scala 68:16]
      node _T_190 = eq(UInt<1>("h00"), _T_167) @[Mux.scala 68:19]
      node _T_191 = mux(_T_190, _T_168, _T_189) @[Mux.scala 68:16]
      node _T_192 = bits(rb.entries[0].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_193 = eq(_T_192, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_193 : @[POSIT_Locality.scala 136:88]
        node _T_194 = eq(_T_141, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_195 = eq(_T_166, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_196 = and(_T_194, _T_195) @[POSIT_Locality.scala 138:49]
        node _T_197 = bits(rb.entries[0].request.operands[0].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_198 = eq(_T_191, _T_197) @[POSIT_Locality.scala 139:59]
        node _T_199 = and(_T_196, _T_198) @[POSIT_Locality.scala 139:49]
        when _T_199 : @[POSIT_Locality.scala 139:106]
          node _T_200 = bits(rb.entries[0].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_201 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_202 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_203 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_204 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_205 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_206 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_207 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_208 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_209 = eq(UInt<3>("h07"), _T_200) @[Mux.scala 68:19]
          node _T_210 = mux(_T_209, _T_208, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_211 = eq(UInt<3>("h06"), _T_200) @[Mux.scala 68:19]
          node _T_212 = mux(_T_211, _T_207, _T_210) @[Mux.scala 68:16]
          node _T_213 = eq(UInt<3>("h05"), _T_200) @[Mux.scala 68:19]
          node _T_214 = mux(_T_213, _T_206, _T_212) @[Mux.scala 68:16]
          node _T_215 = eq(UInt<3>("h04"), _T_200) @[Mux.scala 68:19]
          node _T_216 = mux(_T_215, _T_205, _T_214) @[Mux.scala 68:16]
          node _T_217 = eq(UInt<2>("h03"), _T_200) @[Mux.scala 68:19]
          node _T_218 = mux(_T_217, _T_204, _T_216) @[Mux.scala 68:16]
          node _T_219 = eq(UInt<2>("h02"), _T_200) @[Mux.scala 68:19]
          node _T_220 = mux(_T_219, _T_203, _T_218) @[Mux.scala 68:16]
          node _T_221 = eq(UInt<1>("h01"), _T_200) @[Mux.scala 68:19]
          node _T_222 = mux(_T_221, _T_202, _T_220) @[Mux.scala 68:16]
          node _T_223 = eq(UInt<1>("h00"), _T_200) @[Mux.scala 68:19]
          node _T_224 = mux(_T_223, _T_201, _T_222) @[Mux.scala 68:16]
          rb.entries[0].request.operands[0].value <= _T_224 @[POSIT_Locality.scala 140:89]
          rb.entries[0].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_225 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_226 = eq(_T_225, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_226 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h00"), UInt<8>("h00")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_227 = bits(rb.entries[0].request.operands[1].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_228 = bits(rb.entries[0].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_229 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_230 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_231 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_232 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_233 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_234 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_235 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_236 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_237 = eq(UInt<3>("h07"), _T_228) @[Mux.scala 68:19]
      node _T_238 = mux(_T_237, _T_236, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_239 = eq(UInt<3>("h06"), _T_228) @[Mux.scala 68:19]
      node _T_240 = mux(_T_239, _T_235, _T_238) @[Mux.scala 68:16]
      node _T_241 = eq(UInt<3>("h05"), _T_228) @[Mux.scala 68:19]
      node _T_242 = mux(_T_241, _T_234, _T_240) @[Mux.scala 68:16]
      node _T_243 = eq(UInt<3>("h04"), _T_228) @[Mux.scala 68:19]
      node _T_244 = mux(_T_243, _T_233, _T_242) @[Mux.scala 68:16]
      node _T_245 = eq(UInt<2>("h03"), _T_228) @[Mux.scala 68:19]
      node _T_246 = mux(_T_245, _T_232, _T_244) @[Mux.scala 68:16]
      node _T_247 = eq(UInt<2>("h02"), _T_228) @[Mux.scala 68:19]
      node _T_248 = mux(_T_247, _T_231, _T_246) @[Mux.scala 68:16]
      node _T_249 = eq(UInt<1>("h01"), _T_228) @[Mux.scala 68:19]
      node _T_250 = mux(_T_249, _T_230, _T_248) @[Mux.scala 68:16]
      node _T_251 = eq(UInt<1>("h00"), _T_228) @[Mux.scala 68:19]
      node _T_252 = mux(_T_251, _T_229, _T_250) @[Mux.scala 68:16]
      node _T_253 = bits(rb.entries[0].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_254 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_255 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_256 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_257 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_258 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_259 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_260 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_261 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_262 = eq(UInt<3>("h07"), _T_253) @[Mux.scala 68:19]
      node _T_263 = mux(_T_262, _T_261, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_264 = eq(UInt<3>("h06"), _T_253) @[Mux.scala 68:19]
      node _T_265 = mux(_T_264, _T_260, _T_263) @[Mux.scala 68:16]
      node _T_266 = eq(UInt<3>("h05"), _T_253) @[Mux.scala 68:19]
      node _T_267 = mux(_T_266, _T_259, _T_265) @[Mux.scala 68:16]
      node _T_268 = eq(UInt<3>("h04"), _T_253) @[Mux.scala 68:19]
      node _T_269 = mux(_T_268, _T_258, _T_267) @[Mux.scala 68:16]
      node _T_270 = eq(UInt<2>("h03"), _T_253) @[Mux.scala 68:19]
      node _T_271 = mux(_T_270, _T_257, _T_269) @[Mux.scala 68:16]
      node _T_272 = eq(UInt<2>("h02"), _T_253) @[Mux.scala 68:19]
      node _T_273 = mux(_T_272, _T_256, _T_271) @[Mux.scala 68:16]
      node _T_274 = eq(UInt<1>("h01"), _T_253) @[Mux.scala 68:19]
      node _T_275 = mux(_T_274, _T_255, _T_273) @[Mux.scala 68:16]
      node _T_276 = eq(UInt<1>("h00"), _T_253) @[Mux.scala 68:19]
      node _T_277 = mux(_T_276, _T_254, _T_275) @[Mux.scala 68:16]
      node _T_278 = bits(rb.entries[0].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_279 = eq(_T_278, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_279 : @[POSIT_Locality.scala 136:88]
        node _T_280 = eq(_T_227, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_281 = eq(_T_252, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_282 = and(_T_280, _T_281) @[POSIT_Locality.scala 138:49]
        node _T_283 = bits(rb.entries[0].request.operands[1].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_284 = eq(_T_277, _T_283) @[POSIT_Locality.scala 139:59]
        node _T_285 = and(_T_282, _T_284) @[POSIT_Locality.scala 139:49]
        when _T_285 : @[POSIT_Locality.scala 139:106]
          node _T_286 = bits(rb.entries[0].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_287 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_288 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_289 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_290 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_291 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_292 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_293 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_294 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_295 = eq(UInt<3>("h07"), _T_286) @[Mux.scala 68:19]
          node _T_296 = mux(_T_295, _T_294, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_297 = eq(UInt<3>("h06"), _T_286) @[Mux.scala 68:19]
          node _T_298 = mux(_T_297, _T_293, _T_296) @[Mux.scala 68:16]
          node _T_299 = eq(UInt<3>("h05"), _T_286) @[Mux.scala 68:19]
          node _T_300 = mux(_T_299, _T_292, _T_298) @[Mux.scala 68:16]
          node _T_301 = eq(UInt<3>("h04"), _T_286) @[Mux.scala 68:19]
          node _T_302 = mux(_T_301, _T_291, _T_300) @[Mux.scala 68:16]
          node _T_303 = eq(UInt<2>("h03"), _T_286) @[Mux.scala 68:19]
          node _T_304 = mux(_T_303, _T_290, _T_302) @[Mux.scala 68:16]
          node _T_305 = eq(UInt<2>("h02"), _T_286) @[Mux.scala 68:19]
          node _T_306 = mux(_T_305, _T_289, _T_304) @[Mux.scala 68:16]
          node _T_307 = eq(UInt<1>("h01"), _T_286) @[Mux.scala 68:19]
          node _T_308 = mux(_T_307, _T_288, _T_306) @[Mux.scala 68:16]
          node _T_309 = eq(UInt<1>("h00"), _T_286) @[Mux.scala 68:19]
          node _T_310 = mux(_T_309, _T_287, _T_308) @[Mux.scala 68:16]
          rb.entries[0].request.operands[1].value <= _T_310 @[POSIT_Locality.scala 140:89]
          rb.entries[0].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_311 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_312 = eq(_T_311, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_312 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h00"), UInt<8>("h01")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_313 = bits(rb.entries[0].request.operands[2].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_314 = bits(rb.entries[0].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_315 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_316 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_317 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_318 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_319 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_320 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_321 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_322 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_323 = eq(UInt<3>("h07"), _T_314) @[Mux.scala 68:19]
      node _T_324 = mux(_T_323, _T_322, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_325 = eq(UInt<3>("h06"), _T_314) @[Mux.scala 68:19]
      node _T_326 = mux(_T_325, _T_321, _T_324) @[Mux.scala 68:16]
      node _T_327 = eq(UInt<3>("h05"), _T_314) @[Mux.scala 68:19]
      node _T_328 = mux(_T_327, _T_320, _T_326) @[Mux.scala 68:16]
      node _T_329 = eq(UInt<3>("h04"), _T_314) @[Mux.scala 68:19]
      node _T_330 = mux(_T_329, _T_319, _T_328) @[Mux.scala 68:16]
      node _T_331 = eq(UInt<2>("h03"), _T_314) @[Mux.scala 68:19]
      node _T_332 = mux(_T_331, _T_318, _T_330) @[Mux.scala 68:16]
      node _T_333 = eq(UInt<2>("h02"), _T_314) @[Mux.scala 68:19]
      node _T_334 = mux(_T_333, _T_317, _T_332) @[Mux.scala 68:16]
      node _T_335 = eq(UInt<1>("h01"), _T_314) @[Mux.scala 68:19]
      node _T_336 = mux(_T_335, _T_316, _T_334) @[Mux.scala 68:16]
      node _T_337 = eq(UInt<1>("h00"), _T_314) @[Mux.scala 68:19]
      node _T_338 = mux(_T_337, _T_315, _T_336) @[Mux.scala 68:16]
      node _T_339 = bits(rb.entries[0].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_340 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_341 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_342 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_343 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_344 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_345 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_346 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_347 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_348 = eq(UInt<3>("h07"), _T_339) @[Mux.scala 68:19]
      node _T_349 = mux(_T_348, _T_347, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_350 = eq(UInt<3>("h06"), _T_339) @[Mux.scala 68:19]
      node _T_351 = mux(_T_350, _T_346, _T_349) @[Mux.scala 68:16]
      node _T_352 = eq(UInt<3>("h05"), _T_339) @[Mux.scala 68:19]
      node _T_353 = mux(_T_352, _T_345, _T_351) @[Mux.scala 68:16]
      node _T_354 = eq(UInt<3>("h04"), _T_339) @[Mux.scala 68:19]
      node _T_355 = mux(_T_354, _T_344, _T_353) @[Mux.scala 68:16]
      node _T_356 = eq(UInt<2>("h03"), _T_339) @[Mux.scala 68:19]
      node _T_357 = mux(_T_356, _T_343, _T_355) @[Mux.scala 68:16]
      node _T_358 = eq(UInt<2>("h02"), _T_339) @[Mux.scala 68:19]
      node _T_359 = mux(_T_358, _T_342, _T_357) @[Mux.scala 68:16]
      node _T_360 = eq(UInt<1>("h01"), _T_339) @[Mux.scala 68:19]
      node _T_361 = mux(_T_360, _T_341, _T_359) @[Mux.scala 68:16]
      node _T_362 = eq(UInt<1>("h00"), _T_339) @[Mux.scala 68:19]
      node _T_363 = mux(_T_362, _T_340, _T_361) @[Mux.scala 68:16]
      node _T_364 = bits(rb.entries[0].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_365 = eq(_T_364, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_365 : @[POSIT_Locality.scala 136:88]
        node _T_366 = eq(_T_313, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_367 = eq(_T_338, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_368 = and(_T_366, _T_367) @[POSIT_Locality.scala 138:49]
        node _T_369 = bits(rb.entries[0].request.operands[2].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_370 = eq(_T_363, _T_369) @[POSIT_Locality.scala 139:59]
        node _T_371 = and(_T_368, _T_370) @[POSIT_Locality.scala 139:49]
        when _T_371 : @[POSIT_Locality.scala 139:106]
          node _T_372 = bits(rb.entries[0].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_373 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_374 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_375 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_376 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_377 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_378 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_379 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_380 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_381 = eq(UInt<3>("h07"), _T_372) @[Mux.scala 68:19]
          node _T_382 = mux(_T_381, _T_380, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_383 = eq(UInt<3>("h06"), _T_372) @[Mux.scala 68:19]
          node _T_384 = mux(_T_383, _T_379, _T_382) @[Mux.scala 68:16]
          node _T_385 = eq(UInt<3>("h05"), _T_372) @[Mux.scala 68:19]
          node _T_386 = mux(_T_385, _T_378, _T_384) @[Mux.scala 68:16]
          node _T_387 = eq(UInt<3>("h04"), _T_372) @[Mux.scala 68:19]
          node _T_388 = mux(_T_387, _T_377, _T_386) @[Mux.scala 68:16]
          node _T_389 = eq(UInt<2>("h03"), _T_372) @[Mux.scala 68:19]
          node _T_390 = mux(_T_389, _T_376, _T_388) @[Mux.scala 68:16]
          node _T_391 = eq(UInt<2>("h02"), _T_372) @[Mux.scala 68:19]
          node _T_392 = mux(_T_391, _T_375, _T_390) @[Mux.scala 68:16]
          node _T_393 = eq(UInt<1>("h01"), _T_372) @[Mux.scala 68:19]
          node _T_394 = mux(_T_393, _T_374, _T_392) @[Mux.scala 68:16]
          node _T_395 = eq(UInt<1>("h00"), _T_372) @[Mux.scala 68:19]
          node _T_396 = mux(_T_395, _T_373, _T_394) @[Mux.scala 68:16]
          rb.entries[0].request.operands[2].value <= _T_396 @[POSIT_Locality.scala 140:89]
          rb.entries[0].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_397 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_398 = eq(_T_397, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_398 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h00"), UInt<8>("h02")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_399 = bits(rb.entries[1].request.operands[0].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_400 = bits(rb.entries[1].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_401 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_402 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_403 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_404 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_405 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_406 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_407 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_408 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_409 = eq(UInt<3>("h07"), _T_400) @[Mux.scala 68:19]
      node _T_410 = mux(_T_409, _T_408, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_411 = eq(UInt<3>("h06"), _T_400) @[Mux.scala 68:19]
      node _T_412 = mux(_T_411, _T_407, _T_410) @[Mux.scala 68:16]
      node _T_413 = eq(UInt<3>("h05"), _T_400) @[Mux.scala 68:19]
      node _T_414 = mux(_T_413, _T_406, _T_412) @[Mux.scala 68:16]
      node _T_415 = eq(UInt<3>("h04"), _T_400) @[Mux.scala 68:19]
      node _T_416 = mux(_T_415, _T_405, _T_414) @[Mux.scala 68:16]
      node _T_417 = eq(UInt<2>("h03"), _T_400) @[Mux.scala 68:19]
      node _T_418 = mux(_T_417, _T_404, _T_416) @[Mux.scala 68:16]
      node _T_419 = eq(UInt<2>("h02"), _T_400) @[Mux.scala 68:19]
      node _T_420 = mux(_T_419, _T_403, _T_418) @[Mux.scala 68:16]
      node _T_421 = eq(UInt<1>("h01"), _T_400) @[Mux.scala 68:19]
      node _T_422 = mux(_T_421, _T_402, _T_420) @[Mux.scala 68:16]
      node _T_423 = eq(UInt<1>("h00"), _T_400) @[Mux.scala 68:19]
      node _T_424 = mux(_T_423, _T_401, _T_422) @[Mux.scala 68:16]
      node _T_425 = bits(rb.entries[1].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_426 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_427 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_428 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_429 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_430 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_431 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_432 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_433 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_434 = eq(UInt<3>("h07"), _T_425) @[Mux.scala 68:19]
      node _T_435 = mux(_T_434, _T_433, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_436 = eq(UInt<3>("h06"), _T_425) @[Mux.scala 68:19]
      node _T_437 = mux(_T_436, _T_432, _T_435) @[Mux.scala 68:16]
      node _T_438 = eq(UInt<3>("h05"), _T_425) @[Mux.scala 68:19]
      node _T_439 = mux(_T_438, _T_431, _T_437) @[Mux.scala 68:16]
      node _T_440 = eq(UInt<3>("h04"), _T_425) @[Mux.scala 68:19]
      node _T_441 = mux(_T_440, _T_430, _T_439) @[Mux.scala 68:16]
      node _T_442 = eq(UInt<2>("h03"), _T_425) @[Mux.scala 68:19]
      node _T_443 = mux(_T_442, _T_429, _T_441) @[Mux.scala 68:16]
      node _T_444 = eq(UInt<2>("h02"), _T_425) @[Mux.scala 68:19]
      node _T_445 = mux(_T_444, _T_428, _T_443) @[Mux.scala 68:16]
      node _T_446 = eq(UInt<1>("h01"), _T_425) @[Mux.scala 68:19]
      node _T_447 = mux(_T_446, _T_427, _T_445) @[Mux.scala 68:16]
      node _T_448 = eq(UInt<1>("h00"), _T_425) @[Mux.scala 68:19]
      node _T_449 = mux(_T_448, _T_426, _T_447) @[Mux.scala 68:16]
      node _T_450 = bits(rb.entries[1].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_451 = eq(_T_450, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_451 : @[POSIT_Locality.scala 136:88]
        node _T_452 = eq(_T_399, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_453 = eq(_T_424, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_454 = and(_T_452, _T_453) @[POSIT_Locality.scala 138:49]
        node _T_455 = bits(rb.entries[1].request.operands[0].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_456 = eq(_T_449, _T_455) @[POSIT_Locality.scala 139:59]
        node _T_457 = and(_T_454, _T_456) @[POSIT_Locality.scala 139:49]
        when _T_457 : @[POSIT_Locality.scala 139:106]
          node _T_458 = bits(rb.entries[1].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_459 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_460 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_461 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_462 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_463 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_464 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_465 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_466 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_467 = eq(UInt<3>("h07"), _T_458) @[Mux.scala 68:19]
          node _T_468 = mux(_T_467, _T_466, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_469 = eq(UInt<3>("h06"), _T_458) @[Mux.scala 68:19]
          node _T_470 = mux(_T_469, _T_465, _T_468) @[Mux.scala 68:16]
          node _T_471 = eq(UInt<3>("h05"), _T_458) @[Mux.scala 68:19]
          node _T_472 = mux(_T_471, _T_464, _T_470) @[Mux.scala 68:16]
          node _T_473 = eq(UInt<3>("h04"), _T_458) @[Mux.scala 68:19]
          node _T_474 = mux(_T_473, _T_463, _T_472) @[Mux.scala 68:16]
          node _T_475 = eq(UInt<2>("h03"), _T_458) @[Mux.scala 68:19]
          node _T_476 = mux(_T_475, _T_462, _T_474) @[Mux.scala 68:16]
          node _T_477 = eq(UInt<2>("h02"), _T_458) @[Mux.scala 68:19]
          node _T_478 = mux(_T_477, _T_461, _T_476) @[Mux.scala 68:16]
          node _T_479 = eq(UInt<1>("h01"), _T_458) @[Mux.scala 68:19]
          node _T_480 = mux(_T_479, _T_460, _T_478) @[Mux.scala 68:16]
          node _T_481 = eq(UInt<1>("h00"), _T_458) @[Mux.scala 68:19]
          node _T_482 = mux(_T_481, _T_459, _T_480) @[Mux.scala 68:16]
          rb.entries[1].request.operands[0].value <= _T_482 @[POSIT_Locality.scala 140:89]
          rb.entries[1].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_483 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_484 = eq(_T_483, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_484 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h01"), UInt<8>("h00")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_485 = bits(rb.entries[1].request.operands[1].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_486 = bits(rb.entries[1].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_487 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_488 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_489 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_490 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_491 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_492 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_493 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_494 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_495 = eq(UInt<3>("h07"), _T_486) @[Mux.scala 68:19]
      node _T_496 = mux(_T_495, _T_494, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_497 = eq(UInt<3>("h06"), _T_486) @[Mux.scala 68:19]
      node _T_498 = mux(_T_497, _T_493, _T_496) @[Mux.scala 68:16]
      node _T_499 = eq(UInt<3>("h05"), _T_486) @[Mux.scala 68:19]
      node _T_500 = mux(_T_499, _T_492, _T_498) @[Mux.scala 68:16]
      node _T_501 = eq(UInt<3>("h04"), _T_486) @[Mux.scala 68:19]
      node _T_502 = mux(_T_501, _T_491, _T_500) @[Mux.scala 68:16]
      node _T_503 = eq(UInt<2>("h03"), _T_486) @[Mux.scala 68:19]
      node _T_504 = mux(_T_503, _T_490, _T_502) @[Mux.scala 68:16]
      node _T_505 = eq(UInt<2>("h02"), _T_486) @[Mux.scala 68:19]
      node _T_506 = mux(_T_505, _T_489, _T_504) @[Mux.scala 68:16]
      node _T_507 = eq(UInt<1>("h01"), _T_486) @[Mux.scala 68:19]
      node _T_508 = mux(_T_507, _T_488, _T_506) @[Mux.scala 68:16]
      node _T_509 = eq(UInt<1>("h00"), _T_486) @[Mux.scala 68:19]
      node _T_510 = mux(_T_509, _T_487, _T_508) @[Mux.scala 68:16]
      node _T_511 = bits(rb.entries[1].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_512 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_513 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_514 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_515 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_516 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_517 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_518 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_519 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_520 = eq(UInt<3>("h07"), _T_511) @[Mux.scala 68:19]
      node _T_521 = mux(_T_520, _T_519, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_522 = eq(UInt<3>("h06"), _T_511) @[Mux.scala 68:19]
      node _T_523 = mux(_T_522, _T_518, _T_521) @[Mux.scala 68:16]
      node _T_524 = eq(UInt<3>("h05"), _T_511) @[Mux.scala 68:19]
      node _T_525 = mux(_T_524, _T_517, _T_523) @[Mux.scala 68:16]
      node _T_526 = eq(UInt<3>("h04"), _T_511) @[Mux.scala 68:19]
      node _T_527 = mux(_T_526, _T_516, _T_525) @[Mux.scala 68:16]
      node _T_528 = eq(UInt<2>("h03"), _T_511) @[Mux.scala 68:19]
      node _T_529 = mux(_T_528, _T_515, _T_527) @[Mux.scala 68:16]
      node _T_530 = eq(UInt<2>("h02"), _T_511) @[Mux.scala 68:19]
      node _T_531 = mux(_T_530, _T_514, _T_529) @[Mux.scala 68:16]
      node _T_532 = eq(UInt<1>("h01"), _T_511) @[Mux.scala 68:19]
      node _T_533 = mux(_T_532, _T_513, _T_531) @[Mux.scala 68:16]
      node _T_534 = eq(UInt<1>("h00"), _T_511) @[Mux.scala 68:19]
      node _T_535 = mux(_T_534, _T_512, _T_533) @[Mux.scala 68:16]
      node _T_536 = bits(rb.entries[1].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_537 = eq(_T_536, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_537 : @[POSIT_Locality.scala 136:88]
        node _T_538 = eq(_T_485, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_539 = eq(_T_510, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_540 = and(_T_538, _T_539) @[POSIT_Locality.scala 138:49]
        node _T_541 = bits(rb.entries[1].request.operands[1].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_542 = eq(_T_535, _T_541) @[POSIT_Locality.scala 139:59]
        node _T_543 = and(_T_540, _T_542) @[POSIT_Locality.scala 139:49]
        when _T_543 : @[POSIT_Locality.scala 139:106]
          node _T_544 = bits(rb.entries[1].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_545 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_546 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_547 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_548 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_549 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_550 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_551 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_552 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_553 = eq(UInt<3>("h07"), _T_544) @[Mux.scala 68:19]
          node _T_554 = mux(_T_553, _T_552, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_555 = eq(UInt<3>("h06"), _T_544) @[Mux.scala 68:19]
          node _T_556 = mux(_T_555, _T_551, _T_554) @[Mux.scala 68:16]
          node _T_557 = eq(UInt<3>("h05"), _T_544) @[Mux.scala 68:19]
          node _T_558 = mux(_T_557, _T_550, _T_556) @[Mux.scala 68:16]
          node _T_559 = eq(UInt<3>("h04"), _T_544) @[Mux.scala 68:19]
          node _T_560 = mux(_T_559, _T_549, _T_558) @[Mux.scala 68:16]
          node _T_561 = eq(UInt<2>("h03"), _T_544) @[Mux.scala 68:19]
          node _T_562 = mux(_T_561, _T_548, _T_560) @[Mux.scala 68:16]
          node _T_563 = eq(UInt<2>("h02"), _T_544) @[Mux.scala 68:19]
          node _T_564 = mux(_T_563, _T_547, _T_562) @[Mux.scala 68:16]
          node _T_565 = eq(UInt<1>("h01"), _T_544) @[Mux.scala 68:19]
          node _T_566 = mux(_T_565, _T_546, _T_564) @[Mux.scala 68:16]
          node _T_567 = eq(UInt<1>("h00"), _T_544) @[Mux.scala 68:19]
          node _T_568 = mux(_T_567, _T_545, _T_566) @[Mux.scala 68:16]
          rb.entries[1].request.operands[1].value <= _T_568 @[POSIT_Locality.scala 140:89]
          rb.entries[1].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_569 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_570 = eq(_T_569, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_570 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h01"), UInt<8>("h01")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_571 = bits(rb.entries[1].request.operands[2].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_572 = bits(rb.entries[1].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_573 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_574 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_575 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_576 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_577 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_578 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_579 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_580 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_581 = eq(UInt<3>("h07"), _T_572) @[Mux.scala 68:19]
      node _T_582 = mux(_T_581, _T_580, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_583 = eq(UInt<3>("h06"), _T_572) @[Mux.scala 68:19]
      node _T_584 = mux(_T_583, _T_579, _T_582) @[Mux.scala 68:16]
      node _T_585 = eq(UInt<3>("h05"), _T_572) @[Mux.scala 68:19]
      node _T_586 = mux(_T_585, _T_578, _T_584) @[Mux.scala 68:16]
      node _T_587 = eq(UInt<3>("h04"), _T_572) @[Mux.scala 68:19]
      node _T_588 = mux(_T_587, _T_577, _T_586) @[Mux.scala 68:16]
      node _T_589 = eq(UInt<2>("h03"), _T_572) @[Mux.scala 68:19]
      node _T_590 = mux(_T_589, _T_576, _T_588) @[Mux.scala 68:16]
      node _T_591 = eq(UInt<2>("h02"), _T_572) @[Mux.scala 68:19]
      node _T_592 = mux(_T_591, _T_575, _T_590) @[Mux.scala 68:16]
      node _T_593 = eq(UInt<1>("h01"), _T_572) @[Mux.scala 68:19]
      node _T_594 = mux(_T_593, _T_574, _T_592) @[Mux.scala 68:16]
      node _T_595 = eq(UInt<1>("h00"), _T_572) @[Mux.scala 68:19]
      node _T_596 = mux(_T_595, _T_573, _T_594) @[Mux.scala 68:16]
      node _T_597 = bits(rb.entries[1].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_598 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_599 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_600 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_601 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_602 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_603 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_604 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_605 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_606 = eq(UInt<3>("h07"), _T_597) @[Mux.scala 68:19]
      node _T_607 = mux(_T_606, _T_605, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_608 = eq(UInt<3>("h06"), _T_597) @[Mux.scala 68:19]
      node _T_609 = mux(_T_608, _T_604, _T_607) @[Mux.scala 68:16]
      node _T_610 = eq(UInt<3>("h05"), _T_597) @[Mux.scala 68:19]
      node _T_611 = mux(_T_610, _T_603, _T_609) @[Mux.scala 68:16]
      node _T_612 = eq(UInt<3>("h04"), _T_597) @[Mux.scala 68:19]
      node _T_613 = mux(_T_612, _T_602, _T_611) @[Mux.scala 68:16]
      node _T_614 = eq(UInt<2>("h03"), _T_597) @[Mux.scala 68:19]
      node _T_615 = mux(_T_614, _T_601, _T_613) @[Mux.scala 68:16]
      node _T_616 = eq(UInt<2>("h02"), _T_597) @[Mux.scala 68:19]
      node _T_617 = mux(_T_616, _T_600, _T_615) @[Mux.scala 68:16]
      node _T_618 = eq(UInt<1>("h01"), _T_597) @[Mux.scala 68:19]
      node _T_619 = mux(_T_618, _T_599, _T_617) @[Mux.scala 68:16]
      node _T_620 = eq(UInt<1>("h00"), _T_597) @[Mux.scala 68:19]
      node _T_621 = mux(_T_620, _T_598, _T_619) @[Mux.scala 68:16]
      node _T_622 = bits(rb.entries[1].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_623 = eq(_T_622, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_623 : @[POSIT_Locality.scala 136:88]
        node _T_624 = eq(_T_571, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_625 = eq(_T_596, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_626 = and(_T_624, _T_625) @[POSIT_Locality.scala 138:49]
        node _T_627 = bits(rb.entries[1].request.operands[2].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_628 = eq(_T_621, _T_627) @[POSIT_Locality.scala 139:59]
        node _T_629 = and(_T_626, _T_628) @[POSIT_Locality.scala 139:49]
        when _T_629 : @[POSIT_Locality.scala 139:106]
          node _T_630 = bits(rb.entries[1].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_631 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_632 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_633 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_634 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_635 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_636 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_637 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_638 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_639 = eq(UInt<3>("h07"), _T_630) @[Mux.scala 68:19]
          node _T_640 = mux(_T_639, _T_638, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_641 = eq(UInt<3>("h06"), _T_630) @[Mux.scala 68:19]
          node _T_642 = mux(_T_641, _T_637, _T_640) @[Mux.scala 68:16]
          node _T_643 = eq(UInt<3>("h05"), _T_630) @[Mux.scala 68:19]
          node _T_644 = mux(_T_643, _T_636, _T_642) @[Mux.scala 68:16]
          node _T_645 = eq(UInt<3>("h04"), _T_630) @[Mux.scala 68:19]
          node _T_646 = mux(_T_645, _T_635, _T_644) @[Mux.scala 68:16]
          node _T_647 = eq(UInt<2>("h03"), _T_630) @[Mux.scala 68:19]
          node _T_648 = mux(_T_647, _T_634, _T_646) @[Mux.scala 68:16]
          node _T_649 = eq(UInt<2>("h02"), _T_630) @[Mux.scala 68:19]
          node _T_650 = mux(_T_649, _T_633, _T_648) @[Mux.scala 68:16]
          node _T_651 = eq(UInt<1>("h01"), _T_630) @[Mux.scala 68:19]
          node _T_652 = mux(_T_651, _T_632, _T_650) @[Mux.scala 68:16]
          node _T_653 = eq(UInt<1>("h00"), _T_630) @[Mux.scala 68:19]
          node _T_654 = mux(_T_653, _T_631, _T_652) @[Mux.scala 68:16]
          rb.entries[1].request.operands[2].value <= _T_654 @[POSIT_Locality.scala 140:89]
          rb.entries[1].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_655 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_656 = eq(_T_655, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_656 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h01"), UInt<8>("h02")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_657 = bits(rb.entries[2].request.operands[0].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_658 = bits(rb.entries[2].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_659 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_660 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_661 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_662 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_663 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_664 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_665 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_666 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_667 = eq(UInt<3>("h07"), _T_658) @[Mux.scala 68:19]
      node _T_668 = mux(_T_667, _T_666, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_669 = eq(UInt<3>("h06"), _T_658) @[Mux.scala 68:19]
      node _T_670 = mux(_T_669, _T_665, _T_668) @[Mux.scala 68:16]
      node _T_671 = eq(UInt<3>("h05"), _T_658) @[Mux.scala 68:19]
      node _T_672 = mux(_T_671, _T_664, _T_670) @[Mux.scala 68:16]
      node _T_673 = eq(UInt<3>("h04"), _T_658) @[Mux.scala 68:19]
      node _T_674 = mux(_T_673, _T_663, _T_672) @[Mux.scala 68:16]
      node _T_675 = eq(UInt<2>("h03"), _T_658) @[Mux.scala 68:19]
      node _T_676 = mux(_T_675, _T_662, _T_674) @[Mux.scala 68:16]
      node _T_677 = eq(UInt<2>("h02"), _T_658) @[Mux.scala 68:19]
      node _T_678 = mux(_T_677, _T_661, _T_676) @[Mux.scala 68:16]
      node _T_679 = eq(UInt<1>("h01"), _T_658) @[Mux.scala 68:19]
      node _T_680 = mux(_T_679, _T_660, _T_678) @[Mux.scala 68:16]
      node _T_681 = eq(UInt<1>("h00"), _T_658) @[Mux.scala 68:19]
      node _T_682 = mux(_T_681, _T_659, _T_680) @[Mux.scala 68:16]
      node _T_683 = bits(rb.entries[2].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_684 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_685 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_686 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_687 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_688 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_689 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_690 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_691 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_692 = eq(UInt<3>("h07"), _T_683) @[Mux.scala 68:19]
      node _T_693 = mux(_T_692, _T_691, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_694 = eq(UInt<3>("h06"), _T_683) @[Mux.scala 68:19]
      node _T_695 = mux(_T_694, _T_690, _T_693) @[Mux.scala 68:16]
      node _T_696 = eq(UInt<3>("h05"), _T_683) @[Mux.scala 68:19]
      node _T_697 = mux(_T_696, _T_689, _T_695) @[Mux.scala 68:16]
      node _T_698 = eq(UInt<3>("h04"), _T_683) @[Mux.scala 68:19]
      node _T_699 = mux(_T_698, _T_688, _T_697) @[Mux.scala 68:16]
      node _T_700 = eq(UInt<2>("h03"), _T_683) @[Mux.scala 68:19]
      node _T_701 = mux(_T_700, _T_687, _T_699) @[Mux.scala 68:16]
      node _T_702 = eq(UInt<2>("h02"), _T_683) @[Mux.scala 68:19]
      node _T_703 = mux(_T_702, _T_686, _T_701) @[Mux.scala 68:16]
      node _T_704 = eq(UInt<1>("h01"), _T_683) @[Mux.scala 68:19]
      node _T_705 = mux(_T_704, _T_685, _T_703) @[Mux.scala 68:16]
      node _T_706 = eq(UInt<1>("h00"), _T_683) @[Mux.scala 68:19]
      node _T_707 = mux(_T_706, _T_684, _T_705) @[Mux.scala 68:16]
      node _T_708 = bits(rb.entries[2].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_709 = eq(_T_708, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_709 : @[POSIT_Locality.scala 136:88]
        node _T_710 = eq(_T_657, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_711 = eq(_T_682, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_712 = and(_T_710, _T_711) @[POSIT_Locality.scala 138:49]
        node _T_713 = bits(rb.entries[2].request.operands[0].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_714 = eq(_T_707, _T_713) @[POSIT_Locality.scala 139:59]
        node _T_715 = and(_T_712, _T_714) @[POSIT_Locality.scala 139:49]
        when _T_715 : @[POSIT_Locality.scala 139:106]
          node _T_716 = bits(rb.entries[2].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_717 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_718 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_719 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_720 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_721 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_722 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_723 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_724 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_725 = eq(UInt<3>("h07"), _T_716) @[Mux.scala 68:19]
          node _T_726 = mux(_T_725, _T_724, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_727 = eq(UInt<3>("h06"), _T_716) @[Mux.scala 68:19]
          node _T_728 = mux(_T_727, _T_723, _T_726) @[Mux.scala 68:16]
          node _T_729 = eq(UInt<3>("h05"), _T_716) @[Mux.scala 68:19]
          node _T_730 = mux(_T_729, _T_722, _T_728) @[Mux.scala 68:16]
          node _T_731 = eq(UInt<3>("h04"), _T_716) @[Mux.scala 68:19]
          node _T_732 = mux(_T_731, _T_721, _T_730) @[Mux.scala 68:16]
          node _T_733 = eq(UInt<2>("h03"), _T_716) @[Mux.scala 68:19]
          node _T_734 = mux(_T_733, _T_720, _T_732) @[Mux.scala 68:16]
          node _T_735 = eq(UInt<2>("h02"), _T_716) @[Mux.scala 68:19]
          node _T_736 = mux(_T_735, _T_719, _T_734) @[Mux.scala 68:16]
          node _T_737 = eq(UInt<1>("h01"), _T_716) @[Mux.scala 68:19]
          node _T_738 = mux(_T_737, _T_718, _T_736) @[Mux.scala 68:16]
          node _T_739 = eq(UInt<1>("h00"), _T_716) @[Mux.scala 68:19]
          node _T_740 = mux(_T_739, _T_717, _T_738) @[Mux.scala 68:16]
          rb.entries[2].request.operands[0].value <= _T_740 @[POSIT_Locality.scala 140:89]
          rb.entries[2].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_741 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_742 = eq(_T_741, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_742 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h02"), UInt<8>("h00")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_743 = bits(rb.entries[2].request.operands[1].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_744 = bits(rb.entries[2].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_745 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_746 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_747 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_748 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_749 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_750 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_751 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_752 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_753 = eq(UInt<3>("h07"), _T_744) @[Mux.scala 68:19]
      node _T_754 = mux(_T_753, _T_752, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_755 = eq(UInt<3>("h06"), _T_744) @[Mux.scala 68:19]
      node _T_756 = mux(_T_755, _T_751, _T_754) @[Mux.scala 68:16]
      node _T_757 = eq(UInt<3>("h05"), _T_744) @[Mux.scala 68:19]
      node _T_758 = mux(_T_757, _T_750, _T_756) @[Mux.scala 68:16]
      node _T_759 = eq(UInt<3>("h04"), _T_744) @[Mux.scala 68:19]
      node _T_760 = mux(_T_759, _T_749, _T_758) @[Mux.scala 68:16]
      node _T_761 = eq(UInt<2>("h03"), _T_744) @[Mux.scala 68:19]
      node _T_762 = mux(_T_761, _T_748, _T_760) @[Mux.scala 68:16]
      node _T_763 = eq(UInt<2>("h02"), _T_744) @[Mux.scala 68:19]
      node _T_764 = mux(_T_763, _T_747, _T_762) @[Mux.scala 68:16]
      node _T_765 = eq(UInt<1>("h01"), _T_744) @[Mux.scala 68:19]
      node _T_766 = mux(_T_765, _T_746, _T_764) @[Mux.scala 68:16]
      node _T_767 = eq(UInt<1>("h00"), _T_744) @[Mux.scala 68:19]
      node _T_768 = mux(_T_767, _T_745, _T_766) @[Mux.scala 68:16]
      node _T_769 = bits(rb.entries[2].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_770 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_771 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_772 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_773 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_774 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_775 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_776 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_777 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_778 = eq(UInt<3>("h07"), _T_769) @[Mux.scala 68:19]
      node _T_779 = mux(_T_778, _T_777, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_780 = eq(UInt<3>("h06"), _T_769) @[Mux.scala 68:19]
      node _T_781 = mux(_T_780, _T_776, _T_779) @[Mux.scala 68:16]
      node _T_782 = eq(UInt<3>("h05"), _T_769) @[Mux.scala 68:19]
      node _T_783 = mux(_T_782, _T_775, _T_781) @[Mux.scala 68:16]
      node _T_784 = eq(UInt<3>("h04"), _T_769) @[Mux.scala 68:19]
      node _T_785 = mux(_T_784, _T_774, _T_783) @[Mux.scala 68:16]
      node _T_786 = eq(UInt<2>("h03"), _T_769) @[Mux.scala 68:19]
      node _T_787 = mux(_T_786, _T_773, _T_785) @[Mux.scala 68:16]
      node _T_788 = eq(UInt<2>("h02"), _T_769) @[Mux.scala 68:19]
      node _T_789 = mux(_T_788, _T_772, _T_787) @[Mux.scala 68:16]
      node _T_790 = eq(UInt<1>("h01"), _T_769) @[Mux.scala 68:19]
      node _T_791 = mux(_T_790, _T_771, _T_789) @[Mux.scala 68:16]
      node _T_792 = eq(UInt<1>("h00"), _T_769) @[Mux.scala 68:19]
      node _T_793 = mux(_T_792, _T_770, _T_791) @[Mux.scala 68:16]
      node _T_794 = bits(rb.entries[2].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_795 = eq(_T_794, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_795 : @[POSIT_Locality.scala 136:88]
        node _T_796 = eq(_T_743, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_797 = eq(_T_768, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_798 = and(_T_796, _T_797) @[POSIT_Locality.scala 138:49]
        node _T_799 = bits(rb.entries[2].request.operands[1].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_800 = eq(_T_793, _T_799) @[POSIT_Locality.scala 139:59]
        node _T_801 = and(_T_798, _T_800) @[POSIT_Locality.scala 139:49]
        when _T_801 : @[POSIT_Locality.scala 139:106]
          node _T_802 = bits(rb.entries[2].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_803 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_804 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_805 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_806 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_807 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_808 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_809 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_810 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_811 = eq(UInt<3>("h07"), _T_802) @[Mux.scala 68:19]
          node _T_812 = mux(_T_811, _T_810, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_813 = eq(UInt<3>("h06"), _T_802) @[Mux.scala 68:19]
          node _T_814 = mux(_T_813, _T_809, _T_812) @[Mux.scala 68:16]
          node _T_815 = eq(UInt<3>("h05"), _T_802) @[Mux.scala 68:19]
          node _T_816 = mux(_T_815, _T_808, _T_814) @[Mux.scala 68:16]
          node _T_817 = eq(UInt<3>("h04"), _T_802) @[Mux.scala 68:19]
          node _T_818 = mux(_T_817, _T_807, _T_816) @[Mux.scala 68:16]
          node _T_819 = eq(UInt<2>("h03"), _T_802) @[Mux.scala 68:19]
          node _T_820 = mux(_T_819, _T_806, _T_818) @[Mux.scala 68:16]
          node _T_821 = eq(UInt<2>("h02"), _T_802) @[Mux.scala 68:19]
          node _T_822 = mux(_T_821, _T_805, _T_820) @[Mux.scala 68:16]
          node _T_823 = eq(UInt<1>("h01"), _T_802) @[Mux.scala 68:19]
          node _T_824 = mux(_T_823, _T_804, _T_822) @[Mux.scala 68:16]
          node _T_825 = eq(UInt<1>("h00"), _T_802) @[Mux.scala 68:19]
          node _T_826 = mux(_T_825, _T_803, _T_824) @[Mux.scala 68:16]
          rb.entries[2].request.operands[1].value <= _T_826 @[POSIT_Locality.scala 140:89]
          rb.entries[2].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_827 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_828 = eq(_T_827, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_828 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h02"), UInt<8>("h01")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_829 = bits(rb.entries[2].request.operands[2].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_830 = bits(rb.entries[2].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_831 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_832 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_833 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_834 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_835 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_836 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_837 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_838 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_839 = eq(UInt<3>("h07"), _T_830) @[Mux.scala 68:19]
      node _T_840 = mux(_T_839, _T_838, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_841 = eq(UInt<3>("h06"), _T_830) @[Mux.scala 68:19]
      node _T_842 = mux(_T_841, _T_837, _T_840) @[Mux.scala 68:16]
      node _T_843 = eq(UInt<3>("h05"), _T_830) @[Mux.scala 68:19]
      node _T_844 = mux(_T_843, _T_836, _T_842) @[Mux.scala 68:16]
      node _T_845 = eq(UInt<3>("h04"), _T_830) @[Mux.scala 68:19]
      node _T_846 = mux(_T_845, _T_835, _T_844) @[Mux.scala 68:16]
      node _T_847 = eq(UInt<2>("h03"), _T_830) @[Mux.scala 68:19]
      node _T_848 = mux(_T_847, _T_834, _T_846) @[Mux.scala 68:16]
      node _T_849 = eq(UInt<2>("h02"), _T_830) @[Mux.scala 68:19]
      node _T_850 = mux(_T_849, _T_833, _T_848) @[Mux.scala 68:16]
      node _T_851 = eq(UInt<1>("h01"), _T_830) @[Mux.scala 68:19]
      node _T_852 = mux(_T_851, _T_832, _T_850) @[Mux.scala 68:16]
      node _T_853 = eq(UInt<1>("h00"), _T_830) @[Mux.scala 68:19]
      node _T_854 = mux(_T_853, _T_831, _T_852) @[Mux.scala 68:16]
      node _T_855 = bits(rb.entries[2].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_856 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_857 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_858 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_859 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_860 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_861 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_862 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_863 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_864 = eq(UInt<3>("h07"), _T_855) @[Mux.scala 68:19]
      node _T_865 = mux(_T_864, _T_863, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_866 = eq(UInt<3>("h06"), _T_855) @[Mux.scala 68:19]
      node _T_867 = mux(_T_866, _T_862, _T_865) @[Mux.scala 68:16]
      node _T_868 = eq(UInt<3>("h05"), _T_855) @[Mux.scala 68:19]
      node _T_869 = mux(_T_868, _T_861, _T_867) @[Mux.scala 68:16]
      node _T_870 = eq(UInt<3>("h04"), _T_855) @[Mux.scala 68:19]
      node _T_871 = mux(_T_870, _T_860, _T_869) @[Mux.scala 68:16]
      node _T_872 = eq(UInt<2>("h03"), _T_855) @[Mux.scala 68:19]
      node _T_873 = mux(_T_872, _T_859, _T_871) @[Mux.scala 68:16]
      node _T_874 = eq(UInt<2>("h02"), _T_855) @[Mux.scala 68:19]
      node _T_875 = mux(_T_874, _T_858, _T_873) @[Mux.scala 68:16]
      node _T_876 = eq(UInt<1>("h01"), _T_855) @[Mux.scala 68:19]
      node _T_877 = mux(_T_876, _T_857, _T_875) @[Mux.scala 68:16]
      node _T_878 = eq(UInt<1>("h00"), _T_855) @[Mux.scala 68:19]
      node _T_879 = mux(_T_878, _T_856, _T_877) @[Mux.scala 68:16]
      node _T_880 = bits(rb.entries[2].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_881 = eq(_T_880, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_881 : @[POSIT_Locality.scala 136:88]
        node _T_882 = eq(_T_829, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_883 = eq(_T_854, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_884 = and(_T_882, _T_883) @[POSIT_Locality.scala 138:49]
        node _T_885 = bits(rb.entries[2].request.operands[2].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_886 = eq(_T_879, _T_885) @[POSIT_Locality.scala 139:59]
        node _T_887 = and(_T_884, _T_886) @[POSIT_Locality.scala 139:49]
        when _T_887 : @[POSIT_Locality.scala 139:106]
          node _T_888 = bits(rb.entries[2].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_889 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_890 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_891 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_892 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_893 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_894 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_895 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_896 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_897 = eq(UInt<3>("h07"), _T_888) @[Mux.scala 68:19]
          node _T_898 = mux(_T_897, _T_896, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_899 = eq(UInt<3>("h06"), _T_888) @[Mux.scala 68:19]
          node _T_900 = mux(_T_899, _T_895, _T_898) @[Mux.scala 68:16]
          node _T_901 = eq(UInt<3>("h05"), _T_888) @[Mux.scala 68:19]
          node _T_902 = mux(_T_901, _T_894, _T_900) @[Mux.scala 68:16]
          node _T_903 = eq(UInt<3>("h04"), _T_888) @[Mux.scala 68:19]
          node _T_904 = mux(_T_903, _T_893, _T_902) @[Mux.scala 68:16]
          node _T_905 = eq(UInt<2>("h03"), _T_888) @[Mux.scala 68:19]
          node _T_906 = mux(_T_905, _T_892, _T_904) @[Mux.scala 68:16]
          node _T_907 = eq(UInt<2>("h02"), _T_888) @[Mux.scala 68:19]
          node _T_908 = mux(_T_907, _T_891, _T_906) @[Mux.scala 68:16]
          node _T_909 = eq(UInt<1>("h01"), _T_888) @[Mux.scala 68:19]
          node _T_910 = mux(_T_909, _T_890, _T_908) @[Mux.scala 68:16]
          node _T_911 = eq(UInt<1>("h00"), _T_888) @[Mux.scala 68:19]
          node _T_912 = mux(_T_911, _T_889, _T_910) @[Mux.scala 68:16]
          rb.entries[2].request.operands[2].value <= _T_912 @[POSIT_Locality.scala 140:89]
          rb.entries[2].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_913 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_914 = eq(_T_913, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_914 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h02"), UInt<8>("h02")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_915 = bits(rb.entries[3].request.operands[0].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_916 = bits(rb.entries[3].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_917 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_918 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_919 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_920 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_921 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_922 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_923 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_924 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_925 = eq(UInt<3>("h07"), _T_916) @[Mux.scala 68:19]
      node _T_926 = mux(_T_925, _T_924, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_927 = eq(UInt<3>("h06"), _T_916) @[Mux.scala 68:19]
      node _T_928 = mux(_T_927, _T_923, _T_926) @[Mux.scala 68:16]
      node _T_929 = eq(UInt<3>("h05"), _T_916) @[Mux.scala 68:19]
      node _T_930 = mux(_T_929, _T_922, _T_928) @[Mux.scala 68:16]
      node _T_931 = eq(UInt<3>("h04"), _T_916) @[Mux.scala 68:19]
      node _T_932 = mux(_T_931, _T_921, _T_930) @[Mux.scala 68:16]
      node _T_933 = eq(UInt<2>("h03"), _T_916) @[Mux.scala 68:19]
      node _T_934 = mux(_T_933, _T_920, _T_932) @[Mux.scala 68:16]
      node _T_935 = eq(UInt<2>("h02"), _T_916) @[Mux.scala 68:19]
      node _T_936 = mux(_T_935, _T_919, _T_934) @[Mux.scala 68:16]
      node _T_937 = eq(UInt<1>("h01"), _T_916) @[Mux.scala 68:19]
      node _T_938 = mux(_T_937, _T_918, _T_936) @[Mux.scala 68:16]
      node _T_939 = eq(UInt<1>("h00"), _T_916) @[Mux.scala 68:19]
      node _T_940 = mux(_T_939, _T_917, _T_938) @[Mux.scala 68:16]
      node _T_941 = bits(rb.entries[3].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_942 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_943 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_944 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_945 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_946 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_947 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_948 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_949 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_950 = eq(UInt<3>("h07"), _T_941) @[Mux.scala 68:19]
      node _T_951 = mux(_T_950, _T_949, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_952 = eq(UInt<3>("h06"), _T_941) @[Mux.scala 68:19]
      node _T_953 = mux(_T_952, _T_948, _T_951) @[Mux.scala 68:16]
      node _T_954 = eq(UInt<3>("h05"), _T_941) @[Mux.scala 68:19]
      node _T_955 = mux(_T_954, _T_947, _T_953) @[Mux.scala 68:16]
      node _T_956 = eq(UInt<3>("h04"), _T_941) @[Mux.scala 68:19]
      node _T_957 = mux(_T_956, _T_946, _T_955) @[Mux.scala 68:16]
      node _T_958 = eq(UInt<2>("h03"), _T_941) @[Mux.scala 68:19]
      node _T_959 = mux(_T_958, _T_945, _T_957) @[Mux.scala 68:16]
      node _T_960 = eq(UInt<2>("h02"), _T_941) @[Mux.scala 68:19]
      node _T_961 = mux(_T_960, _T_944, _T_959) @[Mux.scala 68:16]
      node _T_962 = eq(UInt<1>("h01"), _T_941) @[Mux.scala 68:19]
      node _T_963 = mux(_T_962, _T_943, _T_961) @[Mux.scala 68:16]
      node _T_964 = eq(UInt<1>("h00"), _T_941) @[Mux.scala 68:19]
      node _T_965 = mux(_T_964, _T_942, _T_963) @[Mux.scala 68:16]
      node _T_966 = bits(rb.entries[3].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_967 = eq(_T_966, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_967 : @[POSIT_Locality.scala 136:88]
        node _T_968 = eq(_T_915, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_969 = eq(_T_940, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_970 = and(_T_968, _T_969) @[POSIT_Locality.scala 138:49]
        node _T_971 = bits(rb.entries[3].request.operands[0].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_972 = eq(_T_965, _T_971) @[POSIT_Locality.scala 139:59]
        node _T_973 = and(_T_970, _T_972) @[POSIT_Locality.scala 139:49]
        when _T_973 : @[POSIT_Locality.scala 139:106]
          node _T_974 = bits(rb.entries[3].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_975 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_976 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_977 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_978 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_979 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_980 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_981 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_982 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_983 = eq(UInt<3>("h07"), _T_974) @[Mux.scala 68:19]
          node _T_984 = mux(_T_983, _T_982, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_985 = eq(UInt<3>("h06"), _T_974) @[Mux.scala 68:19]
          node _T_986 = mux(_T_985, _T_981, _T_984) @[Mux.scala 68:16]
          node _T_987 = eq(UInt<3>("h05"), _T_974) @[Mux.scala 68:19]
          node _T_988 = mux(_T_987, _T_980, _T_986) @[Mux.scala 68:16]
          node _T_989 = eq(UInt<3>("h04"), _T_974) @[Mux.scala 68:19]
          node _T_990 = mux(_T_989, _T_979, _T_988) @[Mux.scala 68:16]
          node _T_991 = eq(UInt<2>("h03"), _T_974) @[Mux.scala 68:19]
          node _T_992 = mux(_T_991, _T_978, _T_990) @[Mux.scala 68:16]
          node _T_993 = eq(UInt<2>("h02"), _T_974) @[Mux.scala 68:19]
          node _T_994 = mux(_T_993, _T_977, _T_992) @[Mux.scala 68:16]
          node _T_995 = eq(UInt<1>("h01"), _T_974) @[Mux.scala 68:19]
          node _T_996 = mux(_T_995, _T_976, _T_994) @[Mux.scala 68:16]
          node _T_997 = eq(UInt<1>("h00"), _T_974) @[Mux.scala 68:19]
          node _T_998 = mux(_T_997, _T_975, _T_996) @[Mux.scala 68:16]
          rb.entries[3].request.operands[0].value <= _T_998 @[POSIT_Locality.scala 140:89]
          rb.entries[3].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_999 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1000 = eq(_T_999, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1000 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h03"), UInt<8>("h00")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_1001 = bits(rb.entries[3].request.operands[1].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_1002 = bits(rb.entries[3].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_1003 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_1004 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_1005 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_1006 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_1007 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_1008 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_1009 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_1010 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_1011 = eq(UInt<3>("h07"), _T_1002) @[Mux.scala 68:19]
      node _T_1012 = mux(_T_1011, _T_1010, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1013 = eq(UInt<3>("h06"), _T_1002) @[Mux.scala 68:19]
      node _T_1014 = mux(_T_1013, _T_1009, _T_1012) @[Mux.scala 68:16]
      node _T_1015 = eq(UInt<3>("h05"), _T_1002) @[Mux.scala 68:19]
      node _T_1016 = mux(_T_1015, _T_1008, _T_1014) @[Mux.scala 68:16]
      node _T_1017 = eq(UInt<3>("h04"), _T_1002) @[Mux.scala 68:19]
      node _T_1018 = mux(_T_1017, _T_1007, _T_1016) @[Mux.scala 68:16]
      node _T_1019 = eq(UInt<2>("h03"), _T_1002) @[Mux.scala 68:19]
      node _T_1020 = mux(_T_1019, _T_1006, _T_1018) @[Mux.scala 68:16]
      node _T_1021 = eq(UInt<2>("h02"), _T_1002) @[Mux.scala 68:19]
      node _T_1022 = mux(_T_1021, _T_1005, _T_1020) @[Mux.scala 68:16]
      node _T_1023 = eq(UInt<1>("h01"), _T_1002) @[Mux.scala 68:19]
      node _T_1024 = mux(_T_1023, _T_1004, _T_1022) @[Mux.scala 68:16]
      node _T_1025 = eq(UInt<1>("h00"), _T_1002) @[Mux.scala 68:19]
      node _T_1026 = mux(_T_1025, _T_1003, _T_1024) @[Mux.scala 68:16]
      node _T_1027 = bits(rb.entries[3].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_1028 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_1029 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_1030 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_1031 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_1032 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_1033 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_1034 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_1035 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_1036 = eq(UInt<3>("h07"), _T_1027) @[Mux.scala 68:19]
      node _T_1037 = mux(_T_1036, _T_1035, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1038 = eq(UInt<3>("h06"), _T_1027) @[Mux.scala 68:19]
      node _T_1039 = mux(_T_1038, _T_1034, _T_1037) @[Mux.scala 68:16]
      node _T_1040 = eq(UInt<3>("h05"), _T_1027) @[Mux.scala 68:19]
      node _T_1041 = mux(_T_1040, _T_1033, _T_1039) @[Mux.scala 68:16]
      node _T_1042 = eq(UInt<3>("h04"), _T_1027) @[Mux.scala 68:19]
      node _T_1043 = mux(_T_1042, _T_1032, _T_1041) @[Mux.scala 68:16]
      node _T_1044 = eq(UInt<2>("h03"), _T_1027) @[Mux.scala 68:19]
      node _T_1045 = mux(_T_1044, _T_1031, _T_1043) @[Mux.scala 68:16]
      node _T_1046 = eq(UInt<2>("h02"), _T_1027) @[Mux.scala 68:19]
      node _T_1047 = mux(_T_1046, _T_1030, _T_1045) @[Mux.scala 68:16]
      node _T_1048 = eq(UInt<1>("h01"), _T_1027) @[Mux.scala 68:19]
      node _T_1049 = mux(_T_1048, _T_1029, _T_1047) @[Mux.scala 68:16]
      node _T_1050 = eq(UInt<1>("h00"), _T_1027) @[Mux.scala 68:19]
      node _T_1051 = mux(_T_1050, _T_1028, _T_1049) @[Mux.scala 68:16]
      node _T_1052 = bits(rb.entries[3].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_1053 = eq(_T_1052, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_1053 : @[POSIT_Locality.scala 136:88]
        node _T_1054 = eq(_T_1001, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_1055 = eq(_T_1026, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_1056 = and(_T_1054, _T_1055) @[POSIT_Locality.scala 138:49]
        node _T_1057 = bits(rb.entries[3].request.operands[1].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_1058 = eq(_T_1051, _T_1057) @[POSIT_Locality.scala 139:59]
        node _T_1059 = and(_T_1056, _T_1058) @[POSIT_Locality.scala 139:49]
        when _T_1059 : @[POSIT_Locality.scala 139:106]
          node _T_1060 = bits(rb.entries[3].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_1061 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_1062 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_1063 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_1064 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_1065 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_1066 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_1067 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_1068 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_1069 = eq(UInt<3>("h07"), _T_1060) @[Mux.scala 68:19]
          node _T_1070 = mux(_T_1069, _T_1068, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_1071 = eq(UInt<3>("h06"), _T_1060) @[Mux.scala 68:19]
          node _T_1072 = mux(_T_1071, _T_1067, _T_1070) @[Mux.scala 68:16]
          node _T_1073 = eq(UInt<3>("h05"), _T_1060) @[Mux.scala 68:19]
          node _T_1074 = mux(_T_1073, _T_1066, _T_1072) @[Mux.scala 68:16]
          node _T_1075 = eq(UInt<3>("h04"), _T_1060) @[Mux.scala 68:19]
          node _T_1076 = mux(_T_1075, _T_1065, _T_1074) @[Mux.scala 68:16]
          node _T_1077 = eq(UInt<2>("h03"), _T_1060) @[Mux.scala 68:19]
          node _T_1078 = mux(_T_1077, _T_1064, _T_1076) @[Mux.scala 68:16]
          node _T_1079 = eq(UInt<2>("h02"), _T_1060) @[Mux.scala 68:19]
          node _T_1080 = mux(_T_1079, _T_1063, _T_1078) @[Mux.scala 68:16]
          node _T_1081 = eq(UInt<1>("h01"), _T_1060) @[Mux.scala 68:19]
          node _T_1082 = mux(_T_1081, _T_1062, _T_1080) @[Mux.scala 68:16]
          node _T_1083 = eq(UInt<1>("h00"), _T_1060) @[Mux.scala 68:19]
          node _T_1084 = mux(_T_1083, _T_1061, _T_1082) @[Mux.scala 68:16]
          rb.entries[3].request.operands[1].value <= _T_1084 @[POSIT_Locality.scala 140:89]
          rb.entries[3].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_1085 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1086 = eq(_T_1085, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1086 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h03"), UInt<8>("h01")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_1087 = bits(rb.entries[3].request.operands[2].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_1088 = bits(rb.entries[3].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_1089 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_1090 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_1091 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_1092 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_1093 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_1094 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_1095 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_1096 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_1097 = eq(UInt<3>("h07"), _T_1088) @[Mux.scala 68:19]
      node _T_1098 = mux(_T_1097, _T_1096, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1099 = eq(UInt<3>("h06"), _T_1088) @[Mux.scala 68:19]
      node _T_1100 = mux(_T_1099, _T_1095, _T_1098) @[Mux.scala 68:16]
      node _T_1101 = eq(UInt<3>("h05"), _T_1088) @[Mux.scala 68:19]
      node _T_1102 = mux(_T_1101, _T_1094, _T_1100) @[Mux.scala 68:16]
      node _T_1103 = eq(UInt<3>("h04"), _T_1088) @[Mux.scala 68:19]
      node _T_1104 = mux(_T_1103, _T_1093, _T_1102) @[Mux.scala 68:16]
      node _T_1105 = eq(UInt<2>("h03"), _T_1088) @[Mux.scala 68:19]
      node _T_1106 = mux(_T_1105, _T_1092, _T_1104) @[Mux.scala 68:16]
      node _T_1107 = eq(UInt<2>("h02"), _T_1088) @[Mux.scala 68:19]
      node _T_1108 = mux(_T_1107, _T_1091, _T_1106) @[Mux.scala 68:16]
      node _T_1109 = eq(UInt<1>("h01"), _T_1088) @[Mux.scala 68:19]
      node _T_1110 = mux(_T_1109, _T_1090, _T_1108) @[Mux.scala 68:16]
      node _T_1111 = eq(UInt<1>("h00"), _T_1088) @[Mux.scala 68:19]
      node _T_1112 = mux(_T_1111, _T_1089, _T_1110) @[Mux.scala 68:16]
      node _T_1113 = bits(rb.entries[3].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_1114 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_1115 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_1116 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_1117 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_1118 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_1119 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_1120 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_1121 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_1122 = eq(UInt<3>("h07"), _T_1113) @[Mux.scala 68:19]
      node _T_1123 = mux(_T_1122, _T_1121, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1124 = eq(UInt<3>("h06"), _T_1113) @[Mux.scala 68:19]
      node _T_1125 = mux(_T_1124, _T_1120, _T_1123) @[Mux.scala 68:16]
      node _T_1126 = eq(UInt<3>("h05"), _T_1113) @[Mux.scala 68:19]
      node _T_1127 = mux(_T_1126, _T_1119, _T_1125) @[Mux.scala 68:16]
      node _T_1128 = eq(UInt<3>("h04"), _T_1113) @[Mux.scala 68:19]
      node _T_1129 = mux(_T_1128, _T_1118, _T_1127) @[Mux.scala 68:16]
      node _T_1130 = eq(UInt<2>("h03"), _T_1113) @[Mux.scala 68:19]
      node _T_1131 = mux(_T_1130, _T_1117, _T_1129) @[Mux.scala 68:16]
      node _T_1132 = eq(UInt<2>("h02"), _T_1113) @[Mux.scala 68:19]
      node _T_1133 = mux(_T_1132, _T_1116, _T_1131) @[Mux.scala 68:16]
      node _T_1134 = eq(UInt<1>("h01"), _T_1113) @[Mux.scala 68:19]
      node _T_1135 = mux(_T_1134, _T_1115, _T_1133) @[Mux.scala 68:16]
      node _T_1136 = eq(UInt<1>("h00"), _T_1113) @[Mux.scala 68:19]
      node _T_1137 = mux(_T_1136, _T_1114, _T_1135) @[Mux.scala 68:16]
      node _T_1138 = bits(rb.entries[3].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_1139 = eq(_T_1138, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_1139 : @[POSIT_Locality.scala 136:88]
        node _T_1140 = eq(_T_1087, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_1141 = eq(_T_1112, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_1142 = and(_T_1140, _T_1141) @[POSIT_Locality.scala 138:49]
        node _T_1143 = bits(rb.entries[3].request.operands[2].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_1144 = eq(_T_1137, _T_1143) @[POSIT_Locality.scala 139:59]
        node _T_1145 = and(_T_1142, _T_1144) @[POSIT_Locality.scala 139:49]
        when _T_1145 : @[POSIT_Locality.scala 139:106]
          node _T_1146 = bits(rb.entries[3].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_1147 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_1148 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_1149 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_1150 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_1151 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_1152 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_1153 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_1154 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_1155 = eq(UInt<3>("h07"), _T_1146) @[Mux.scala 68:19]
          node _T_1156 = mux(_T_1155, _T_1154, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_1157 = eq(UInt<3>("h06"), _T_1146) @[Mux.scala 68:19]
          node _T_1158 = mux(_T_1157, _T_1153, _T_1156) @[Mux.scala 68:16]
          node _T_1159 = eq(UInt<3>("h05"), _T_1146) @[Mux.scala 68:19]
          node _T_1160 = mux(_T_1159, _T_1152, _T_1158) @[Mux.scala 68:16]
          node _T_1161 = eq(UInt<3>("h04"), _T_1146) @[Mux.scala 68:19]
          node _T_1162 = mux(_T_1161, _T_1151, _T_1160) @[Mux.scala 68:16]
          node _T_1163 = eq(UInt<2>("h03"), _T_1146) @[Mux.scala 68:19]
          node _T_1164 = mux(_T_1163, _T_1150, _T_1162) @[Mux.scala 68:16]
          node _T_1165 = eq(UInt<2>("h02"), _T_1146) @[Mux.scala 68:19]
          node _T_1166 = mux(_T_1165, _T_1149, _T_1164) @[Mux.scala 68:16]
          node _T_1167 = eq(UInt<1>("h01"), _T_1146) @[Mux.scala 68:19]
          node _T_1168 = mux(_T_1167, _T_1148, _T_1166) @[Mux.scala 68:16]
          node _T_1169 = eq(UInt<1>("h00"), _T_1146) @[Mux.scala 68:19]
          node _T_1170 = mux(_T_1169, _T_1147, _T_1168) @[Mux.scala 68:16]
          rb.entries[3].request.operands[2].value <= _T_1170 @[POSIT_Locality.scala 140:89]
          rb.entries[3].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_1171 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1172 = eq(_T_1171, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1172 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h03"), UInt<8>("h02")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      skip @[POSIT_Locality.scala 128:37]
    wire waitingToBeFetched : UInt<1>[12] @[POSIT_Locality.scala 155:38]
    wire fetchOffSet : UInt<48>[12] @[POSIT_Locality.scala 157:31]
    node _T_1173 = bits(rb.entries[0].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_1174 = eq(_T_1173, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_1175 = and(rb.entries[0].valid, _T_1174) @[POSIT_Locality.scala 163:91]
    node _T_1176 = bits(rb.entries[0].request.operands[0].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_1177 = and(_T_1176, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_1178 = eq(_T_1177, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_1179 = and(_T_1175, _T_1178) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[0] <= _T_1179 @[POSIT_Locality.scala 163:68]
    fetchOffSet[0] <= rb.entries[0].request.operands[0].value @[POSIT_Locality.scala 168:53]
    node _T_1180 = bits(rb.entries[0].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_1181 = eq(_T_1180, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_1182 = and(rb.entries[0].valid, _T_1181) @[POSIT_Locality.scala 163:91]
    node _T_1183 = bits(rb.entries[0].request.operands[1].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_1184 = and(_T_1183, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_1185 = eq(_T_1184, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_1186 = and(_T_1182, _T_1185) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[1] <= _T_1186 @[POSIT_Locality.scala 163:68]
    fetchOffSet[1] <= rb.entries[0].request.operands[1].value @[POSIT_Locality.scala 168:53]
    node _T_1187 = bits(rb.entries[0].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_1188 = eq(_T_1187, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_1189 = and(rb.entries[0].valid, _T_1188) @[POSIT_Locality.scala 163:91]
    node _T_1190 = bits(rb.entries[0].request.operands[2].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_1191 = and(_T_1190, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_1192 = eq(_T_1191, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_1193 = and(_T_1189, _T_1192) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[2] <= _T_1193 @[POSIT_Locality.scala 163:68]
    fetchOffSet[2] <= rb.entries[0].request.operands[2].value @[POSIT_Locality.scala 168:53]
    node _T_1194 = bits(rb.entries[1].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_1195 = eq(_T_1194, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_1196 = and(rb.entries[1].valid, _T_1195) @[POSIT_Locality.scala 163:91]
    node _T_1197 = bits(rb.entries[1].request.operands[0].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_1198 = and(_T_1197, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_1199 = eq(_T_1198, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_1200 = and(_T_1196, _T_1199) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[3] <= _T_1200 @[POSIT_Locality.scala 163:68]
    fetchOffSet[3] <= rb.entries[1].request.operands[0].value @[POSIT_Locality.scala 168:53]
    node _T_1201 = bits(rb.entries[1].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_1202 = eq(_T_1201, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_1203 = and(rb.entries[1].valid, _T_1202) @[POSIT_Locality.scala 163:91]
    node _T_1204 = bits(rb.entries[1].request.operands[1].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_1205 = and(_T_1204, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_1206 = eq(_T_1205, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_1207 = and(_T_1203, _T_1206) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[4] <= _T_1207 @[POSIT_Locality.scala 163:68]
    fetchOffSet[4] <= rb.entries[1].request.operands[1].value @[POSIT_Locality.scala 168:53]
    node _T_1208 = bits(rb.entries[1].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_1209 = eq(_T_1208, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_1210 = and(rb.entries[1].valid, _T_1209) @[POSIT_Locality.scala 163:91]
    node _T_1211 = bits(rb.entries[1].request.operands[2].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_1212 = and(_T_1211, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_1213 = eq(_T_1212, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_1214 = and(_T_1210, _T_1213) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[5] <= _T_1214 @[POSIT_Locality.scala 163:68]
    fetchOffSet[5] <= rb.entries[1].request.operands[2].value @[POSIT_Locality.scala 168:53]
    node _T_1215 = bits(rb.entries[2].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_1216 = eq(_T_1215, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_1217 = and(rb.entries[2].valid, _T_1216) @[POSIT_Locality.scala 163:91]
    node _T_1218 = bits(rb.entries[2].request.operands[0].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_1219 = and(_T_1218, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_1220 = eq(_T_1219, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_1221 = and(_T_1217, _T_1220) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[6] <= _T_1221 @[POSIT_Locality.scala 163:68]
    fetchOffSet[6] <= rb.entries[2].request.operands[0].value @[POSIT_Locality.scala 168:53]
    node _T_1222 = bits(rb.entries[2].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_1223 = eq(_T_1222, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_1224 = and(rb.entries[2].valid, _T_1223) @[POSIT_Locality.scala 163:91]
    node _T_1225 = bits(rb.entries[2].request.operands[1].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_1226 = and(_T_1225, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_1227 = eq(_T_1226, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_1228 = and(_T_1224, _T_1227) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[7] <= _T_1228 @[POSIT_Locality.scala 163:68]
    fetchOffSet[7] <= rb.entries[2].request.operands[1].value @[POSIT_Locality.scala 168:53]
    node _T_1229 = bits(rb.entries[2].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_1230 = eq(_T_1229, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_1231 = and(rb.entries[2].valid, _T_1230) @[POSIT_Locality.scala 163:91]
    node _T_1232 = bits(rb.entries[2].request.operands[2].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_1233 = and(_T_1232, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_1234 = eq(_T_1233, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_1235 = and(_T_1231, _T_1234) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[8] <= _T_1235 @[POSIT_Locality.scala 163:68]
    fetchOffSet[8] <= rb.entries[2].request.operands[2].value @[POSIT_Locality.scala 168:53]
    node _T_1236 = bits(rb.entries[3].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_1237 = eq(_T_1236, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_1238 = and(rb.entries[3].valid, _T_1237) @[POSIT_Locality.scala 163:91]
    node _T_1239 = bits(rb.entries[3].request.operands[0].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_1240 = and(_T_1239, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_1241 = eq(_T_1240, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_1242 = and(_T_1238, _T_1241) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[9] <= _T_1242 @[POSIT_Locality.scala 163:68]
    fetchOffSet[9] <= rb.entries[3].request.operands[0].value @[POSIT_Locality.scala 168:53]
    node _T_1243 = bits(rb.entries[3].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_1244 = eq(_T_1243, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_1245 = and(rb.entries[3].valid, _T_1244) @[POSIT_Locality.scala 163:91]
    node _T_1246 = bits(rb.entries[3].request.operands[1].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_1247 = and(_T_1246, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_1248 = eq(_T_1247, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_1249 = and(_T_1245, _T_1248) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[10] <= _T_1249 @[POSIT_Locality.scala 163:68]
    fetchOffSet[10] <= rb.entries[3].request.operands[1].value @[POSIT_Locality.scala 168:53]
    node _T_1250 = bits(rb.entries[3].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_1251 = eq(_T_1250, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_1252 = and(rb.entries[3].valid, _T_1251) @[POSIT_Locality.scala 163:91]
    node _T_1253 = bits(rb.entries[3].request.operands[2].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_1254 = and(_T_1253, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_1255 = eq(_T_1254, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_1256 = and(_T_1252, _T_1255) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[11] <= _T_1256 @[POSIT_Locality.scala 163:68]
    fetchOffSet[11] <= rb.entries[3].request.operands[2].value @[POSIT_Locality.scala 168:53]
    inst fetchArb of DispatchArbiter_1 @[POSIT_Locality.scala 172:30]
    fetchArb.clock <= clock
    fetchArb.reset <= reset
    node _T_1257 = cat(waitingToBeFetched[2], waitingToBeFetched[1]) @[POSIT_Locality.scala 173:52]
    node _T_1258 = cat(_T_1257, waitingToBeFetched[0]) @[POSIT_Locality.scala 173:52]
    node _T_1259 = cat(waitingToBeFetched[5], waitingToBeFetched[4]) @[POSIT_Locality.scala 173:52]
    node _T_1260 = cat(_T_1259, waitingToBeFetched[3]) @[POSIT_Locality.scala 173:52]
    node _T_1261 = cat(_T_1260, _T_1258) @[POSIT_Locality.scala 173:52]
    node _T_1262 = cat(waitingToBeFetched[8], waitingToBeFetched[7]) @[POSIT_Locality.scala 173:52]
    node _T_1263 = cat(_T_1262, waitingToBeFetched[6]) @[POSIT_Locality.scala 173:52]
    node _T_1264 = cat(waitingToBeFetched[11], waitingToBeFetched[10]) @[POSIT_Locality.scala 173:52]
    node _T_1265 = cat(_T_1264, waitingToBeFetched[9]) @[POSIT_Locality.scala 173:52]
    node _T_1266 = cat(_T_1265, _T_1263) @[POSIT_Locality.scala 173:52]
    node _T_1267 = cat(_T_1266, _T_1261) @[POSIT_Locality.scala 173:52]
    fetchArb.io.validity <= _T_1267 @[POSIT_Locality.scala 173:30]
    fetchArb.io.priority <= wbCountOn @[POSIT_Locality.scala 174:30]
    when fetchArb.io.hasChosen : @[POSIT_Locality.scala 181:36]
      node _T_1268 = bits(fetchOffSet[fetchArb.io.chosen], 13, 3) @[POSIT_Locality.scala 182:62]
      node _T_1269 = and(_T_1268, reg_infetch_cacheline) @[POSIT_Locality.scala 182:82]
      node _T_1270 = neq(_T_1269, UInt<1>("h00")) @[POSIT_Locality.scala 182:107]
      node _T_1271 = xor(UInt<1>("h01"), _T_1270) @[POSIT_Locality.scala 184:49]
      io.mem_read.req_valid <= _T_1271 @[POSIT_Locality.scala 184:39]
      node _T_1272 = bits(fetchOffSet[fetchArb.io.chosen], 13, 3) @[POSIT_Locality.scala 185:81]
      node _T_1273 = bits(_T_1272, 10, 8) @[OneHot.scala 30:18]
      node _T_1274 = bits(_T_1272, 7, 0) @[OneHot.scala 31:18]
      node _T_1275 = neq(_T_1273, UInt<1>("h00")) @[OneHot.scala 32:14]
      node _T_1276 = or(_T_1273, _T_1274) @[OneHot.scala 32:28]
      node _T_1277 = bits(_T_1276, 7, 4) @[OneHot.scala 30:18]
      node _T_1278 = bits(_T_1276, 3, 0) @[OneHot.scala 31:18]
      node _T_1279 = neq(_T_1277, UInt<1>("h00")) @[OneHot.scala 32:14]
      node _T_1280 = or(_T_1277, _T_1278) @[OneHot.scala 32:28]
      node _T_1281 = bits(_T_1280, 3, 2) @[OneHot.scala 30:18]
      node _T_1282 = bits(_T_1280, 1, 0) @[OneHot.scala 31:18]
      node _T_1283 = neq(_T_1281, UInt<1>("h00")) @[OneHot.scala 32:14]
      node _T_1284 = or(_T_1281, _T_1282) @[OneHot.scala 32:28]
      node _T_1285 = bits(_T_1284, 1, 1) @[CircuitMath.scala 30:8]
      node _T_1286 = cat(_T_1283, _T_1285) @[Cat.scala 30:58]
      node _T_1287 = cat(_T_1279, _T_1286) @[Cat.scala 30:58]
      node _T_1288 = cat(_T_1275, _T_1287) @[Cat.scala 30:58]
      io.mem_read.req_addr <= _T_1288 @[POSIT_Locality.scala 185:38]
      node _T_1289 = bits(fetchOffSet[fetchArb.io.chosen], 13, 0) @[POSIT_Locality.scala 186:137]
      io.mem_read.req_tag <= _T_1289 @[POSIT_Locality.scala 187:37]
      node _T_1290 = bits(reset, 0, 0) @[POSIT_Locality.scala 188:23]
      node _T_1291 = eq(_T_1290, UInt<1>("h00")) @[POSIT_Locality.scala 188:23]
      when _T_1291 : @[POSIT_Locality.scala 188:23]
        printf(clock, UInt<1>(1), "chosen: %d\n", fetchArb.io.chosen) @[POSIT_Locality.scala 188:23]
        skip @[POSIT_Locality.scala 188:23]
      node _T_1292 = bits(fetchOffSet[fetchArb.io.chosen], 13, 3) @[POSIT_Locality.scala 189:122]
      node _T_1293 = bits(reset, 0, 0) @[POSIT_Locality.scala 189:23]
      node _T_1294 = eq(_T_1293, UInt<1>("h00")) @[POSIT_Locality.scala 189:23]
      when _T_1294 : @[POSIT_Locality.scala 189:23]
        printf(clock, UInt<1>(1), "fetchoffset: %b, subfield: %b\n", fetchOffSet[fetchArb.io.chosen], _T_1292) @[POSIT_Locality.scala 189:23]
        skip @[POSIT_Locality.scala 189:23]
      node _T_1295 = bits(reset, 0, 0) @[POSIT_Locality.scala 190:23]
      node _T_1296 = eq(_T_1295, UInt<1>("h00")) @[POSIT_Locality.scala 190:23]
      when _T_1296 : @[POSIT_Locality.scala 190:23]
        printf(clock, UInt<1>(1), "io.mem_read.req_addr: %b\n", io.mem_read.req_addr) @[POSIT_Locality.scala 190:23]
        skip @[POSIT_Locality.scala 190:23]
      node _T_1297 = bits(reset, 0, 0) @[POSIT_Locality.scala 191:23]
      node _T_1298 = eq(_T_1297, UInt<1>("h00")) @[POSIT_Locality.scala 191:23]
      when _T_1298 : @[POSIT_Locality.scala 191:23]
        printf(clock, UInt<1>(1), "filter: %b\n", _T_1270) @[POSIT_Locality.scala 191:23]
        skip @[POSIT_Locality.scala 191:23]
      skip @[POSIT_Locality.scala 181:36]
    else : @[POSIT_Locality.scala 193:20]
      io.mem_read.req_valid <= UInt<1>("h00") @[POSIT_Locality.scala 195:39]
      node _T_1299 = bits(fetchOffSet[fetchArb.io.chosen], 13, 3) @[POSIT_Locality.scala 196:81]
      node _T_1300 = bits(_T_1299, 10, 8) @[OneHot.scala 30:18]
      node _T_1301 = bits(_T_1299, 7, 0) @[OneHot.scala 31:18]
      node _T_1302 = neq(_T_1300, UInt<1>("h00")) @[OneHot.scala 32:14]
      node _T_1303 = or(_T_1300, _T_1301) @[OneHot.scala 32:28]
      node _T_1304 = bits(_T_1303, 7, 4) @[OneHot.scala 30:18]
      node _T_1305 = bits(_T_1303, 3, 0) @[OneHot.scala 31:18]
      node _T_1306 = neq(_T_1304, UInt<1>("h00")) @[OneHot.scala 32:14]
      node _T_1307 = or(_T_1304, _T_1305) @[OneHot.scala 32:28]
      node _T_1308 = bits(_T_1307, 3, 2) @[OneHot.scala 30:18]
      node _T_1309 = bits(_T_1307, 1, 0) @[OneHot.scala 31:18]
      node _T_1310 = neq(_T_1308, UInt<1>("h00")) @[OneHot.scala 32:14]
      node _T_1311 = or(_T_1308, _T_1309) @[OneHot.scala 32:28]
      node _T_1312 = bits(_T_1311, 1, 1) @[CircuitMath.scala 30:8]
      node _T_1313 = cat(_T_1310, _T_1312) @[Cat.scala 30:58]
      node _T_1314 = cat(_T_1306, _T_1313) @[Cat.scala 30:58]
      node _T_1315 = cat(_T_1302, _T_1314) @[Cat.scala 30:58]
      io.mem_read.req_addr <= _T_1315 @[POSIT_Locality.scala 196:38]
      io.mem_read.req_tag <= UInt<1>("h00") @[POSIT_Locality.scala 197:37]
      skip @[POSIT_Locality.scala 193:20]
    node _T_1316 = bits(io.mem_read.resp_tag, 13, 3) @[POSIT_Locality.scala 226:78]
    node _T_1317 = or(reg_infetch_cacheline, _T_1316) @[POSIT_Locality.scala 226:56]
    node _T_1318 = bits(io.mem_read.resp_tag, 13, 3) @[POSIT_Locality.scala 226:121]
    node _T_1319 = xor(_T_1317, _T_1318) @[POSIT_Locality.scala 226:99]
    node _T_1320 = bits(io.mem_read.req_tag, 13, 3) @[POSIT_Locality.scala 227:74]
    node _T_1321 = or(reg_infetch_cacheline, _T_1320) @[POSIT_Locality.scala 227:53]
    node _T_1322 = bits(io.mem_read.req_tag, 13, 3) @[POSIT_Locality.scala 228:73]
    node _T_1323 = or(_T_1319, _T_1322) @[POSIT_Locality.scala 228:52]
    when io.mem_read.resp_valid : @[POSIT_Locality.scala 229:45]
      when io.mem_read.req_valid : @[POSIT_Locality.scala 230:52]
        reg_infetch_cacheline <= _T_1323 @[POSIT_Locality.scala 231:55]
        skip @[POSIT_Locality.scala 230:52]
      else : @[POSIT_Locality.scala 232:36]
        reg_infetch_cacheline <= _T_1319 @[POSIT_Locality.scala 233:55]
        skip @[POSIT_Locality.scala 232:36]
      skip @[POSIT_Locality.scala 229:45]
    else : @[POSIT_Locality.scala 235:28]
      when io.mem_read.req_valid : @[POSIT_Locality.scala 236:52]
        reg_infetch_cacheline <= _T_1321 @[POSIT_Locality.scala 237:55]
        skip @[POSIT_Locality.scala 236:52]
      skip @[POSIT_Locality.scala 235:28]
    node _T_1324 = or(io.mem_read.req_valid, io.mem_read.resp_valid) @[POSIT_Locality.scala 242:44]
    when _T_1324 : @[POSIT_Locality.scala 242:69]
      node _T_1325 = bits(reset, 0, 0) @[POSIT_Locality.scala 243:31]
      node _T_1326 = eq(_T_1325, UInt<1>("h00")) @[POSIT_Locality.scala 243:31]
      when _T_1326 : @[POSIT_Locality.scala 243:31]
        printf(clock, UInt<1>(1), "\t-mem_read:\n") @[POSIT_Locality.scala 243:31]
        skip @[POSIT_Locality.scala 243:31]
      node _T_1327 = bits(reset, 0, 0) @[POSIT_Locality.scala 244:31]
      node _T_1328 = eq(_T_1327, UInt<1>("h00")) @[POSIT_Locality.scala 244:31]
      when _T_1328 : @[POSIT_Locality.scala 244:31]
        printf(clock, UInt<1>(1), "\t\t-req_valid: %b\n", io.mem_read.req_valid) @[POSIT_Locality.scala 244:31]
        skip @[POSIT_Locality.scala 244:31]
      node _T_1329 = bits(reset, 0, 0) @[POSIT_Locality.scala 245:31]
      node _T_1330 = eq(_T_1329, UInt<1>("h00")) @[POSIT_Locality.scala 245:31]
      when _T_1330 : @[POSIT_Locality.scala 245:31]
        printf(clock, UInt<1>(1), "\t\t-req_addr: %x\n", io.mem_read.req_addr) @[POSIT_Locality.scala 245:31]
        skip @[POSIT_Locality.scala 245:31]
      node _T_1331 = bits(reset, 0, 0) @[POSIT_Locality.scala 246:31]
      node _T_1332 = eq(_T_1331, UInt<1>("h00")) @[POSIT_Locality.scala 246:31]
      when _T_1332 : @[POSIT_Locality.scala 246:31]
        printf(clock, UInt<1>(1), "\t\t-resp_valid: %b\n", io.mem_read.resp_valid) @[POSIT_Locality.scala 246:31]
        skip @[POSIT_Locality.scala 246:31]
      node _T_1333 = bits(reset, 0, 0) @[POSIT_Locality.scala 247:31]
      node _T_1334 = eq(_T_1333, UInt<1>("h00")) @[POSIT_Locality.scala 247:31]
      when _T_1334 : @[POSIT_Locality.scala 247:31]
        printf(clock, UInt<1>(1), "\t\t-data: %x\n", io.mem_read.data) @[POSIT_Locality.scala 247:31]
        skip @[POSIT_Locality.scala 247:31]
      node _T_1335 = bits(reset, 0, 0) @[POSIT_Locality.scala 248:31]
      node _T_1336 = eq(_T_1335, UInt<1>("h00")) @[POSIT_Locality.scala 248:31]
      when _T_1336 : @[POSIT_Locality.scala 248:31]
        printf(clock, UInt<1>(1), "\t\t-resp_tag: %x\n", io.mem_read.resp_tag) @[POSIT_Locality.scala 248:31]
        skip @[POSIT_Locality.scala 248:31]
      skip @[POSIT_Locality.scala 242:69]
    when io.mem_write.valid : @[POSIT_Locality.scala 250:41]
      node _T_1337 = bits(reset, 0, 0) @[POSIT_Locality.scala 251:31]
      node _T_1338 = eq(_T_1337, UInt<1>("h00")) @[POSIT_Locality.scala 251:31]
      when _T_1338 : @[POSIT_Locality.scala 251:31]
        printf(clock, UInt<1>(1), "\t-mem_write:\n") @[POSIT_Locality.scala 251:31]
        skip @[POSIT_Locality.scala 251:31]
      node _T_1339 = bits(reset, 0, 0) @[POSIT_Locality.scala 252:31]
      node _T_1340 = eq(_T_1339, UInt<1>("h00")) @[POSIT_Locality.scala 252:31]
      when _T_1340 : @[POSIT_Locality.scala 252:31]
        printf(clock, UInt<1>(1), "\t\t-valid: %b\n", io.mem_write.valid) @[POSIT_Locality.scala 252:31]
        skip @[POSIT_Locality.scala 252:31]
      node _T_1341 = bits(reset, 0, 0) @[POSIT_Locality.scala 253:31]
      node _T_1342 = eq(_T_1341, UInt<1>("h00")) @[POSIT_Locality.scala 253:31]
      when _T_1342 : @[POSIT_Locality.scala 253:31]
        printf(clock, UInt<1>(1), "\t\t-ready: %b\n", io.mem_write.ready) @[POSIT_Locality.scala 253:31]
        skip @[POSIT_Locality.scala 253:31]
      node _T_1343 = bits(reset, 0, 0) @[POSIT_Locality.scala 254:31]
      node _T_1344 = eq(_T_1343, UInt<1>("h00")) @[POSIT_Locality.scala 254:31]
      when _T_1344 : @[POSIT_Locality.scala 254:31]
        printf(clock, UInt<1>(1), "\t\t-bits:\n") @[POSIT_Locality.scala 254:31]
        skip @[POSIT_Locality.scala 254:31]
      node _T_1345 = bits(reset, 0, 0) @[POSIT_Locality.scala 255:31]
      node _T_1346 = eq(_T_1345, UInt<1>("h00")) @[POSIT_Locality.scala 255:31]
      when _T_1346 : @[POSIT_Locality.scala 255:31]
        printf(clock, UInt<1>(1), "\t\t\t-wr_addr: %x\n", io.mem_write.bits.wr_addr) @[POSIT_Locality.scala 255:31]
        skip @[POSIT_Locality.scala 255:31]
      node _T_1347 = bits(reset, 0, 0) @[POSIT_Locality.scala 256:31]
      node _T_1348 = eq(_T_1347, UInt<1>("h00")) @[POSIT_Locality.scala 256:31]
      when _T_1348 : @[POSIT_Locality.scala 256:31]
        printf(clock, UInt<1>(1), "\t\t\t-result: \n") @[POSIT_Locality.scala 256:31]
        skip @[POSIT_Locality.scala 256:31]
      node _T_1349 = bits(reset, 0, 0) @[POSIT_Locality.scala 257:31]
      node _T_1350 = eq(_T_1349, UInt<1>("h00")) @[POSIT_Locality.scala 257:31]
      when _T_1350 : @[POSIT_Locality.scala 257:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-isZero: %b\n", io.mem_write.bits.result.isZero) @[POSIT_Locality.scala 257:31]
        skip @[POSIT_Locality.scala 257:31]
      node _T_1351 = bits(reset, 0, 0) @[POSIT_Locality.scala 258:31]
      node _T_1352 = eq(_T_1351, UInt<1>("h00")) @[POSIT_Locality.scala 258:31]
      when _T_1352 : @[POSIT_Locality.scala 258:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-isNaR: %b\n", io.mem_write.bits.result.isNaR) @[POSIT_Locality.scala 258:31]
        skip @[POSIT_Locality.scala 258:31]
      node _T_1353 = bits(reset, 0, 0) @[POSIT_Locality.scala 259:31]
      node _T_1354 = eq(_T_1353, UInt<1>("h00")) @[POSIT_Locality.scala 259:31]
      when _T_1354 : @[POSIT_Locality.scala 259:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-lt: %b\n", io.mem_write.bits.result.lt) @[POSIT_Locality.scala 259:31]
        skip @[POSIT_Locality.scala 259:31]
      node _T_1355 = bits(reset, 0, 0) @[POSIT_Locality.scala 260:31]
      node _T_1356 = eq(_T_1355, UInt<1>("h00")) @[POSIT_Locality.scala 260:31]
      when _T_1356 : @[POSIT_Locality.scala 260:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-eq: %b\n", io.mem_write.bits.result.eq) @[POSIT_Locality.scala 260:31]
        skip @[POSIT_Locality.scala 260:31]
      node _T_1357 = bits(reset, 0, 0) @[POSIT_Locality.scala 261:31]
      node _T_1358 = eq(_T_1357, UInt<1>("h00")) @[POSIT_Locality.scala 261:31]
      when _T_1358 : @[POSIT_Locality.scala 261:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-gt: %b\n", io.mem_write.bits.result.gt) @[POSIT_Locality.scala 261:31]
        skip @[POSIT_Locality.scala 261:31]
      node _T_1359 = bits(reset, 0, 0) @[POSIT_Locality.scala 262:31]
      node _T_1360 = eq(_T_1359, UInt<1>("h00")) @[POSIT_Locality.scala 262:31]
      when _T_1360 : @[POSIT_Locality.scala 262:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-exceptions: %x\n", io.mem_write.bits.result.exceptions) @[POSIT_Locality.scala 262:31]
        skip @[POSIT_Locality.scala 262:31]
      node _T_1361 = bits(reset, 0, 0) @[POSIT_Locality.scala 263:31]
      node _T_1362 = eq(_T_1361, UInt<1>("h00")) @[POSIT_Locality.scala 263:31]
      when _T_1362 : @[POSIT_Locality.scala 263:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-out: %b\n", io.mem_write.bits.result.out) @[POSIT_Locality.scala 263:31]
        skip @[POSIT_Locality.scala 263:31]
      skip @[POSIT_Locality.scala 250:41]
    node _T_1363 = or(io.request.valid, io.mem_write.valid) @[POSIT_Locality.scala 266:39]
    node _T_1364 = or(_T_1363, io.mem_read.req_valid) @[POSIT_Locality.scala 266:61]
    node _T_1365 = or(_T_1364, pe.io.result.valid) @[POSIT_Locality.scala 266:86]
    when _T_1365 : @[POSIT_Locality.scala 266:108]
      node _T_1366 = bits(reset, 0, 0) @[POSIT_Locality.scala 267:31]
      node _T_1367 = eq(_T_1366, UInt<1>("h00")) @[POSIT_Locality.scala 267:31]
      when _T_1367 : @[POSIT_Locality.scala 267:31]
        printf(clock, UInt<1>(1), "top level io:\n") @[POSIT_Locality.scala 267:31]
        skip @[POSIT_Locality.scala 267:31]
      node _T_1368 = bits(reset, 0, 0) @[POSIT_Locality.scala 268:31]
      node _T_1369 = eq(_T_1368, UInt<1>("h00")) @[POSIT_Locality.scala 268:31]
      when _T_1369 : @[POSIT_Locality.scala 268:31]
        printf(clock, UInt<1>(1), "\t-request:\n") @[POSIT_Locality.scala 268:31]
        skip @[POSIT_Locality.scala 268:31]
      node _T_1370 = bits(reset, 0, 0) @[POSIT_Locality.scala 269:31]
      node _T_1371 = eq(_T_1370, UInt<1>("h00")) @[POSIT_Locality.scala 269:31]
      when _T_1371 : @[POSIT_Locality.scala 269:31]
        printf(clock, UInt<1>(1), "\t\t-valid: %b\n", io.request.valid) @[POSIT_Locality.scala 269:31]
        skip @[POSIT_Locality.scala 269:31]
      node _T_1372 = bits(reset, 0, 0) @[POSIT_Locality.scala 270:31]
      node _T_1373 = eq(_T_1372, UInt<1>("h00")) @[POSIT_Locality.scala 270:31]
      when _T_1373 : @[POSIT_Locality.scala 270:31]
        printf(clock, UInt<1>(1), "\t\t-ready: %b\n", io.request.ready) @[POSIT_Locality.scala 270:31]
        skip @[POSIT_Locality.scala 270:31]
      node _T_1374 = bits(reset, 0, 0) @[POSIT_Locality.scala 271:31]
      node _T_1375 = eq(_T_1374, UInt<1>("h00")) @[POSIT_Locality.scala 271:31]
      when _T_1375 : @[POSIT_Locality.scala 271:31]
        printf(clock, UInt<1>(1), "\t\t-bits:\n") @[POSIT_Locality.scala 271:31]
        skip @[POSIT_Locality.scala 271:31]
      node _T_1376 = bits(reset, 0, 0) @[POSIT_Locality.scala 272:31]
      node _T_1377 = eq(_T_1376, UInt<1>("h00")) @[POSIT_Locality.scala 272:31]
      when _T_1377 : @[POSIT_Locality.scala 272:31]
        printf(clock, UInt<1>(1), "\t\t\t-inst: %x\n", io.request.bits.inst) @[POSIT_Locality.scala 272:31]
        skip @[POSIT_Locality.scala 272:31]
      node _T_1378 = bits(reset, 0, 0) @[POSIT_Locality.scala 273:31]
      node _T_1379 = eq(_T_1378, UInt<1>("h00")) @[POSIT_Locality.scala 273:31]
      when _T_1379 : @[POSIT_Locality.scala 273:31]
        printf(clock, UInt<1>(1), "\t\t\t-mode: %x\n", io.request.bits.mode) @[POSIT_Locality.scala 273:31]
        skip @[POSIT_Locality.scala 273:31]
      node _T_1380 = bits(reset, 0, 0) @[POSIT_Locality.scala 274:31]
      node _T_1381 = eq(_T_1380, UInt<1>("h00")) @[POSIT_Locality.scala 274:31]
      when _T_1381 : @[POSIT_Locality.scala 274:31]
        printf(clock, UInt<1>(1), "\t\t\t-wr_addr: %x\n", io.request.bits.wr_addr) @[POSIT_Locality.scala 274:31]
        skip @[POSIT_Locality.scala 274:31]
      node _T_1382 = bits(reset, 0, 0) @[POSIT_Locality.scala 276:39]
      node _T_1383 = eq(_T_1382, UInt<1>("h00")) @[POSIT_Locality.scala 276:39]
      when _T_1383 : @[POSIT_Locality.scala 276:39]
        printf(clock, UInt<1>(1), "\t\t\t-operand0:\n") @[POSIT_Locality.scala 276:39]
        skip @[POSIT_Locality.scala 276:39]
      node _T_1384 = bits(reset, 0, 0) @[POSIT_Locality.scala 277:39]
      node _T_1385 = eq(_T_1384, UInt<1>("h00")) @[POSIT_Locality.scala 277:39]
      when _T_1385 : @[POSIT_Locality.scala 277:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-value: %x\n", io.request.bits.operands[0].value) @[POSIT_Locality.scala 277:39]
        skip @[POSIT_Locality.scala 277:39]
      node _T_1386 = bits(reset, 0, 0) @[POSIT_Locality.scala 278:39]
      node _T_1387 = eq(_T_1386, UInt<1>("h00")) @[POSIT_Locality.scala 278:39]
      when _T_1387 : @[POSIT_Locality.scala 278:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-mode: %x\n", io.request.bits.operands[0].mode) @[POSIT_Locality.scala 278:39]
        skip @[POSIT_Locality.scala 278:39]
      node _T_1388 = bits(reset, 0, 0) @[POSIT_Locality.scala 276:39]
      node _T_1389 = eq(_T_1388, UInt<1>("h00")) @[POSIT_Locality.scala 276:39]
      when _T_1389 : @[POSIT_Locality.scala 276:39]
        printf(clock, UInt<1>(1), "\t\t\t-operand1:\n") @[POSIT_Locality.scala 276:39]
        skip @[POSIT_Locality.scala 276:39]
      node _T_1390 = bits(reset, 0, 0) @[POSIT_Locality.scala 277:39]
      node _T_1391 = eq(_T_1390, UInt<1>("h00")) @[POSIT_Locality.scala 277:39]
      when _T_1391 : @[POSIT_Locality.scala 277:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-value: %x\n", io.request.bits.operands[1].value) @[POSIT_Locality.scala 277:39]
        skip @[POSIT_Locality.scala 277:39]
      node _T_1392 = bits(reset, 0, 0) @[POSIT_Locality.scala 278:39]
      node _T_1393 = eq(_T_1392, UInt<1>("h00")) @[POSIT_Locality.scala 278:39]
      when _T_1393 : @[POSIT_Locality.scala 278:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-mode: %x\n", io.request.bits.operands[1].mode) @[POSIT_Locality.scala 278:39]
        skip @[POSIT_Locality.scala 278:39]
      node _T_1394 = bits(reset, 0, 0) @[POSIT_Locality.scala 276:39]
      node _T_1395 = eq(_T_1394, UInt<1>("h00")) @[POSIT_Locality.scala 276:39]
      when _T_1395 : @[POSIT_Locality.scala 276:39]
        printf(clock, UInt<1>(1), "\t\t\t-operand2:\n") @[POSIT_Locality.scala 276:39]
        skip @[POSIT_Locality.scala 276:39]
      node _T_1396 = bits(reset, 0, 0) @[POSIT_Locality.scala 277:39]
      node _T_1397 = eq(_T_1396, UInt<1>("h00")) @[POSIT_Locality.scala 277:39]
      when _T_1397 : @[POSIT_Locality.scala 277:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-value: %x\n", io.request.bits.operands[2].value) @[POSIT_Locality.scala 277:39]
        skip @[POSIT_Locality.scala 277:39]
      node _T_1398 = bits(reset, 0, 0) @[POSIT_Locality.scala 278:39]
      node _T_1399 = eq(_T_1398, UInt<1>("h00")) @[POSIT_Locality.scala 278:39]
      when _T_1399 : @[POSIT_Locality.scala 278:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-mode: %x\n", io.request.bits.operands[2].mode) @[POSIT_Locality.scala 278:39]
        skip @[POSIT_Locality.scala 278:39]
      node _T_1400 = bits(reset, 0, 0) @[POSIT_Locality.scala 281:31]
      node _T_1401 = eq(_T_1400, UInt<1>("h00")) @[POSIT_Locality.scala 281:31]
      when _T_1401 : @[POSIT_Locality.scala 281:31]
        printf(clock, UInt<1>(1), "\t-fetchArb:\n") @[POSIT_Locality.scala 281:31]
        skip @[POSIT_Locality.scala 281:31]
      node _T_1402 = bits(reset, 0, 0) @[POSIT_Locality.scala 282:31]
      node _T_1403 = eq(_T_1402, UInt<1>("h00")) @[POSIT_Locality.scala 282:31]
      when _T_1403 : @[POSIT_Locality.scala 282:31]
        printf(clock, UInt<1>(1), "\t\t-validity:%b\n", fetchArb.io.validity) @[POSIT_Locality.scala 282:31]
        skip @[POSIT_Locality.scala 282:31]
      node _T_1404 = bits(reset, 0, 0) @[POSIT_Locality.scala 283:31]
      node _T_1405 = eq(_T_1404, UInt<1>("h00")) @[POSIT_Locality.scala 283:31]
      when _T_1405 : @[POSIT_Locality.scala 283:31]
        printf(clock, UInt<1>(1), "\t\t-priority:%x\n", fetchArb.io.priority) @[POSIT_Locality.scala 283:31]
        skip @[POSIT_Locality.scala 283:31]
      node _T_1406 = bits(reset, 0, 0) @[POSIT_Locality.scala 284:31]
      node _T_1407 = eq(_T_1406, UInt<1>("h00")) @[POSIT_Locality.scala 284:31]
      when _T_1407 : @[POSIT_Locality.scala 284:31]
        printf(clock, UInt<1>(1), "\t\t-chosen:%x\n", fetchArb.io.chosen) @[POSIT_Locality.scala 284:31]
        skip @[POSIT_Locality.scala 284:31]
      node _T_1408 = bits(reset, 0, 0) @[POSIT_Locality.scala 285:31]
      node _T_1409 = eq(_T_1408, UInt<1>("h00")) @[POSIT_Locality.scala 285:31]
      when _T_1409 : @[POSIT_Locality.scala 285:31]
        printf(clock, UInt<1>(1), "\t\t-hasChosen:%b\n", fetchArb.io.hasChosen) @[POSIT_Locality.scala 285:31]
        skip @[POSIT_Locality.scala 285:31]
      node _T_1410 = bits(reset, 0, 0) @[POSIT_Locality.scala 287:31]
      node _T_1411 = eq(_T_1410, UInt<1>("h00")) @[POSIT_Locality.scala 287:31]
      when _T_1411 : @[POSIT_Locality.scala 287:31]
        printf(clock, UInt<1>(1), "\t-dispatchArb\n") @[POSIT_Locality.scala 287:31]
        skip @[POSIT_Locality.scala 287:31]
      node _T_1412 = bits(reset, 0, 0) @[POSIT_Locality.scala 288:31]
      node _T_1413 = eq(_T_1412, UInt<1>("h00")) @[POSIT_Locality.scala 288:31]
      when _T_1413 : @[POSIT_Locality.scala 288:31]
        printf(clock, UInt<1>(1), "\t\t-validity:%b\n", dispatchArb.io.validity) @[POSIT_Locality.scala 288:31]
        skip @[POSIT_Locality.scala 288:31]
      node _T_1414 = bits(reset, 0, 0) @[POSIT_Locality.scala 289:31]
      node _T_1415 = eq(_T_1414, UInt<1>("h00")) @[POSIT_Locality.scala 289:31]
      when _T_1415 : @[POSIT_Locality.scala 289:31]
        printf(clock, UInt<1>(1), "\t\t-priority:%x\n", dispatchArb.io.priority) @[POSIT_Locality.scala 289:31]
        skip @[POSIT_Locality.scala 289:31]
      node _T_1416 = bits(reset, 0, 0) @[POSIT_Locality.scala 290:31]
      node _T_1417 = eq(_T_1416, UInt<1>("h00")) @[POSIT_Locality.scala 290:31]
      when _T_1417 : @[POSIT_Locality.scala 290:31]
        printf(clock, UInt<1>(1), "\t\t-chosen:%x\n", dispatchArb.io.chosen) @[POSIT_Locality.scala 290:31]
        skip @[POSIT_Locality.scala 290:31]
      node _T_1418 = bits(reset, 0, 0) @[POSIT_Locality.scala 291:31]
      node _T_1419 = eq(_T_1418, UInt<1>("h00")) @[POSIT_Locality.scala 291:31]
      when _T_1419 : @[POSIT_Locality.scala 291:31]
        printf(clock, UInt<1>(1), "\t\t-hasChosen:%b\n", dispatchArb.io.hasChosen) @[POSIT_Locality.scala 291:31]
        skip @[POSIT_Locality.scala 291:31]
      node _T_1420 = bits(reset, 0, 0) @[POSIT_Locality.scala 293:31]
      node _T_1421 = eq(_T_1420, UInt<1>("h00")) @[POSIT_Locality.scala 293:31]
      when _T_1421 : @[POSIT_Locality.scala 293:31]
        printf(clock, UInt<1>(1), "rb data: \n") @[POSIT_Locality.scala 293:31]
        skip @[POSIT_Locality.scala 293:31]
      node _T_1422 = bits(reset, 0, 0) @[POSIT_Locality.scala 294:31]
      node _T_1423 = eq(_T_1422, UInt<1>("h00")) @[POSIT_Locality.scala 294:31]
      when _T_1423 : @[POSIT_Locality.scala 294:31]
        printf(clock, UInt<1>(1), "idx | completed | valid | dispatched | writtern | wr_addr| inst | mode | num0 | mode0 | infetch0 | num1 | mode1 | infetch1 | num2 | mode2 | infetch2 | isZero | isNar | out | lt | eq | gt | exceptions\n") @[POSIT_Locality.scala 294:31]
        skip @[POSIT_Locality.scala 294:31]
      node _T_1424 = bits(reset, 0, 0) @[POSIT_Locality.scala 301:39]
      node _T_1425 = eq(_T_1424, UInt<1>("h00")) @[POSIT_Locality.scala 301:39]
      when _T_1425 : @[POSIT_Locality.scala 301:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<1>("h00"), rb.entries[0].completed, rb.entries[0].valid, rb.entries[0].dispatched, rb.entries[0].written, rb.entries[0].wr_addr, rb.entries[0].request.inst, rb.entries[0].request.mode, rb.entries[0].request.operands[0].value, rb.entries[0].request.operands[0].mode, rb.entries[0].request.inFetch[0], rb.entries[0].request.operands[1].value, rb.entries[0].request.operands[1].mode, rb.entries[0].request.inFetch[1], rb.entries[0].request.operands[2].value, rb.entries[0].request.operands[2].mode, rb.entries[0].request.inFetch[2], rb.entries[0].result.isZero, rb.entries[0].result.isNaR, rb.entries[0].result.out, rb.entries[0].result.lt, rb.entries[0].result.eq, rb.entries[0].result.gt, rb.entries[0].result.exceptions) @[POSIT_Locality.scala 301:39]
        skip @[POSIT_Locality.scala 301:39]
      node _T_1426 = bits(reset, 0, 0) @[POSIT_Locality.scala 301:39]
      node _T_1427 = eq(_T_1426, UInt<1>("h00")) @[POSIT_Locality.scala 301:39]
      when _T_1427 : @[POSIT_Locality.scala 301:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<1>("h01"), rb.entries[1].completed, rb.entries[1].valid, rb.entries[1].dispatched, rb.entries[1].written, rb.entries[1].wr_addr, rb.entries[1].request.inst, rb.entries[1].request.mode, rb.entries[1].request.operands[0].value, rb.entries[1].request.operands[0].mode, rb.entries[1].request.inFetch[0], rb.entries[1].request.operands[1].value, rb.entries[1].request.operands[1].mode, rb.entries[1].request.inFetch[1], rb.entries[1].request.operands[2].value, rb.entries[1].request.operands[2].mode, rb.entries[1].request.inFetch[2], rb.entries[1].result.isZero, rb.entries[1].result.isNaR, rb.entries[1].result.out, rb.entries[1].result.lt, rb.entries[1].result.eq, rb.entries[1].result.gt, rb.entries[1].result.exceptions) @[POSIT_Locality.scala 301:39]
        skip @[POSIT_Locality.scala 301:39]
      node _T_1428 = bits(reset, 0, 0) @[POSIT_Locality.scala 301:39]
      node _T_1429 = eq(_T_1428, UInt<1>("h00")) @[POSIT_Locality.scala 301:39]
      when _T_1429 : @[POSIT_Locality.scala 301:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<2>("h02"), rb.entries[2].completed, rb.entries[2].valid, rb.entries[2].dispatched, rb.entries[2].written, rb.entries[2].wr_addr, rb.entries[2].request.inst, rb.entries[2].request.mode, rb.entries[2].request.operands[0].value, rb.entries[2].request.operands[0].mode, rb.entries[2].request.inFetch[0], rb.entries[2].request.operands[1].value, rb.entries[2].request.operands[1].mode, rb.entries[2].request.inFetch[1], rb.entries[2].request.operands[2].value, rb.entries[2].request.operands[2].mode, rb.entries[2].request.inFetch[2], rb.entries[2].result.isZero, rb.entries[2].result.isNaR, rb.entries[2].result.out, rb.entries[2].result.lt, rb.entries[2].result.eq, rb.entries[2].result.gt, rb.entries[2].result.exceptions) @[POSIT_Locality.scala 301:39]
        skip @[POSIT_Locality.scala 301:39]
      node _T_1430 = bits(reset, 0, 0) @[POSIT_Locality.scala 301:39]
      node _T_1431 = eq(_T_1430, UInt<1>("h00")) @[POSIT_Locality.scala 301:39]
      when _T_1431 : @[POSIT_Locality.scala 301:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<2>("h03"), rb.entries[3].completed, rb.entries[3].valid, rb.entries[3].dispatched, rb.entries[3].written, rb.entries[3].wr_addr, rb.entries[3].request.inst, rb.entries[3].request.mode, rb.entries[3].request.operands[0].value, rb.entries[3].request.operands[0].mode, rb.entries[3].request.inFetch[0], rb.entries[3].request.operands[1].value, rb.entries[3].request.operands[1].mode, rb.entries[3].request.inFetch[1], rb.entries[3].request.operands[2].value, rb.entries[3].request.operands[2].mode, rb.entries[3].request.inFetch[2], rb.entries[3].result.isZero, rb.entries[3].result.isNaR, rb.entries[3].result.out, rb.entries[3].result.lt, rb.entries[3].result.eq, rb.entries[3].result.gt, rb.entries[3].result.exceptions) @[POSIT_Locality.scala 301:39]
        skip @[POSIT_Locality.scala 301:39]
      node _T_1432 = bits(reset, 0, 0) @[POSIT_Locality.scala 307:31]
      node _T_1433 = eq(_T_1432, UInt<1>("h00")) @[POSIT_Locality.scala 307:31]
      when _T_1433 : @[POSIT_Locality.scala 307:31]
        printf(clock, UInt<1>(1), "reg_infetch_cacheline:%b\n", reg_infetch_cacheline) @[POSIT_Locality.scala 307:31]
        skip @[POSIT_Locality.scala 307:31]
      node _T_1434 = bits(reset, 0, 0) @[POSIT_Locality.scala 309:31]
      node _T_1435 = eq(_T_1434, UInt<1>("h00")) @[POSIT_Locality.scala 309:31]
      when _T_1435 : @[POSIT_Locality.scala 309:31]
        printf(clock, UInt<1>(1), "pe: \n") @[POSIT_Locality.scala 309:31]
        skip @[POSIT_Locality.scala 309:31]
      node _T_1436 = bits(reset, 0, 0) @[POSIT_Locality.scala 313:31]
      node _T_1437 = eq(_T_1436, UInt<1>("h00")) @[POSIT_Locality.scala 313:31]
      when _T_1437 : @[POSIT_Locality.scala 313:31]
        printf(clock, UInt<1>(1), "request: valid | ready | num 1 | num2 | num3 | inst | mode\n") @[POSIT_Locality.scala 313:31]
        skip @[POSIT_Locality.scala 313:31]
      node _T_1438 = bits(reset, 0, 0) @[POSIT_Locality.scala 314:31]
      node _T_1439 = eq(_T_1438, UInt<1>("h00")) @[POSIT_Locality.scala 314:31]
      when _T_1439 : @[POSIT_Locality.scala 314:31]
        printf(clock, UInt<1>(1), "\t %b | %b | %b | %b | %b | %x | %x\n", pe.io.request.valid, pe.io.request.ready, pe.io.request.bits.num1, pe.io.request.bits.num2, pe.io.request.bits.num3, pe.io.request.bits.inst, pe.io.request.bits.mode) @[POSIT_Locality.scala 314:31]
        skip @[POSIT_Locality.scala 314:31]
      node _T_1440 = bits(reset, 0, 0) @[POSIT_Locality.scala 315:31]
      node _T_1441 = eq(_T_1440, UInt<1>("h00")) @[POSIT_Locality.scala 315:31]
      when _T_1441 : @[POSIT_Locality.scala 315:31]
        printf(clock, UInt<1>(1), "result: valid | ready | isZero | isNar | out | lt | eq | gt | exceptions\n") @[POSIT_Locality.scala 315:31]
        skip @[POSIT_Locality.scala 315:31]
      node _T_1442 = bits(reset, 0, 0) @[POSIT_Locality.scala 317:31]
      node _T_1443 = eq(_T_1442, UInt<1>("h00")) @[POSIT_Locality.scala 317:31]
      when _T_1443 : @[POSIT_Locality.scala 317:31]
        printf(clock, UInt<1>(1), "\t %b | %b | %b | %b | %x | %b | %b | %b | %x\n", pe.io.result.valid, pe.io.result.ready, pe.io.result.bits.isZero, pe.io.result.bits.isNaR, pe.io.result.bits.out, pe.io.result.bits.lt, pe.io.result.bits.eq, pe.io.result.bits.gt, pe.io.result.bits.exceptions) @[POSIT_Locality.scala 317:31]
        skip @[POSIT_Locality.scala 317:31]
      skip @[POSIT_Locality.scala 266:108]
    
