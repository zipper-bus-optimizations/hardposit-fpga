;buildInfoPackage: chisel3, version: 3.2.8, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit POSIT_Locality : 
  module PositAddCore : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}, flip sub : UInt<1>, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    wire result : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>} @[PositAdd.scala 21:20]
    node _T = gt(io.num1.exponent, io.num2.exponent) @[PositAdd.scala 24:20]
    node _T_1 = eq(io.num1.exponent, io.num2.exponent) @[PositAdd.scala 25:21]
    node _T_2 = gt(io.num1.fraction, io.num2.fraction) @[PositAdd.scala 26:22]
    node _T_3 = and(_T_1, _T_2) @[PositAdd.scala 25:39]
    node num1magGt = or(_T, _T_3) @[PositAdd.scala 24:37]
    node num2AdjSign = xor(io.num2.sign, io.sub) @[PositAdd.scala 27:31]
    node largeSign = mux(num1magGt, io.num1.sign, num2AdjSign) @[PositAdd.scala 29:22]
    node largeExp = mux(num1magGt, io.num1.exponent, io.num2.exponent) @[PositAdd.scala 30:22]
    node _T_4 = mux(num1magGt, io.num1.fraction, io.num2.fraction) @[PositAdd.scala 32:12]
    node largeFrac = cat(_T_4, UInt<3>("h00")) @[Cat.scala 30:58]
    node smallSign = mux(num1magGt, num2AdjSign, io.num1.sign) @[PositAdd.scala 34:22]
    node smallExp = mux(num1magGt, io.num2.exponent, io.num1.exponent) @[PositAdd.scala 35:22]
    node _T_5 = mux(num1magGt, io.num2.fraction, io.num1.fraction) @[PositAdd.scala 37:12]
    node smallFrac = cat(_T_5, UInt<3>("h00")) @[Cat.scala 30:58]
    node _T_6 = sub(largeExp, smallExp) @[PositAdd.scala 39:27]
    node _T_7 = tail(_T_6, 1) @[PositAdd.scala 39:27]
    node _T_8 = asSInt(_T_7) @[PositAdd.scala 39:27]
    node expDiff = asUInt(_T_8) @[PositAdd.scala 39:45]
    node _T_9 = lt(expDiff, UInt<6>("h03d")) @[PositAdd.scala 41:17]
    node _T_10 = dshr(smallFrac, expDiff) @[PositAdd.scala 41:59]
    node shiftedSmallFrac = mux(_T_9, _T_10, UInt<1>("h00")) @[PositAdd.scala 41:8]
    node _T_11 = gt(expDiff, UInt<2>("h03")) @[PositAdd.scala 43:17]
    node _T_12 = sub(expDiff, UInt<2>("h03")) @[PositAdd.scala 44:36]
    node _T_13 = tail(_T_12, 1) @[PositAdd.scala 44:36]
    node _T_14 = dshl(UInt<1>("h01"), _T_13) @[PositAdd.scala 44:24]
    node _T_15 = sub(_T_14, UInt<1>("h01")) @[PositAdd.scala 44:100]
    node _T_16 = tail(_T_15, 1) @[PositAdd.scala 44:100]
    node _T_17 = and(smallFrac, _T_16) @[PositAdd.scala 44:16]
    node _T_18 = neq(_T_17, UInt<1>("h00")) @[PositAdd.scala 44:111]
    node smallFracStickyBit = mux(_T_11, _T_18, UInt<1>("h00")) @[PositAdd.scala 43:8]
    node _T_19 = xor(largeSign, smallSign) @[PositAdd.scala 46:32]
    node isAddition = eq(_T_19, UInt<1>("h00")) @[PositAdd.scala 46:20]
    node _T_20 = not(shiftedSmallFrac) @[PositAdd.scala 48:39]
    node _T_21 = add(_T_20, UInt<1>("h01")) @[PositAdd.scala 48:57]
    node _T_22 = tail(_T_21, 1) @[PositAdd.scala 48:57]
    node signedSmallerFrac = mux(isAddition, shiftedSmallFrac, _T_22) @[PositAdd.scala 48:8]
    node _T_23 = add(largeFrac, signedSmallerFrac) @[PositAdd.scala 50:54]
    wire adderFrac : UInt<62>
    adderFrac <= _T_23
    node _T_24 = bits(adderFrac, 61, 61) @[PositAdd.scala 52:43]
    node sumOverflow = and(isAddition, _T_24) @[PositAdd.scala 52:32]
    node _T_25 = asSInt(sumOverflow) @[PositAdd.scala 54:50]
    node _T_26 = sub(largeExp, _T_25) @[PositAdd.scala 54:30]
    node _T_27 = tail(_T_26, 1) @[PositAdd.scala 54:30]
    node adjAdderExp = asSInt(_T_27) @[PositAdd.scala 54:30]
    node _T_28 = bits(adderFrac, 61, 1) @[PositAdd.scala 56:31]
    node _T_29 = bits(adderFrac, 60, 0) @[PositAdd.scala 56:71]
    node adjAdderFrac = mux(sumOverflow, _T_28, _T_29) @[PositAdd.scala 56:8]
    node _T_30 = bits(adderFrac, 0, 0) @[PositAdd.scala 57:45]
    node sumStickyBit = and(sumOverflow, _T_30) @[PositAdd.scala 57:34]
    node _T_31 = bits(adjAdderFrac, 0, 0) @[common.scala 19:50]
    node _T_32 = bits(adjAdderFrac, 1, 1) @[common.scala 19:50]
    node _T_33 = bits(adjAdderFrac, 2, 2) @[common.scala 19:50]
    node _T_34 = bits(adjAdderFrac, 3, 3) @[common.scala 19:50]
    node _T_35 = bits(adjAdderFrac, 4, 4) @[common.scala 19:50]
    node _T_36 = bits(adjAdderFrac, 5, 5) @[common.scala 19:50]
    node _T_37 = bits(adjAdderFrac, 6, 6) @[common.scala 19:50]
    node _T_38 = bits(adjAdderFrac, 7, 7) @[common.scala 19:50]
    node _T_39 = bits(adjAdderFrac, 8, 8) @[common.scala 19:50]
    node _T_40 = bits(adjAdderFrac, 9, 9) @[common.scala 19:50]
    node _T_41 = bits(adjAdderFrac, 10, 10) @[common.scala 19:50]
    node _T_42 = bits(adjAdderFrac, 11, 11) @[common.scala 19:50]
    node _T_43 = bits(adjAdderFrac, 12, 12) @[common.scala 19:50]
    node _T_44 = bits(adjAdderFrac, 13, 13) @[common.scala 19:50]
    node _T_45 = bits(adjAdderFrac, 14, 14) @[common.scala 19:50]
    node _T_46 = bits(adjAdderFrac, 15, 15) @[common.scala 19:50]
    node _T_47 = bits(adjAdderFrac, 16, 16) @[common.scala 19:50]
    node _T_48 = bits(adjAdderFrac, 17, 17) @[common.scala 19:50]
    node _T_49 = bits(adjAdderFrac, 18, 18) @[common.scala 19:50]
    node _T_50 = bits(adjAdderFrac, 19, 19) @[common.scala 19:50]
    node _T_51 = bits(adjAdderFrac, 20, 20) @[common.scala 19:50]
    node _T_52 = bits(adjAdderFrac, 21, 21) @[common.scala 19:50]
    node _T_53 = bits(adjAdderFrac, 22, 22) @[common.scala 19:50]
    node _T_54 = bits(adjAdderFrac, 23, 23) @[common.scala 19:50]
    node _T_55 = bits(adjAdderFrac, 24, 24) @[common.scala 19:50]
    node _T_56 = bits(adjAdderFrac, 25, 25) @[common.scala 19:50]
    node _T_57 = bits(adjAdderFrac, 26, 26) @[common.scala 19:50]
    node _T_58 = bits(adjAdderFrac, 27, 27) @[common.scala 19:50]
    node _T_59 = bits(adjAdderFrac, 28, 28) @[common.scala 19:50]
    node _T_60 = bits(adjAdderFrac, 29, 29) @[common.scala 19:50]
    node _T_61 = bits(adjAdderFrac, 30, 30) @[common.scala 19:50]
    node _T_62 = bits(adjAdderFrac, 31, 31) @[common.scala 19:50]
    node _T_63 = bits(adjAdderFrac, 32, 32) @[common.scala 19:50]
    node _T_64 = bits(adjAdderFrac, 33, 33) @[common.scala 19:50]
    node _T_65 = bits(adjAdderFrac, 34, 34) @[common.scala 19:50]
    node _T_66 = bits(adjAdderFrac, 35, 35) @[common.scala 19:50]
    node _T_67 = bits(adjAdderFrac, 36, 36) @[common.scala 19:50]
    node _T_68 = bits(adjAdderFrac, 37, 37) @[common.scala 19:50]
    node _T_69 = bits(adjAdderFrac, 38, 38) @[common.scala 19:50]
    node _T_70 = bits(adjAdderFrac, 39, 39) @[common.scala 19:50]
    node _T_71 = bits(adjAdderFrac, 40, 40) @[common.scala 19:50]
    node _T_72 = bits(adjAdderFrac, 41, 41) @[common.scala 19:50]
    node _T_73 = bits(adjAdderFrac, 42, 42) @[common.scala 19:50]
    node _T_74 = bits(adjAdderFrac, 43, 43) @[common.scala 19:50]
    node _T_75 = bits(adjAdderFrac, 44, 44) @[common.scala 19:50]
    node _T_76 = bits(adjAdderFrac, 45, 45) @[common.scala 19:50]
    node _T_77 = bits(adjAdderFrac, 46, 46) @[common.scala 19:50]
    node _T_78 = bits(adjAdderFrac, 47, 47) @[common.scala 19:50]
    node _T_79 = bits(adjAdderFrac, 48, 48) @[common.scala 19:50]
    node _T_80 = bits(adjAdderFrac, 49, 49) @[common.scala 19:50]
    node _T_81 = bits(adjAdderFrac, 50, 50) @[common.scala 19:50]
    node _T_82 = bits(adjAdderFrac, 51, 51) @[common.scala 19:50]
    node _T_83 = bits(adjAdderFrac, 52, 52) @[common.scala 19:50]
    node _T_84 = bits(adjAdderFrac, 53, 53) @[common.scala 19:50]
    node _T_85 = bits(adjAdderFrac, 54, 54) @[common.scala 19:50]
    node _T_86 = bits(adjAdderFrac, 55, 55) @[common.scala 19:50]
    node _T_87 = bits(adjAdderFrac, 56, 56) @[common.scala 19:50]
    node _T_88 = bits(adjAdderFrac, 57, 57) @[common.scala 19:50]
    node _T_89 = bits(adjAdderFrac, 58, 58) @[common.scala 19:50]
    node _T_90 = bits(adjAdderFrac, 59, 59) @[common.scala 19:50]
    node _T_91 = bits(adjAdderFrac, 60, 60) @[common.scala 19:50]
    node _T_92 = mux(_T_32, UInt<6>("h03b"), UInt<6>("h03c")) @[Mux.scala 47:69]
    node _T_93 = mux(_T_33, UInt<6>("h03a"), _T_92) @[Mux.scala 47:69]
    node _T_94 = mux(_T_34, UInt<6>("h039"), _T_93) @[Mux.scala 47:69]
    node _T_95 = mux(_T_35, UInt<6>("h038"), _T_94) @[Mux.scala 47:69]
    node _T_96 = mux(_T_36, UInt<6>("h037"), _T_95) @[Mux.scala 47:69]
    node _T_97 = mux(_T_37, UInt<6>("h036"), _T_96) @[Mux.scala 47:69]
    node _T_98 = mux(_T_38, UInt<6>("h035"), _T_97) @[Mux.scala 47:69]
    node _T_99 = mux(_T_39, UInt<6>("h034"), _T_98) @[Mux.scala 47:69]
    node _T_100 = mux(_T_40, UInt<6>("h033"), _T_99) @[Mux.scala 47:69]
    node _T_101 = mux(_T_41, UInt<6>("h032"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_42, UInt<6>("h031"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_43, UInt<6>("h030"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_44, UInt<6>("h02f"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_45, UInt<6>("h02e"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_46, UInt<6>("h02d"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_47, UInt<6>("h02c"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_48, UInt<6>("h02b"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_49, UInt<6>("h02a"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_50, UInt<6>("h029"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_51, UInt<6>("h028"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_52, UInt<6>("h027"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_53, UInt<6>("h026"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_54, UInt<6>("h025"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_55, UInt<6>("h024"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_56, UInt<6>("h023"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_57, UInt<6>("h022"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_58, UInt<6>("h021"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_59, UInt<6>("h020"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_60, UInt<5>("h01f"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_61, UInt<5>("h01e"), _T_120) @[Mux.scala 47:69]
    node _T_122 = mux(_T_62, UInt<5>("h01d"), _T_121) @[Mux.scala 47:69]
    node _T_123 = mux(_T_63, UInt<5>("h01c"), _T_122) @[Mux.scala 47:69]
    node _T_124 = mux(_T_64, UInt<5>("h01b"), _T_123) @[Mux.scala 47:69]
    node _T_125 = mux(_T_65, UInt<5>("h01a"), _T_124) @[Mux.scala 47:69]
    node _T_126 = mux(_T_66, UInt<5>("h019"), _T_125) @[Mux.scala 47:69]
    node _T_127 = mux(_T_67, UInt<5>("h018"), _T_126) @[Mux.scala 47:69]
    node _T_128 = mux(_T_68, UInt<5>("h017"), _T_127) @[Mux.scala 47:69]
    node _T_129 = mux(_T_69, UInt<5>("h016"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_70, UInt<5>("h015"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_71, UInt<5>("h014"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_72, UInt<5>("h013"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_73, UInt<5>("h012"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_74, UInt<5>("h011"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_75, UInt<5>("h010"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_76, UInt<4>("h0f"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_77, UInt<4>("h0e"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_78, UInt<4>("h0d"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_79, UInt<4>("h0c"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_80, UInt<4>("h0b"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_81, UInt<4>("h0a"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_82, UInt<4>("h09"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_83, UInt<4>("h08"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_84, UInt<3>("h07"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_85, UInt<3>("h06"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_86, UInt<3>("h05"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_87, UInt<3>("h04"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_88, UInt<2>("h03"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_89, UInt<2>("h02"), _T_148) @[Mux.scala 47:69]
    node _T_150 = mux(_T_90, UInt<1>("h01"), _T_149) @[Mux.scala 47:69]
    node normalizationFactor = mux(_T_91, UInt<1>("h00"), _T_150) @[Mux.scala 47:69]
    node _T_151 = asSInt(normalizationFactor) @[PositAdd.scala 61:62]
    node _T_152 = sub(adjAdderExp, _T_151) @[PositAdd.scala 61:34]
    node _T_153 = tail(_T_152, 1) @[PositAdd.scala 61:34]
    node normExponent = asSInt(_T_153) @[PositAdd.scala 61:34]
    node normFraction = dshl(adjAdderFrac, normalizationFactor) @[PositAdd.scala 62:35]
    node _T_154 = or(io.num1.isNaR, io.num2.isNaR) @[PositAdd.scala 64:33]
    result.isNaR <= _T_154 @[PositAdd.scala 64:19]
    node _T_155 = and(io.num1.isZero, io.num2.isZero) @[PositAdd.scala 65:35]
    node _T_156 = eq(adderFrac, UInt<1>("h00")) @[PositAdd.scala 65:64]
    node _T_157 = or(_T_155, _T_156) @[PositAdd.scala 65:51]
    result.isZero <= _T_157 @[PositAdd.scala 65:19]
    result.sign <= largeSign @[PositAdd.scala 66:19]
    result.exponent <= normExponent @[PositAdd.scala 67:19]
    node _T_158 = bits(normFraction, 60, 3) @[PositAdd.scala 68:34]
    result.fraction <= _T_158 @[PositAdd.scala 68:19]
    node _T_159 = bits(normFraction, 2, 1) @[PositAdd.scala 70:34]
    io.trailingBits <= _T_159 @[PositAdd.scala 70:19]
    node _T_160 = bits(normFraction, 0, 0) @[PositAdd.scala 71:49]
    node _T_161 = neq(_T_160, UInt<1>("h00")) @[PositAdd.scala 71:76]
    node _T_162 = or(sumStickyBit, _T_161) @[PositAdd.scala 71:35]
    io.stickyBit <= _T_162 @[PositAdd.scala 71:19]
    io.out.isNaR <= result.isNaR @[PositAdd.scala 73:10]
    io.out.isZero <= result.isZero @[PositAdd.scala 73:10]
    io.out.fraction <= result.fraction @[PositAdd.scala 73:10]
    io.out.exponent <= result.exponent @[PositAdd.scala 73:10]
    io.out.sign <= result.sign @[PositAdd.scala 73:10]
    
  module PositCompare : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : SInt<64>, flip num2 : SInt<64>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>}
    
    node _T = lt(io.num1, io.num2) @[PositCompare.scala 14:21]
    io.lt <= _T @[PositCompare.scala 14:9]
    node _T_1 = eq(io.num1, io.num2) @[PositCompare.scala 15:21]
    io.eq <= _T_1 @[PositCompare.scala 15:9]
    node _T_2 = eq(io.lt, UInt<1>("h00")) @[PositCompare.scala 16:13]
    node _T_3 = eq(io.eq, UInt<1>("h00")) @[PositCompare.scala 16:23]
    node _T_4 = and(_T_2, _T_3) @[PositCompare.scala 16:20]
    io.gt <= _T_4 @[PositCompare.scala 16:9]
    
  module PositFMACore : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}, flip num3 : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}, flip sub : UInt<1>, flip negate : UInt<1>, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    node _T = xor(io.num1.sign, io.num2.sign) @[PositFMA.scala 24:31]
    node productSign = xor(_T, io.negate) @[PositFMA.scala 24:43]
    node _T_1 = xor(io.num3.sign, io.negate) @[PositFMA.scala 25:31]
    node addendSign = xor(_T_1, io.sub) @[PositFMA.scala 25:43]
    node productExponent = add(io.num1.exponent, io.num2.exponent) @[PositFMA.scala 27:39]
    node _T_2 = mul(io.num1.fraction, io.num2.fraction) @[PositFMA.scala 29:63]
    wire productFraction : UInt<116>
    productFraction <= _T_2
    node prodOverflow = bits(productFraction, 115, 115) @[PositFMA.scala 31:44]
    node _T_3 = bits(productFraction, 115, 1) @[PositFMA.scala 33:38]
    node _T_4 = bits(productFraction, 114, 0) @[PositFMA.scala 33:89]
    node normProductFraction = mux(prodOverflow, _T_3, _T_4) @[PositFMA.scala 33:8]
    node _T_5 = cat(UInt<1>("h00"), prodOverflow) @[Cat.scala 30:58]
    node _T_6 = asSInt(_T_5) @[PositFMA.scala 34:76]
    node _T_7 = add(productExponent, _T_6) @[PositFMA.scala 34:45]
    node _T_8 = tail(_T_7, 1) @[PositFMA.scala 34:45]
    node normProductExponent = asSInt(_T_8) @[PositFMA.scala 34:45]
    node _T_9 = bits(productFraction, 0, 0) @[PositFMA.scala 35:59]
    node prodStickyBit = and(prodOverflow, _T_9) @[PositFMA.scala 35:42]
    node _T_10 = cat(io.num3.fraction, UInt<57>("h00")) @[Cat.scala 30:58]
    node addendFraction = mux(io.num3.isZero, UInt<1>("h00"), _T_10) @[PositFMA.scala 38:27]
    node _T_11 = not(io.num3.isZero) @[PositFMA.scala 42:5]
    node _T_12 = gt(io.num3.exponent, normProductExponent) @[PositFMA.scala 43:24]
    node _T_13 = eq(io.num3.exponent, normProductExponent) @[PositFMA.scala 44:25]
    node _T_14 = gt(addendFraction, normProductFraction) @[PositFMA.scala 44:68]
    node _T_15 = and(_T_13, _T_14) @[PositFMA.scala 44:49]
    node _T_16 = or(_T_12, _T_15) @[PositFMA.scala 43:47]
    node isAddendGtProduct = and(_T_11, _T_16) @[PositFMA.scala 42:19]
    node gExp = mux(isAddendGtProduct, io.num3.exponent, normProductExponent) @[PositFMA.scala 46:18]
    node gFrac = mux(isAddendGtProduct, addendFraction, normProductFraction) @[PositFMA.scala 47:18]
    node gSign = mux(isAddendGtProduct, addendSign, productSign) @[PositFMA.scala 48:18]
    node lExp = mux(isAddendGtProduct, normProductExponent, io.num3.exponent) @[PositFMA.scala 50:18]
    node lFrac = mux(isAddendGtProduct, normProductFraction, addendFraction) @[PositFMA.scala 51:18]
    node lSign = mux(isAddendGtProduct, productSign, addendSign) @[PositFMA.scala 52:18]
    node _T_17 = sub(gExp, lExp) @[PositFMA.scala 54:23]
    node _T_18 = tail(_T_17, 1) @[PositFMA.scala 54:23]
    node _T_19 = asSInt(_T_18) @[PositFMA.scala 54:23]
    node expDiff = asUInt(_T_19) @[PositFMA.scala 54:37]
    node shftInBound = lt(expDiff, UInt<7>("h073")) @[PositFMA.scala 55:29]
    node _T_20 = dshr(lFrac, expDiff) @[PositFMA.scala 57:28]
    node shiftedLFrac = mux(shftInBound, _T_20, UInt<116>("h00")) @[PositFMA.scala 57:8]
    node _T_21 = dshl(UInt<1>("h01"), expDiff) @[OneHot.scala 58:35]
    node _T_22 = sub(_T_21, UInt<1>("h01")) @[common.scala 23:44]
    node _T_23 = tail(_T_22, 1) @[common.scala 23:44]
    node lfracStickyMask = bits(_T_23, 115, 0) @[PositFMA.scala 59:26]
    node _T_24 = and(lFrac, lfracStickyMask) @[PositFMA.scala 60:31]
    node lFracStickyBit = neq(_T_24, UInt<1>("h00")) @[PositFMA.scala 60:53]
    node _T_25 = xor(gSign, lSign) @[PositFMA.scala 62:28]
    node isAddition = not(_T_25) @[PositFMA.scala 62:20]
    node _T_26 = not(shiftedLFrac) @[PositFMA.scala 64:35]
    node _T_27 = add(_T_26, UInt<1>("h01")) @[PositFMA.scala 64:49]
    node _T_28 = tail(_T_27, 1) @[PositFMA.scala 64:49]
    node signedLFrac = mux(isAddition, shiftedLFrac, _T_28) @[PositFMA.scala 64:8]
    node _T_29 = add(gFrac, signedLFrac) @[PositFMA.scala 66:55]
    wire fmaFraction : UInt<116>
    fmaFraction <= _T_29
    node _T_30 = bits(fmaFraction, 115, 115) @[PositFMA.scala 68:45]
    node fmaOverflow = and(isAddition, _T_30) @[PositFMA.scala 68:32]
    node _T_31 = bits(fmaFraction, 114, 0) @[PositFMA.scala 70:50]
    node _T_32 = cat(_T_31, UInt<1>("h00")) @[Cat.scala 30:58]
    node adjFmaFraction = mux(fmaOverflow, fmaFraction, _T_32) @[PositFMA.scala 70:8]
    node _T_33 = cat(UInt<1>("h00"), fmaOverflow) @[Cat.scala 30:58]
    node _T_34 = asSInt(_T_33) @[PositFMA.scala 71:59]
    node _T_35 = add(gExp, _T_34) @[PositFMA.scala 71:29]
    node _T_36 = tail(_T_35, 1) @[PositFMA.scala 71:29]
    node adjFmaExponent = asSInt(_T_36) @[PositFMA.scala 71:29]
    node _T_37 = bits(adjFmaFraction, 0, 0) @[common.scala 19:50]
    node _T_38 = bits(adjFmaFraction, 1, 1) @[common.scala 19:50]
    node _T_39 = bits(adjFmaFraction, 2, 2) @[common.scala 19:50]
    node _T_40 = bits(adjFmaFraction, 3, 3) @[common.scala 19:50]
    node _T_41 = bits(adjFmaFraction, 4, 4) @[common.scala 19:50]
    node _T_42 = bits(adjFmaFraction, 5, 5) @[common.scala 19:50]
    node _T_43 = bits(adjFmaFraction, 6, 6) @[common.scala 19:50]
    node _T_44 = bits(adjFmaFraction, 7, 7) @[common.scala 19:50]
    node _T_45 = bits(adjFmaFraction, 8, 8) @[common.scala 19:50]
    node _T_46 = bits(adjFmaFraction, 9, 9) @[common.scala 19:50]
    node _T_47 = bits(adjFmaFraction, 10, 10) @[common.scala 19:50]
    node _T_48 = bits(adjFmaFraction, 11, 11) @[common.scala 19:50]
    node _T_49 = bits(adjFmaFraction, 12, 12) @[common.scala 19:50]
    node _T_50 = bits(adjFmaFraction, 13, 13) @[common.scala 19:50]
    node _T_51 = bits(adjFmaFraction, 14, 14) @[common.scala 19:50]
    node _T_52 = bits(adjFmaFraction, 15, 15) @[common.scala 19:50]
    node _T_53 = bits(adjFmaFraction, 16, 16) @[common.scala 19:50]
    node _T_54 = bits(adjFmaFraction, 17, 17) @[common.scala 19:50]
    node _T_55 = bits(adjFmaFraction, 18, 18) @[common.scala 19:50]
    node _T_56 = bits(adjFmaFraction, 19, 19) @[common.scala 19:50]
    node _T_57 = bits(adjFmaFraction, 20, 20) @[common.scala 19:50]
    node _T_58 = bits(adjFmaFraction, 21, 21) @[common.scala 19:50]
    node _T_59 = bits(adjFmaFraction, 22, 22) @[common.scala 19:50]
    node _T_60 = bits(adjFmaFraction, 23, 23) @[common.scala 19:50]
    node _T_61 = bits(adjFmaFraction, 24, 24) @[common.scala 19:50]
    node _T_62 = bits(adjFmaFraction, 25, 25) @[common.scala 19:50]
    node _T_63 = bits(adjFmaFraction, 26, 26) @[common.scala 19:50]
    node _T_64 = bits(adjFmaFraction, 27, 27) @[common.scala 19:50]
    node _T_65 = bits(adjFmaFraction, 28, 28) @[common.scala 19:50]
    node _T_66 = bits(adjFmaFraction, 29, 29) @[common.scala 19:50]
    node _T_67 = bits(adjFmaFraction, 30, 30) @[common.scala 19:50]
    node _T_68 = bits(adjFmaFraction, 31, 31) @[common.scala 19:50]
    node _T_69 = bits(adjFmaFraction, 32, 32) @[common.scala 19:50]
    node _T_70 = bits(adjFmaFraction, 33, 33) @[common.scala 19:50]
    node _T_71 = bits(adjFmaFraction, 34, 34) @[common.scala 19:50]
    node _T_72 = bits(adjFmaFraction, 35, 35) @[common.scala 19:50]
    node _T_73 = bits(adjFmaFraction, 36, 36) @[common.scala 19:50]
    node _T_74 = bits(adjFmaFraction, 37, 37) @[common.scala 19:50]
    node _T_75 = bits(adjFmaFraction, 38, 38) @[common.scala 19:50]
    node _T_76 = bits(adjFmaFraction, 39, 39) @[common.scala 19:50]
    node _T_77 = bits(adjFmaFraction, 40, 40) @[common.scala 19:50]
    node _T_78 = bits(adjFmaFraction, 41, 41) @[common.scala 19:50]
    node _T_79 = bits(adjFmaFraction, 42, 42) @[common.scala 19:50]
    node _T_80 = bits(adjFmaFraction, 43, 43) @[common.scala 19:50]
    node _T_81 = bits(adjFmaFraction, 44, 44) @[common.scala 19:50]
    node _T_82 = bits(adjFmaFraction, 45, 45) @[common.scala 19:50]
    node _T_83 = bits(adjFmaFraction, 46, 46) @[common.scala 19:50]
    node _T_84 = bits(adjFmaFraction, 47, 47) @[common.scala 19:50]
    node _T_85 = bits(adjFmaFraction, 48, 48) @[common.scala 19:50]
    node _T_86 = bits(adjFmaFraction, 49, 49) @[common.scala 19:50]
    node _T_87 = bits(adjFmaFraction, 50, 50) @[common.scala 19:50]
    node _T_88 = bits(adjFmaFraction, 51, 51) @[common.scala 19:50]
    node _T_89 = bits(adjFmaFraction, 52, 52) @[common.scala 19:50]
    node _T_90 = bits(adjFmaFraction, 53, 53) @[common.scala 19:50]
    node _T_91 = bits(adjFmaFraction, 54, 54) @[common.scala 19:50]
    node _T_92 = bits(adjFmaFraction, 55, 55) @[common.scala 19:50]
    node _T_93 = bits(adjFmaFraction, 56, 56) @[common.scala 19:50]
    node _T_94 = bits(adjFmaFraction, 57, 57) @[common.scala 19:50]
    node _T_95 = bits(adjFmaFraction, 58, 58) @[common.scala 19:50]
    node _T_96 = bits(adjFmaFraction, 59, 59) @[common.scala 19:50]
    node _T_97 = bits(adjFmaFraction, 60, 60) @[common.scala 19:50]
    node _T_98 = bits(adjFmaFraction, 61, 61) @[common.scala 19:50]
    node _T_99 = bits(adjFmaFraction, 62, 62) @[common.scala 19:50]
    node _T_100 = bits(adjFmaFraction, 63, 63) @[common.scala 19:50]
    node _T_101 = bits(adjFmaFraction, 64, 64) @[common.scala 19:50]
    node _T_102 = bits(adjFmaFraction, 65, 65) @[common.scala 19:50]
    node _T_103 = bits(adjFmaFraction, 66, 66) @[common.scala 19:50]
    node _T_104 = bits(adjFmaFraction, 67, 67) @[common.scala 19:50]
    node _T_105 = bits(adjFmaFraction, 68, 68) @[common.scala 19:50]
    node _T_106 = bits(adjFmaFraction, 69, 69) @[common.scala 19:50]
    node _T_107 = bits(adjFmaFraction, 70, 70) @[common.scala 19:50]
    node _T_108 = bits(adjFmaFraction, 71, 71) @[common.scala 19:50]
    node _T_109 = bits(adjFmaFraction, 72, 72) @[common.scala 19:50]
    node _T_110 = bits(adjFmaFraction, 73, 73) @[common.scala 19:50]
    node _T_111 = bits(adjFmaFraction, 74, 74) @[common.scala 19:50]
    node _T_112 = bits(adjFmaFraction, 75, 75) @[common.scala 19:50]
    node _T_113 = bits(adjFmaFraction, 76, 76) @[common.scala 19:50]
    node _T_114 = bits(adjFmaFraction, 77, 77) @[common.scala 19:50]
    node _T_115 = bits(adjFmaFraction, 78, 78) @[common.scala 19:50]
    node _T_116 = bits(adjFmaFraction, 79, 79) @[common.scala 19:50]
    node _T_117 = bits(adjFmaFraction, 80, 80) @[common.scala 19:50]
    node _T_118 = bits(adjFmaFraction, 81, 81) @[common.scala 19:50]
    node _T_119 = bits(adjFmaFraction, 82, 82) @[common.scala 19:50]
    node _T_120 = bits(adjFmaFraction, 83, 83) @[common.scala 19:50]
    node _T_121 = bits(adjFmaFraction, 84, 84) @[common.scala 19:50]
    node _T_122 = bits(adjFmaFraction, 85, 85) @[common.scala 19:50]
    node _T_123 = bits(adjFmaFraction, 86, 86) @[common.scala 19:50]
    node _T_124 = bits(adjFmaFraction, 87, 87) @[common.scala 19:50]
    node _T_125 = bits(adjFmaFraction, 88, 88) @[common.scala 19:50]
    node _T_126 = bits(adjFmaFraction, 89, 89) @[common.scala 19:50]
    node _T_127 = bits(adjFmaFraction, 90, 90) @[common.scala 19:50]
    node _T_128 = bits(adjFmaFraction, 91, 91) @[common.scala 19:50]
    node _T_129 = bits(adjFmaFraction, 92, 92) @[common.scala 19:50]
    node _T_130 = bits(adjFmaFraction, 93, 93) @[common.scala 19:50]
    node _T_131 = bits(adjFmaFraction, 94, 94) @[common.scala 19:50]
    node _T_132 = bits(adjFmaFraction, 95, 95) @[common.scala 19:50]
    node _T_133 = bits(adjFmaFraction, 96, 96) @[common.scala 19:50]
    node _T_134 = bits(adjFmaFraction, 97, 97) @[common.scala 19:50]
    node _T_135 = bits(adjFmaFraction, 98, 98) @[common.scala 19:50]
    node _T_136 = bits(adjFmaFraction, 99, 99) @[common.scala 19:50]
    node _T_137 = bits(adjFmaFraction, 100, 100) @[common.scala 19:50]
    node _T_138 = bits(adjFmaFraction, 101, 101) @[common.scala 19:50]
    node _T_139 = bits(adjFmaFraction, 102, 102) @[common.scala 19:50]
    node _T_140 = bits(adjFmaFraction, 103, 103) @[common.scala 19:50]
    node _T_141 = bits(adjFmaFraction, 104, 104) @[common.scala 19:50]
    node _T_142 = bits(adjFmaFraction, 105, 105) @[common.scala 19:50]
    node _T_143 = bits(adjFmaFraction, 106, 106) @[common.scala 19:50]
    node _T_144 = bits(adjFmaFraction, 107, 107) @[common.scala 19:50]
    node _T_145 = bits(adjFmaFraction, 108, 108) @[common.scala 19:50]
    node _T_146 = bits(adjFmaFraction, 109, 109) @[common.scala 19:50]
    node _T_147 = bits(adjFmaFraction, 110, 110) @[common.scala 19:50]
    node _T_148 = bits(adjFmaFraction, 111, 111) @[common.scala 19:50]
    node _T_149 = bits(adjFmaFraction, 112, 112) @[common.scala 19:50]
    node _T_150 = bits(adjFmaFraction, 113, 113) @[common.scala 19:50]
    node _T_151 = bits(adjFmaFraction, 114, 114) @[common.scala 19:50]
    node _T_152 = bits(adjFmaFraction, 115, 115) @[common.scala 19:50]
    node _T_153 = mux(_T_38, UInt<7>("h072"), UInt<7>("h073")) @[Mux.scala 47:69]
    node _T_154 = mux(_T_39, UInt<7>("h071"), _T_153) @[Mux.scala 47:69]
    node _T_155 = mux(_T_40, UInt<7>("h070"), _T_154) @[Mux.scala 47:69]
    node _T_156 = mux(_T_41, UInt<7>("h06f"), _T_155) @[Mux.scala 47:69]
    node _T_157 = mux(_T_42, UInt<7>("h06e"), _T_156) @[Mux.scala 47:69]
    node _T_158 = mux(_T_43, UInt<7>("h06d"), _T_157) @[Mux.scala 47:69]
    node _T_159 = mux(_T_44, UInt<7>("h06c"), _T_158) @[Mux.scala 47:69]
    node _T_160 = mux(_T_45, UInt<7>("h06b"), _T_159) @[Mux.scala 47:69]
    node _T_161 = mux(_T_46, UInt<7>("h06a"), _T_160) @[Mux.scala 47:69]
    node _T_162 = mux(_T_47, UInt<7>("h069"), _T_161) @[Mux.scala 47:69]
    node _T_163 = mux(_T_48, UInt<7>("h068"), _T_162) @[Mux.scala 47:69]
    node _T_164 = mux(_T_49, UInt<7>("h067"), _T_163) @[Mux.scala 47:69]
    node _T_165 = mux(_T_50, UInt<7>("h066"), _T_164) @[Mux.scala 47:69]
    node _T_166 = mux(_T_51, UInt<7>("h065"), _T_165) @[Mux.scala 47:69]
    node _T_167 = mux(_T_52, UInt<7>("h064"), _T_166) @[Mux.scala 47:69]
    node _T_168 = mux(_T_53, UInt<7>("h063"), _T_167) @[Mux.scala 47:69]
    node _T_169 = mux(_T_54, UInt<7>("h062"), _T_168) @[Mux.scala 47:69]
    node _T_170 = mux(_T_55, UInt<7>("h061"), _T_169) @[Mux.scala 47:69]
    node _T_171 = mux(_T_56, UInt<7>("h060"), _T_170) @[Mux.scala 47:69]
    node _T_172 = mux(_T_57, UInt<7>("h05f"), _T_171) @[Mux.scala 47:69]
    node _T_173 = mux(_T_58, UInt<7>("h05e"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_59, UInt<7>("h05d"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_60, UInt<7>("h05c"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_61, UInt<7>("h05b"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_62, UInt<7>("h05a"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_63, UInt<7>("h059"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_64, UInt<7>("h058"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_65, UInt<7>("h057"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_66, UInt<7>("h056"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_67, UInt<7>("h055"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_68, UInt<7>("h054"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_69, UInt<7>("h053"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_70, UInt<7>("h052"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_71, UInt<7>("h051"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_72, UInt<7>("h050"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_73, UInt<7>("h04f"), _T_187) @[Mux.scala 47:69]
    node _T_189 = mux(_T_74, UInt<7>("h04e"), _T_188) @[Mux.scala 47:69]
    node _T_190 = mux(_T_75, UInt<7>("h04d"), _T_189) @[Mux.scala 47:69]
    node _T_191 = mux(_T_76, UInt<7>("h04c"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_77, UInt<7>("h04b"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_78, UInt<7>("h04a"), _T_192) @[Mux.scala 47:69]
    node _T_194 = mux(_T_79, UInt<7>("h049"), _T_193) @[Mux.scala 47:69]
    node _T_195 = mux(_T_80, UInt<7>("h048"), _T_194) @[Mux.scala 47:69]
    node _T_196 = mux(_T_81, UInt<7>("h047"), _T_195) @[Mux.scala 47:69]
    node _T_197 = mux(_T_82, UInt<7>("h046"), _T_196) @[Mux.scala 47:69]
    node _T_198 = mux(_T_83, UInt<7>("h045"), _T_197) @[Mux.scala 47:69]
    node _T_199 = mux(_T_84, UInt<7>("h044"), _T_198) @[Mux.scala 47:69]
    node _T_200 = mux(_T_85, UInt<7>("h043"), _T_199) @[Mux.scala 47:69]
    node _T_201 = mux(_T_86, UInt<7>("h042"), _T_200) @[Mux.scala 47:69]
    node _T_202 = mux(_T_87, UInt<7>("h041"), _T_201) @[Mux.scala 47:69]
    node _T_203 = mux(_T_88, UInt<7>("h040"), _T_202) @[Mux.scala 47:69]
    node _T_204 = mux(_T_89, UInt<6>("h03f"), _T_203) @[Mux.scala 47:69]
    node _T_205 = mux(_T_90, UInt<6>("h03e"), _T_204) @[Mux.scala 47:69]
    node _T_206 = mux(_T_91, UInt<6>("h03d"), _T_205) @[Mux.scala 47:69]
    node _T_207 = mux(_T_92, UInt<6>("h03c"), _T_206) @[Mux.scala 47:69]
    node _T_208 = mux(_T_93, UInt<6>("h03b"), _T_207) @[Mux.scala 47:69]
    node _T_209 = mux(_T_94, UInt<6>("h03a"), _T_208) @[Mux.scala 47:69]
    node _T_210 = mux(_T_95, UInt<6>("h039"), _T_209) @[Mux.scala 47:69]
    node _T_211 = mux(_T_96, UInt<6>("h038"), _T_210) @[Mux.scala 47:69]
    node _T_212 = mux(_T_97, UInt<6>("h037"), _T_211) @[Mux.scala 47:69]
    node _T_213 = mux(_T_98, UInt<6>("h036"), _T_212) @[Mux.scala 47:69]
    node _T_214 = mux(_T_99, UInt<6>("h035"), _T_213) @[Mux.scala 47:69]
    node _T_215 = mux(_T_100, UInt<6>("h034"), _T_214) @[Mux.scala 47:69]
    node _T_216 = mux(_T_101, UInt<6>("h033"), _T_215) @[Mux.scala 47:69]
    node _T_217 = mux(_T_102, UInt<6>("h032"), _T_216) @[Mux.scala 47:69]
    node _T_218 = mux(_T_103, UInt<6>("h031"), _T_217) @[Mux.scala 47:69]
    node _T_219 = mux(_T_104, UInt<6>("h030"), _T_218) @[Mux.scala 47:69]
    node _T_220 = mux(_T_105, UInt<6>("h02f"), _T_219) @[Mux.scala 47:69]
    node _T_221 = mux(_T_106, UInt<6>("h02e"), _T_220) @[Mux.scala 47:69]
    node _T_222 = mux(_T_107, UInt<6>("h02d"), _T_221) @[Mux.scala 47:69]
    node _T_223 = mux(_T_108, UInt<6>("h02c"), _T_222) @[Mux.scala 47:69]
    node _T_224 = mux(_T_109, UInt<6>("h02b"), _T_223) @[Mux.scala 47:69]
    node _T_225 = mux(_T_110, UInt<6>("h02a"), _T_224) @[Mux.scala 47:69]
    node _T_226 = mux(_T_111, UInt<6>("h029"), _T_225) @[Mux.scala 47:69]
    node _T_227 = mux(_T_112, UInt<6>("h028"), _T_226) @[Mux.scala 47:69]
    node _T_228 = mux(_T_113, UInt<6>("h027"), _T_227) @[Mux.scala 47:69]
    node _T_229 = mux(_T_114, UInt<6>("h026"), _T_228) @[Mux.scala 47:69]
    node _T_230 = mux(_T_115, UInt<6>("h025"), _T_229) @[Mux.scala 47:69]
    node _T_231 = mux(_T_116, UInt<6>("h024"), _T_230) @[Mux.scala 47:69]
    node _T_232 = mux(_T_117, UInt<6>("h023"), _T_231) @[Mux.scala 47:69]
    node _T_233 = mux(_T_118, UInt<6>("h022"), _T_232) @[Mux.scala 47:69]
    node _T_234 = mux(_T_119, UInt<6>("h021"), _T_233) @[Mux.scala 47:69]
    node _T_235 = mux(_T_120, UInt<6>("h020"), _T_234) @[Mux.scala 47:69]
    node _T_236 = mux(_T_121, UInt<5>("h01f"), _T_235) @[Mux.scala 47:69]
    node _T_237 = mux(_T_122, UInt<5>("h01e"), _T_236) @[Mux.scala 47:69]
    node _T_238 = mux(_T_123, UInt<5>("h01d"), _T_237) @[Mux.scala 47:69]
    node _T_239 = mux(_T_124, UInt<5>("h01c"), _T_238) @[Mux.scala 47:69]
    node _T_240 = mux(_T_125, UInt<5>("h01b"), _T_239) @[Mux.scala 47:69]
    node _T_241 = mux(_T_126, UInt<5>("h01a"), _T_240) @[Mux.scala 47:69]
    node _T_242 = mux(_T_127, UInt<5>("h019"), _T_241) @[Mux.scala 47:69]
    node _T_243 = mux(_T_128, UInt<5>("h018"), _T_242) @[Mux.scala 47:69]
    node _T_244 = mux(_T_129, UInt<5>("h017"), _T_243) @[Mux.scala 47:69]
    node _T_245 = mux(_T_130, UInt<5>("h016"), _T_244) @[Mux.scala 47:69]
    node _T_246 = mux(_T_131, UInt<5>("h015"), _T_245) @[Mux.scala 47:69]
    node _T_247 = mux(_T_132, UInt<5>("h014"), _T_246) @[Mux.scala 47:69]
    node _T_248 = mux(_T_133, UInt<5>("h013"), _T_247) @[Mux.scala 47:69]
    node _T_249 = mux(_T_134, UInt<5>("h012"), _T_248) @[Mux.scala 47:69]
    node _T_250 = mux(_T_135, UInt<5>("h011"), _T_249) @[Mux.scala 47:69]
    node _T_251 = mux(_T_136, UInt<5>("h010"), _T_250) @[Mux.scala 47:69]
    node _T_252 = mux(_T_137, UInt<4>("h0f"), _T_251) @[Mux.scala 47:69]
    node _T_253 = mux(_T_138, UInt<4>("h0e"), _T_252) @[Mux.scala 47:69]
    node _T_254 = mux(_T_139, UInt<4>("h0d"), _T_253) @[Mux.scala 47:69]
    node _T_255 = mux(_T_140, UInt<4>("h0c"), _T_254) @[Mux.scala 47:69]
    node _T_256 = mux(_T_141, UInt<4>("h0b"), _T_255) @[Mux.scala 47:69]
    node _T_257 = mux(_T_142, UInt<4>("h0a"), _T_256) @[Mux.scala 47:69]
    node _T_258 = mux(_T_143, UInt<4>("h09"), _T_257) @[Mux.scala 47:69]
    node _T_259 = mux(_T_144, UInt<4>("h08"), _T_258) @[Mux.scala 47:69]
    node _T_260 = mux(_T_145, UInt<3>("h07"), _T_259) @[Mux.scala 47:69]
    node _T_261 = mux(_T_146, UInt<3>("h06"), _T_260) @[Mux.scala 47:69]
    node _T_262 = mux(_T_147, UInt<3>("h05"), _T_261) @[Mux.scala 47:69]
    node _T_263 = mux(_T_148, UInt<3>("h04"), _T_262) @[Mux.scala 47:69]
    node _T_264 = mux(_T_149, UInt<2>("h03"), _T_263) @[Mux.scala 47:69]
    node _T_265 = mux(_T_150, UInt<2>("h02"), _T_264) @[Mux.scala 47:69]
    node _T_266 = mux(_T_151, UInt<1>("h01"), _T_265) @[Mux.scala 47:69]
    node normalizationFactor = mux(_T_152, UInt<1>("h00"), _T_266) @[Mux.scala 47:69]
    node _T_267 = asSInt(normalizationFactor) @[PositFMA.scala 74:69]
    node normFmaExponent = sub(adjFmaExponent, _T_267) @[PositFMA.scala 74:40]
    node _T_268 = dshl(adjFmaFraction, normalizationFactor) @[PositFMA.scala 75:41]
    node normFmaFraction = bits(_T_268, 115, 0) @[PositFMA.scala 75:64]
    wire result : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>} @[PositFMA.scala 77:20]
    node _T_269 = or(io.num1.isNaR, io.num2.isNaR) @[PositFMA.scala 78:33]
    node _T_270 = or(_T_269, io.num3.isNaR) @[PositFMA.scala 78:46]
    result.isNaR <= _T_270 @[PositFMA.scala 78:19]
    node _T_271 = eq(result.isNaR, UInt<1>("h00")) @[PositFMA.scala 79:22]
    node _T_272 = or(io.num1.isZero, io.num2.isZero) @[PositFMA.scala 79:52]
    node _T_273 = and(_T_272, io.num3.isZero) @[PositFMA.scala 79:67]
    node _T_274 = and(_T_271, _T_273) @[PositFMA.scala 79:36]
    result.isZero <= _T_274 @[PositFMA.scala 79:19]
    result.sign <= gSign @[PositFMA.scala 80:19]
    result.exponent <= normFmaExponent @[PositFMA.scala 81:19]
    node _T_275 = bits(normFmaFraction, 115, 58) @[PositFMA.scala 82:37]
    result.fraction <= _T_275 @[PositFMA.scala 82:19]
    node _T_276 = bits(normFmaFraction, 57, 56) @[PositFMA.scala 84:37]
    io.trailingBits <= _T_276 @[PositFMA.scala 84:19]
    node _T_277 = or(prodStickyBit, lFracStickyBit) @[PositFMA.scala 85:36]
    node _T_278 = bits(normFmaFraction, 55, 0) @[PositFMA.scala 85:70]
    node _T_279 = neq(_T_278, UInt<1>("h00")) @[PositFMA.scala 85:130]
    node _T_280 = or(_T_277, _T_279) @[PositFMA.scala 85:53]
    io.stickyBit <= _T_280 @[PositFMA.scala 85:19]
    io.out.isNaR <= result.isNaR @[PositFMA.scala 87:10]
    io.out.isZero <= result.isZero @[PositFMA.scala 87:10]
    io.out.fraction <= result.fraction @[PositFMA.scala 87:10]
    io.out.exponent <= result.exponent @[PositFMA.scala 87:10]
    io.out.sign <= result.sign @[PositFMA.scala 87:10]
    
  module PositDivSqrtCore : 
    input clock : Clock
    input reset : Reset
    output io : {flip validIn : UInt<1>, readyIn : UInt<1>, flip sqrtOp : UInt<1>, flip num1 : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}, validOut_div : UInt<1>, validOut_sqrt : UInt<1>, exceptions : UInt<5>, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    reg cycleCount : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[PositDivSqrt.scala 27:27]
    reg sqrtOp_stored : UInt<1>, clock @[PositDivSqrt.scala 29:26]
    reg isNaR_out : UInt<1>, clock @[PositDivSqrt.scala 30:26]
    reg isZero_out : UInt<1>, clock @[PositDivSqrt.scala 31:26]
    reg exec_out : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[PositDivSqrt.scala 32:30]
    reg sign_out : UInt<1>, clock @[PositDivSqrt.scala 33:26]
    reg divSqrtExp : SInt<12>, clock with : (reset => (reset, asSInt(UInt<12>("h00")))) @[PositDivSqrt.scala 34:30]
    reg divSqrtFrac : UInt<62>, clock with : (reset => (reset, UInt<62>("h00"))) @[PositDivSqrt.scala 35:30]
    wire frac_out : UInt<62>
    frac_out <= UInt<62>("h00")
    wire exp_out : SInt<12>
    exp_out <= asSInt(UInt<12>("h00"))
    wire _T : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>} @[PositDivSqrt.scala 39:38]
    _T.isNaR <= UInt<1>("h00") @[PositDivSqrt.scala 39:38]
    _T.isZero <= UInt<1>("h00") @[PositDivSqrt.scala 39:38]
    _T.fraction <= UInt<58>("h00") @[PositDivSqrt.scala 39:38]
    node _T_1 = asSInt(UInt<12>("h00")) @[PositDivSqrt.scala 39:38]
    _T.exponent <= _T_1 @[PositDivSqrt.scala 39:38]
    _T.sign <= UInt<1>("h00") @[PositDivSqrt.scala 39:38]
    wire result : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}
    result.isNaR <= _T.isNaR
    result.isZero <= _T.isZero
    result.fraction <= _T.fraction
    result.exponent <= _T.exponent
    result.sign <= _T.sign
    reg remLo : UInt<59>, clock with : (reset => (reset, UInt<59>("h00"))) @[PositDivSqrt.scala 40:24]
    reg remHi : UInt<62>, clock with : (reset => (reset, UInt<62>("h00"))) @[PositDivSqrt.scala 41:24]
    reg divisor : UInt<62>, clock with : (reset => (reset, UInt<62>("h00"))) @[PositDivSqrt.scala 42:24]
    node _T_2 = eq(io.sqrtOp, UInt<1>("h00")) @[PositDivSqrt.scala 44:21]
    node divZ = and(_T_2, io.num2.isZero) @[PositDivSqrt.scala 44:32]
    node _T_3 = or(io.num1.sign, io.num1.isNaR) @[PositDivSqrt.scala 45:46]
    node _T_4 = or(io.num1.isNaR, io.num2.isNaR) @[PositDivSqrt.scala 45:71]
    node _T_5 = or(_T_4, divZ) @[PositDivSqrt.scala 45:84]
    node isNaR = mux(io.sqrtOp, _T_3, _T_5) @[PositDivSqrt.scala 45:24]
    node specialCase = or(isNaR, io.num1.isZero) @[PositDivSqrt.scala 47:27]
    node _T_6 = sub(io.num1.exponent, io.num2.exponent) @[PositDivSqrt.scala 48:35]
    node _T_7 = tail(_T_6, 1) @[PositDivSqrt.scala 48:35]
    node expDiff = asSInt(_T_7) @[PositDivSqrt.scala 48:35]
    node idle = eq(cycleCount, UInt<1>("h00")) @[PositDivSqrt.scala 50:28]
    node readyIn = leq(cycleCount, UInt<1>("h01")) @[PositDivSqrt.scala 51:28]
    node starting = and(readyIn, io.validIn) @[PositDivSqrt.scala 53:34]
    node _T_8 = eq(specialCase, UInt<1>("h00")) @[PositDivSqrt.scala 54:38]
    node started_normally = and(starting, _T_8) @[PositDivSqrt.scala 54:35]
    node _T_9 = bits(io.num1.exponent, 0, 0) @[PositDivSqrt.scala 56:48]
    node _T_10 = bits(_T_9, 0, 0) @[PositDivSqrt.scala 56:58]
    node _T_11 = and(io.sqrtOp, _T_10) @[PositDivSqrt.scala 56:32]
    node _T_12 = shl(io.num1.fraction, 1) @[PositDivSqrt.scala 56:76]
    node radicand = mux(_T_11, _T_12, io.num1.fraction) @[PositDivSqrt.scala 56:21]
    node _T_13 = eq(idle, UInt<1>("h00")) @[PositDivSqrt.scala 58:8]
    node _T_14 = or(_T_13, io.validIn) @[PositDivSqrt.scala 58:14]
    when _T_14 : @[PositDivSqrt.scala 58:28]
      node _T_15 = and(starting, specialCase) @[PositDivSqrt.scala 59:32]
      node _T_16 = mux(_T_15, UInt<2>("h02"), UInt<1>("h00")) @[PositDivSqrt.scala 59:22]
      node _T_17 = mux(started_normally, UInt<6>("h03e"), UInt<1>("h00")) @[PositDivSqrt.scala 60:22]
      node _T_18 = or(_T_16, _T_17) @[PositDivSqrt.scala 59:58]
      node _T_19 = eq(idle, UInt<1>("h00")) @[PositDivSqrt.scala 61:23]
      node _T_20 = sub(cycleCount, UInt<1>("h01")) @[PositDivSqrt.scala 61:41]
      node _T_21 = tail(_T_20, 1) @[PositDivSqrt.scala 61:41]
      node _T_22 = mux(_T_19, _T_21, UInt<1>("h00")) @[PositDivSqrt.scala 61:22]
      node _T_23 = or(_T_18, _T_22) @[PositDivSqrt.scala 60:72]
      cycleCount <= _T_23 @[PositDivSqrt.scala 59:16]
      skip @[PositDivSqrt.scala 58:28]
    io.readyIn <= readyIn @[PositDivSqrt.scala 64:14]
    when starting : @[PositDivSqrt.scala 66:18]
      sqrtOp_stored <= io.sqrtOp @[PositDivSqrt.scala 67:20]
      isNaR_out <= isNaR @[PositDivSqrt.scala 68:20]
      isZero_out <= io.num1.isZero @[PositDivSqrt.scala 69:20]
      node _T_24 = mux(divZ, UInt<4>("h08"), UInt<1>("h00")) @[PositDivSqrt.scala 70:26]
      exec_out <= _T_24 @[PositDivSqrt.scala 70:20]
      skip @[PositDivSqrt.scala 66:18]
    when started_normally : @[PositDivSqrt.scala 73:26]
      node _T_25 = xor(io.num1.sign, io.num2.sign) @[PositDivSqrt.scala 74:53]
      node _T_26 = mux(io.sqrtOp, UInt<1>("h00"), _T_25) @[PositDivSqrt.scala 74:22]
      sign_out <= _T_26 @[PositDivSqrt.scala 74:16]
      node _T_27 = shr(io.num1.exponent, 1) @[PositDivSqrt.scala 75:48]
      node _T_28 = mux(io.sqrtOp, _T_27, expDiff) @[PositDivSqrt.scala 75:22]
      divSqrtExp <= _T_28 @[PositDivSqrt.scala 75:16]
      skip @[PositDivSqrt.scala 73:26]
    node _T_29 = not(io.sqrtOp) @[PositDivSqrt.scala 78:27]
    node _T_30 = and(started_normally, _T_29) @[PositDivSqrt.scala 78:25]
    when _T_30 : @[PositDivSqrt.scala 78:39]
      divisor <= io.num2.fraction @[PositDivSqrt.scala 79:13]
      skip @[PositDivSqrt.scala 78:39]
    node _T_31 = and(readyIn, io.sqrtOp) @[PositDivSqrt.scala 82:24]
    node _T_32 = shl(radicand, 2) @[PositDivSqrt.scala 82:47]
    node _T_33 = mux(_T_31, _T_32, UInt<1>("h00")) @[PositDivSqrt.scala 82:15]
    node _T_34 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 83:16]
    node _T_35 = and(_T_34, sqrtOp_stored) @[PositDivSqrt.scala 83:25]
    node _T_36 = shl(remLo, 2) @[PositDivSqrt.scala 83:49]
    node _T_37 = mux(_T_35, _T_36, UInt<1>("h00")) @[PositDivSqrt.scala 83:15]
    node _T_38 = or(_T_33, _T_37) @[PositDivSqrt.scala 82:58]
    remLo <= _T_38 @[PositDivSqrt.scala 82:9]
    node _T_39 = and(readyIn, io.sqrtOp) @[PositDivSqrt.scala 85:25]
    node _T_40 = bits(radicand, 58, 57) @[PositDivSqrt.scala 85:47]
    node _T_41 = mux(_T_39, _T_40, UInt<1>("h00")) @[PositDivSqrt.scala 85:16]
    node _T_42 = eq(io.sqrtOp, UInt<1>("h00")) @[PositDivSqrt.scala 86:20]
    node _T_43 = and(readyIn, _T_42) @[PositDivSqrt.scala 86:17]
    node _T_44 = mux(_T_43, radicand, UInt<1>("h00")) @[PositDivSqrt.scala 86:8]
    node _T_45 = or(_T_41, _T_44) @[PositDivSqrt.scala 85:118]
    node _T_46 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 87:9]
    node _T_47 = and(_T_46, sqrtOp_stored) @[PositDivSqrt.scala 87:18]
    node _T_48 = dshl(remHi, UInt<2>("h02")) @[PositDivSqrt.scala 87:42]
    node _T_49 = dshr(remLo, UInt<6>("h039")) @[PositDivSqrt.scala 87:57]
    node _T_50 = or(_T_48, _T_49) @[PositDivSqrt.scala 87:49]
    node _T_51 = mux(_T_47, _T_50, UInt<1>("h00")) @[PositDivSqrt.scala 87:8]
    node _T_52 = or(_T_45, _T_51) @[PositDivSqrt.scala 86:56]
    node _T_53 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 88:9]
    node _T_54 = eq(sqrtOp_stored, UInt<1>("h00")) @[PositDivSqrt.scala 88:21]
    node _T_55 = and(_T_53, _T_54) @[PositDivSqrt.scala 88:18]
    node _T_56 = dshl(remHi, UInt<1>("h01")) @[PositDivSqrt.scala 88:43]
    node _T_57 = mux(_T_55, _T_56, UInt<1>("h00")) @[PositDivSqrt.scala 88:8]
    node rem = or(_T_52, _T_57) @[PositDivSqrt.scala 87:84]
    node _T_58 = and(readyIn, io.sqrtOp) @[PositDivSqrt.scala 92:17]
    node _T_59 = mux(_T_58, UInt<1>("h01"), UInt<1>("h00")) @[PositDivSqrt.scala 92:8]
    node _T_60 = eq(io.sqrtOp, UInt<1>("h00")) @[PositDivSqrt.scala 93:20]
    node _T_61 = and(readyIn, _T_60) @[PositDivSqrt.scala 93:17]
    node _T_62 = mux(_T_61, io.num2.fraction, UInt<1>("h00")) @[PositDivSqrt.scala 93:8]
    node _T_63 = or(_T_59, _T_62) @[PositDivSqrt.scala 92:41]
    node _T_64 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 94:9]
    node _T_65 = and(_T_64, sqrtOp_stored) @[PositDivSqrt.scala 94:18]
    node _T_66 = dshl(divSqrtFrac, UInt<1>("h01")) @[PositDivSqrt.scala 94:52]
    node _T_67 = cat(_T_66, UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_68 = mux(_T_65, _T_67, UInt<1>("h00")) @[PositDivSqrt.scala 94:8]
    node _T_69 = or(_T_63, _T_68) @[PositDivSqrt.scala 93:52]
    node _T_70 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 95:9]
    node _T_71 = eq(sqrtOp_stored, UInt<1>("h00")) @[PositDivSqrt.scala 95:21]
    node _T_72 = and(_T_70, _T_71) @[PositDivSqrt.scala 95:18]
    node _T_73 = mux(_T_72, divisor, UInt<1>("h00")) @[PositDivSqrt.scala 95:8]
    node testDiv = or(_T_69, _T_73) @[PositDivSqrt.scala 94:71]
    node _T_74 = cvt(rem) @[PositDivSqrt.scala 97:21]
    node _T_75 = cvt(testDiv) @[PositDivSqrt.scala 97:36]
    node _T_76 = sub(_T_74, _T_75) @[PositDivSqrt.scala 97:26]
    node _T_77 = tail(_T_76, 1) @[PositDivSqrt.scala 97:26]
    node testRem = asSInt(_T_77) @[PositDivSqrt.scala 97:26]
    node nextBit = geq(testRem, asSInt(UInt<1>("h00"))) @[PositDivSqrt.scala 98:25]
    node _T_78 = gt(cycleCount, UInt<2>("h02")) @[PositDivSqrt.scala 100:39]
    node _T_79 = or(started_normally, _T_78) @[PositDivSqrt.scala 100:25]
    when _T_79 : @[PositDivSqrt.scala 100:46]
      node _T_80 = asUInt(testRem) @[PositDivSqrt.scala 101:41]
      node _T_81 = mux(nextBit, _T_80, rem) @[PositDivSqrt.scala 101:17]
      remHi <= _T_81 @[PositDivSqrt.scala 101:11]
      skip @[PositDivSqrt.scala 100:46]
    node nextFraction = cat(divSqrtFrac, nextBit) @[Cat.scala 30:58]
    node _T_82 = mux(started_normally, nextBit, UInt<1>("h00")) @[PositDivSqrt.scala 105:21]
    node _T_83 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 106:18]
    node _T_84 = mux(_T_83, nextFraction, UInt<1>("h00")) @[PositDivSqrt.scala 106:17]
    node _T_85 = or(_T_82, _T_84) @[PositDivSqrt.scala 105:54]
    divSqrtFrac <= _T_85 @[PositDivSqrt.scala 105:15]
    node _T_86 = bits(divSqrtFrac, 61, 61) @[PositDivSqrt.scala 108:29]
    node normReq = eq(_T_86, UInt<1>("h00")) @[PositDivSqrt.scala 108:17]
    node _T_87 = cat(divSqrtFrac, UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_88 = mux(normReq, _T_87, divSqrtFrac) @[PositDivSqrt.scala 109:18]
    frac_out <= _T_88 @[PositDivSqrt.scala 109:12]
    node _T_89 = asSInt(normReq) @[PositDivSqrt.scala 110:42]
    node _T_90 = add(divSqrtExp, _T_89) @[PositDivSqrt.scala 110:26]
    node _T_91 = tail(_T_90, 1) @[PositDivSqrt.scala 110:26]
    node _T_92 = asSInt(_T_91) @[PositDivSqrt.scala 110:26]
    exp_out <= _T_92 @[PositDivSqrt.scala 110:12]
    result.isNaR <= isNaR_out @[PositDivSqrt.scala 112:19]
    result.isZero <= isZero_out @[PositDivSqrt.scala 113:19]
    result.exponent <= exp_out @[PositDivSqrt.scala 114:19]
    result.sign <= sign_out @[PositDivSqrt.scala 115:19]
    node _T_93 = bits(frac_out, 61, 4) @[PositDivSqrt.scala 116:30]
    result.fraction <= _T_93 @[PositDivSqrt.scala 116:19]
    node validOut = eq(cycleCount, UInt<1>("h01")) @[PositDivSqrt.scala 118:29]
    node _T_94 = eq(sqrtOp_stored, UInt<1>("h00")) @[PositDivSqrt.scala 120:35]
    node _T_95 = and(validOut, _T_94) @[PositDivSqrt.scala 120:32]
    io.validOut_div <= _T_95 @[PositDivSqrt.scala 120:20]
    node _T_96 = and(validOut, sqrtOp_stored) @[PositDivSqrt.scala 121:32]
    io.validOut_sqrt <= _T_96 @[PositDivSqrt.scala 121:20]
    io.exceptions <= exec_out @[PositDivSqrt.scala 122:20]
    node _T_97 = bits(frac_out, 3, 2) @[PositDivSqrt.scala 124:30]
    io.trailingBits <= _T_97 @[PositDivSqrt.scala 124:19]
    node _T_98 = bits(frac_out, 1, 0) @[PositDivSqrt.scala 125:30]
    node _T_99 = neq(_T_98, UInt<1>("h00")) @[PositDivSqrt.scala 125:59]
    node _T_100 = neq(remHi, UInt<1>("h00")) @[PositDivSqrt.scala 125:73]
    node _T_101 = or(_T_99, _T_100) @[PositDivSqrt.scala 125:62]
    io.stickyBit <= _T_101 @[PositDivSqrt.scala 125:19]
    io.out.isNaR <= result.isNaR @[PositDivSqrt.scala 127:10]
    io.out.isZero <= result.isZero @[PositDivSqrt.scala 127:10]
    io.out.fraction <= result.fraction @[PositDivSqrt.scala 127:10]
    io.out.exponent <= result.exponent @[PositDivSqrt.scala 127:10]
    io.out.sign <= result.sign @[PositDivSqrt.scala 127:10]
    
  module PositMulCore : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    node _T = add(io.num1.exponent, io.num2.exponent) @[PositMul.scala 19:31]
    node _T_1 = tail(_T, 1) @[PositMul.scala 19:31]
    node prodExp = asSInt(_T_1) @[PositMul.scala 19:31]
    node _T_2 = mul(io.num1.fraction, io.num2.fraction) @[PositMul.scala 21:63]
    wire prodFrac : UInt<116>
    prodFrac <= _T_2
    node prodOverflow = bits(prodFrac, 115, 115) @[PositMul.scala 22:30]
    node _T_3 = not(prodOverflow) @[PositMul.scala 24:39]
    node normProductFrac = dshl(prodFrac, _T_3) @[PositMul.scala 24:35]
    node _T_4 = mux(prodOverflow, asSInt(UInt<2>("h01")), asSInt(UInt<1>("h00"))) @[PositMul.scala 25:38]
    node _T_5 = add(prodExp, _T_4) @[PositMul.scala 25:33]
    node _T_6 = tail(_T_5, 1) @[PositMul.scala 25:33]
    node normProductExp = asSInt(_T_6) @[PositMul.scala 25:33]
    wire result : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>} @[PositMul.scala 27:20]
    node _T_7 = or(io.num1.isNaR, io.num2.isNaR) @[PositMul.scala 28:34]
    result.isNaR <= _T_7 @[PositMul.scala 28:19]
    node _T_8 = or(io.num1.isZero, io.num2.isZero) @[PositMul.scala 29:34]
    result.isZero <= _T_8 @[PositMul.scala 29:19]
    node _T_9 = xor(io.num1.sign, io.num2.sign) @[PositMul.scala 30:32]
    result.sign <= _T_9 @[PositMul.scala 30:19]
    result.exponent <= normProductExp @[PositMul.scala 31:19]
    node _T_10 = bits(normProductFrac, 115, 58) @[PositMul.scala 32:37]
    result.fraction <= _T_10 @[PositMul.scala 32:19]
    node _T_11 = bits(normProductFrac, 57, 56) @[PositMul.scala 34:37]
    io.trailingBits <= _T_11 @[PositMul.scala 34:19]
    node _T_12 = bits(normProductFrac, 55, 0) @[PositMul.scala 35:37]
    node _T_13 = neq(_T_12, UInt<1>("h00")) @[PositMul.scala 35:97]
    io.stickyBit <= _T_13 @[PositMul.scala 35:19]
    io.out.isNaR <= result.isNaR @[PositMul.scala 37:10]
    io.out.isZero <= result.isZero @[PositMul.scala 37:10]
    io.out.fraction <= result.fraction @[PositMul.scala 37:10]
    io.out.exponent <= result.exponent @[PositMul.scala 37:10]
    io.out.sign <= result.sign @[PositMul.scala 37:10]
    
  module PositExtractor : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<64>, out : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    node sign = bits(io.in, 63, 63) @[PositExtractor.scala 12:21]
    node _T = not(io.in) @[PositExtractor.scala 13:26]
    node _T_1 = add(_T, UInt<1>("h01")) @[PositExtractor.scala 13:33]
    node _T_2 = tail(_T_1, 1) @[PositExtractor.scala 13:33]
    node absIn = mux(sign, _T_2, io.in) @[PositExtractor.scala 13:19]
    node _T_3 = bits(absIn, 62, 62) @[PositExtractor.scala 14:22]
    node negExp = not(_T_3) @[PositExtractor.scala 14:16]
    node regExpFrac = bits(absIn, 62, 0) @[PositExtractor.scala 16:26]
    node _T_4 = not(regExpFrac) @[PositExtractor.scala 17:45]
    node zerosRegime = mux(negExp, regExpFrac, _T_4) @[PositExtractor.scala 17:24]
    node _T_5 = neq(zerosRegime, UInt<1>("h00")) @[common.scala 61:41]
    node _T_6 = not(_T_5) @[common.scala 61:33]
    node _T_7 = bits(zerosRegime, 0, 0) @[common.scala 19:50]
    node _T_8 = bits(zerosRegime, 1, 1) @[common.scala 19:50]
    node _T_9 = bits(zerosRegime, 2, 2) @[common.scala 19:50]
    node _T_10 = bits(zerosRegime, 3, 3) @[common.scala 19:50]
    node _T_11 = bits(zerosRegime, 4, 4) @[common.scala 19:50]
    node _T_12 = bits(zerosRegime, 5, 5) @[common.scala 19:50]
    node _T_13 = bits(zerosRegime, 6, 6) @[common.scala 19:50]
    node _T_14 = bits(zerosRegime, 7, 7) @[common.scala 19:50]
    node _T_15 = bits(zerosRegime, 8, 8) @[common.scala 19:50]
    node _T_16 = bits(zerosRegime, 9, 9) @[common.scala 19:50]
    node _T_17 = bits(zerosRegime, 10, 10) @[common.scala 19:50]
    node _T_18 = bits(zerosRegime, 11, 11) @[common.scala 19:50]
    node _T_19 = bits(zerosRegime, 12, 12) @[common.scala 19:50]
    node _T_20 = bits(zerosRegime, 13, 13) @[common.scala 19:50]
    node _T_21 = bits(zerosRegime, 14, 14) @[common.scala 19:50]
    node _T_22 = bits(zerosRegime, 15, 15) @[common.scala 19:50]
    node _T_23 = bits(zerosRegime, 16, 16) @[common.scala 19:50]
    node _T_24 = bits(zerosRegime, 17, 17) @[common.scala 19:50]
    node _T_25 = bits(zerosRegime, 18, 18) @[common.scala 19:50]
    node _T_26 = bits(zerosRegime, 19, 19) @[common.scala 19:50]
    node _T_27 = bits(zerosRegime, 20, 20) @[common.scala 19:50]
    node _T_28 = bits(zerosRegime, 21, 21) @[common.scala 19:50]
    node _T_29 = bits(zerosRegime, 22, 22) @[common.scala 19:50]
    node _T_30 = bits(zerosRegime, 23, 23) @[common.scala 19:50]
    node _T_31 = bits(zerosRegime, 24, 24) @[common.scala 19:50]
    node _T_32 = bits(zerosRegime, 25, 25) @[common.scala 19:50]
    node _T_33 = bits(zerosRegime, 26, 26) @[common.scala 19:50]
    node _T_34 = bits(zerosRegime, 27, 27) @[common.scala 19:50]
    node _T_35 = bits(zerosRegime, 28, 28) @[common.scala 19:50]
    node _T_36 = bits(zerosRegime, 29, 29) @[common.scala 19:50]
    node _T_37 = bits(zerosRegime, 30, 30) @[common.scala 19:50]
    node _T_38 = bits(zerosRegime, 31, 31) @[common.scala 19:50]
    node _T_39 = bits(zerosRegime, 32, 32) @[common.scala 19:50]
    node _T_40 = bits(zerosRegime, 33, 33) @[common.scala 19:50]
    node _T_41 = bits(zerosRegime, 34, 34) @[common.scala 19:50]
    node _T_42 = bits(zerosRegime, 35, 35) @[common.scala 19:50]
    node _T_43 = bits(zerosRegime, 36, 36) @[common.scala 19:50]
    node _T_44 = bits(zerosRegime, 37, 37) @[common.scala 19:50]
    node _T_45 = bits(zerosRegime, 38, 38) @[common.scala 19:50]
    node _T_46 = bits(zerosRegime, 39, 39) @[common.scala 19:50]
    node _T_47 = bits(zerosRegime, 40, 40) @[common.scala 19:50]
    node _T_48 = bits(zerosRegime, 41, 41) @[common.scala 19:50]
    node _T_49 = bits(zerosRegime, 42, 42) @[common.scala 19:50]
    node _T_50 = bits(zerosRegime, 43, 43) @[common.scala 19:50]
    node _T_51 = bits(zerosRegime, 44, 44) @[common.scala 19:50]
    node _T_52 = bits(zerosRegime, 45, 45) @[common.scala 19:50]
    node _T_53 = bits(zerosRegime, 46, 46) @[common.scala 19:50]
    node _T_54 = bits(zerosRegime, 47, 47) @[common.scala 19:50]
    node _T_55 = bits(zerosRegime, 48, 48) @[common.scala 19:50]
    node _T_56 = bits(zerosRegime, 49, 49) @[common.scala 19:50]
    node _T_57 = bits(zerosRegime, 50, 50) @[common.scala 19:50]
    node _T_58 = bits(zerosRegime, 51, 51) @[common.scala 19:50]
    node _T_59 = bits(zerosRegime, 52, 52) @[common.scala 19:50]
    node _T_60 = bits(zerosRegime, 53, 53) @[common.scala 19:50]
    node _T_61 = bits(zerosRegime, 54, 54) @[common.scala 19:50]
    node _T_62 = bits(zerosRegime, 55, 55) @[common.scala 19:50]
    node _T_63 = bits(zerosRegime, 56, 56) @[common.scala 19:50]
    node _T_64 = bits(zerosRegime, 57, 57) @[common.scala 19:50]
    node _T_65 = bits(zerosRegime, 58, 58) @[common.scala 19:50]
    node _T_66 = bits(zerosRegime, 59, 59) @[common.scala 19:50]
    node _T_67 = bits(zerosRegime, 60, 60) @[common.scala 19:50]
    node _T_68 = bits(zerosRegime, 61, 61) @[common.scala 19:50]
    node _T_69 = bits(zerosRegime, 62, 62) @[common.scala 19:50]
    node _T_70 = mux(_T_8, UInt<6>("h03d"), UInt<6>("h03e")) @[Mux.scala 47:69]
    node _T_71 = mux(_T_9, UInt<6>("h03c"), _T_70) @[Mux.scala 47:69]
    node _T_72 = mux(_T_10, UInt<6>("h03b"), _T_71) @[Mux.scala 47:69]
    node _T_73 = mux(_T_11, UInt<6>("h03a"), _T_72) @[Mux.scala 47:69]
    node _T_74 = mux(_T_12, UInt<6>("h039"), _T_73) @[Mux.scala 47:69]
    node _T_75 = mux(_T_13, UInt<6>("h038"), _T_74) @[Mux.scala 47:69]
    node _T_76 = mux(_T_14, UInt<6>("h037"), _T_75) @[Mux.scala 47:69]
    node _T_77 = mux(_T_15, UInt<6>("h036"), _T_76) @[Mux.scala 47:69]
    node _T_78 = mux(_T_16, UInt<6>("h035"), _T_77) @[Mux.scala 47:69]
    node _T_79 = mux(_T_17, UInt<6>("h034"), _T_78) @[Mux.scala 47:69]
    node _T_80 = mux(_T_18, UInt<6>("h033"), _T_79) @[Mux.scala 47:69]
    node _T_81 = mux(_T_19, UInt<6>("h032"), _T_80) @[Mux.scala 47:69]
    node _T_82 = mux(_T_20, UInt<6>("h031"), _T_81) @[Mux.scala 47:69]
    node _T_83 = mux(_T_21, UInt<6>("h030"), _T_82) @[Mux.scala 47:69]
    node _T_84 = mux(_T_22, UInt<6>("h02f"), _T_83) @[Mux.scala 47:69]
    node _T_85 = mux(_T_23, UInt<6>("h02e"), _T_84) @[Mux.scala 47:69]
    node _T_86 = mux(_T_24, UInt<6>("h02d"), _T_85) @[Mux.scala 47:69]
    node _T_87 = mux(_T_25, UInt<6>("h02c"), _T_86) @[Mux.scala 47:69]
    node _T_88 = mux(_T_26, UInt<6>("h02b"), _T_87) @[Mux.scala 47:69]
    node _T_89 = mux(_T_27, UInt<6>("h02a"), _T_88) @[Mux.scala 47:69]
    node _T_90 = mux(_T_28, UInt<6>("h029"), _T_89) @[Mux.scala 47:69]
    node _T_91 = mux(_T_29, UInt<6>("h028"), _T_90) @[Mux.scala 47:69]
    node _T_92 = mux(_T_30, UInt<6>("h027"), _T_91) @[Mux.scala 47:69]
    node _T_93 = mux(_T_31, UInt<6>("h026"), _T_92) @[Mux.scala 47:69]
    node _T_94 = mux(_T_32, UInt<6>("h025"), _T_93) @[Mux.scala 47:69]
    node _T_95 = mux(_T_33, UInt<6>("h024"), _T_94) @[Mux.scala 47:69]
    node _T_96 = mux(_T_34, UInt<6>("h023"), _T_95) @[Mux.scala 47:69]
    node _T_97 = mux(_T_35, UInt<6>("h022"), _T_96) @[Mux.scala 47:69]
    node _T_98 = mux(_T_36, UInt<6>("h021"), _T_97) @[Mux.scala 47:69]
    node _T_99 = mux(_T_37, UInt<6>("h020"), _T_98) @[Mux.scala 47:69]
    node _T_100 = mux(_T_38, UInt<5>("h01f"), _T_99) @[Mux.scala 47:69]
    node _T_101 = mux(_T_39, UInt<5>("h01e"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_40, UInt<5>("h01d"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_41, UInt<5>("h01c"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_42, UInt<5>("h01b"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_43, UInt<5>("h01a"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_44, UInt<5>("h019"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_45, UInt<5>("h018"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_46, UInt<5>("h017"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_47, UInt<5>("h016"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_48, UInt<5>("h015"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_49, UInt<5>("h014"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_50, UInt<5>("h013"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_51, UInt<5>("h012"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_52, UInt<5>("h011"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_53, UInt<5>("h010"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_54, UInt<4>("h0f"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_55, UInt<4>("h0e"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_56, UInt<4>("h0d"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_57, UInt<4>("h0c"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_58, UInt<4>("h0b"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_59, UInt<4>("h0a"), _T_120) @[Mux.scala 47:69]
    node _T_122 = mux(_T_60, UInt<4>("h09"), _T_121) @[Mux.scala 47:69]
    node _T_123 = mux(_T_61, UInt<4>("h08"), _T_122) @[Mux.scala 47:69]
    node _T_124 = mux(_T_62, UInt<3>("h07"), _T_123) @[Mux.scala 47:69]
    node _T_125 = mux(_T_63, UInt<3>("h06"), _T_124) @[Mux.scala 47:69]
    node _T_126 = mux(_T_64, UInt<3>("h05"), _T_125) @[Mux.scala 47:69]
    node _T_127 = mux(_T_65, UInt<3>("h04"), _T_126) @[Mux.scala 47:69]
    node _T_128 = mux(_T_66, UInt<2>("h03"), _T_127) @[Mux.scala 47:69]
    node _T_129 = mux(_T_67, UInt<2>("h02"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_68, UInt<1>("h01"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_69, UInt<1>("h00"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_6, UInt<6>("h03f"), _T_131) @[PositExtractor.scala 20:10]
    node regimeCount = cat(UInt<1>("h00"), _T_132) @[Cat.scala 30:58]
    node _T_133 = not(regimeCount) @[PositExtractor.scala 22:17]
    node _T_134 = add(_T_133, UInt<1>("h01")) @[PositExtractor.scala 22:30]
    node _T_135 = tail(_T_134, 1) @[PositExtractor.scala 22:30]
    node _T_136 = sub(regimeCount, UInt<1>("h01")) @[PositExtractor.scala 22:49]
    node _T_137 = tail(_T_136, 1) @[PositExtractor.scala 22:49]
    node regime = mux(negExp, _T_135, _T_137) @[PositExtractor.scala 22:8]
    node _T_138 = add(regimeCount, UInt<2>("h02")) @[PositExtractor.scala 24:39]
    node _T_139 = tail(_T_138, 1) @[PositExtractor.scala 24:39]
    node expFrac = dshl(absIn, _T_139) @[PositExtractor.scala 24:23]
    node extractedExp = bits(expFrac, 63, 60) @[PositExtractor.scala 26:24]
    node frac = bits(expFrac, 59, 3) @[PositExtractor.scala 28:21]
    node _T_140 = bits(io.in, 63, 63) @[common.scala 27:43]
    node _T_141 = bits(io.in, 62, 0) @[common.scala 27:57]
    node _T_142 = neq(_T_141, UInt<1>("h00")) @[common.scala 27:71]
    node _T_143 = not(_T_142) @[common.scala 27:53]
    node _T_144 = and(_T_140, _T_143) @[common.scala 27:51]
    io.out.isNaR <= _T_144 @[PositExtractor.scala 30:19]
    node _T_145 = neq(io.in, UInt<1>("h00")) @[common.scala 61:41]
    node _T_146 = not(_T_145) @[common.scala 61:33]
    io.out.isZero <= _T_146 @[PositExtractor.scala 31:19]
    io.out.sign <= sign @[PositExtractor.scala 33:19]
    node _T_147 = cat(regime, extractedExp) @[Cat.scala 30:58]
    node _T_148 = asSInt(_T_147) @[PositExtractor.scala 37:11]
    io.out.exponent <= _T_148 @[PositExtractor.scala 34:19]
    node _T_149 = cat(UInt<1>("h01"), frac) @[Cat.scala 30:58]
    io.out.fraction <= _T_149 @[PositExtractor.scala 38:19]
    
  module PositExtractor_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<64>, out : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    node sign = bits(io.in, 63, 63) @[PositExtractor.scala 12:21]
    node _T = not(io.in) @[PositExtractor.scala 13:26]
    node _T_1 = add(_T, UInt<1>("h01")) @[PositExtractor.scala 13:33]
    node _T_2 = tail(_T_1, 1) @[PositExtractor.scala 13:33]
    node absIn = mux(sign, _T_2, io.in) @[PositExtractor.scala 13:19]
    node _T_3 = bits(absIn, 62, 62) @[PositExtractor.scala 14:22]
    node negExp = not(_T_3) @[PositExtractor.scala 14:16]
    node regExpFrac = bits(absIn, 62, 0) @[PositExtractor.scala 16:26]
    node _T_4 = not(regExpFrac) @[PositExtractor.scala 17:45]
    node zerosRegime = mux(negExp, regExpFrac, _T_4) @[PositExtractor.scala 17:24]
    node _T_5 = neq(zerosRegime, UInt<1>("h00")) @[common.scala 61:41]
    node _T_6 = not(_T_5) @[common.scala 61:33]
    node _T_7 = bits(zerosRegime, 0, 0) @[common.scala 19:50]
    node _T_8 = bits(zerosRegime, 1, 1) @[common.scala 19:50]
    node _T_9 = bits(zerosRegime, 2, 2) @[common.scala 19:50]
    node _T_10 = bits(zerosRegime, 3, 3) @[common.scala 19:50]
    node _T_11 = bits(zerosRegime, 4, 4) @[common.scala 19:50]
    node _T_12 = bits(zerosRegime, 5, 5) @[common.scala 19:50]
    node _T_13 = bits(zerosRegime, 6, 6) @[common.scala 19:50]
    node _T_14 = bits(zerosRegime, 7, 7) @[common.scala 19:50]
    node _T_15 = bits(zerosRegime, 8, 8) @[common.scala 19:50]
    node _T_16 = bits(zerosRegime, 9, 9) @[common.scala 19:50]
    node _T_17 = bits(zerosRegime, 10, 10) @[common.scala 19:50]
    node _T_18 = bits(zerosRegime, 11, 11) @[common.scala 19:50]
    node _T_19 = bits(zerosRegime, 12, 12) @[common.scala 19:50]
    node _T_20 = bits(zerosRegime, 13, 13) @[common.scala 19:50]
    node _T_21 = bits(zerosRegime, 14, 14) @[common.scala 19:50]
    node _T_22 = bits(zerosRegime, 15, 15) @[common.scala 19:50]
    node _T_23 = bits(zerosRegime, 16, 16) @[common.scala 19:50]
    node _T_24 = bits(zerosRegime, 17, 17) @[common.scala 19:50]
    node _T_25 = bits(zerosRegime, 18, 18) @[common.scala 19:50]
    node _T_26 = bits(zerosRegime, 19, 19) @[common.scala 19:50]
    node _T_27 = bits(zerosRegime, 20, 20) @[common.scala 19:50]
    node _T_28 = bits(zerosRegime, 21, 21) @[common.scala 19:50]
    node _T_29 = bits(zerosRegime, 22, 22) @[common.scala 19:50]
    node _T_30 = bits(zerosRegime, 23, 23) @[common.scala 19:50]
    node _T_31 = bits(zerosRegime, 24, 24) @[common.scala 19:50]
    node _T_32 = bits(zerosRegime, 25, 25) @[common.scala 19:50]
    node _T_33 = bits(zerosRegime, 26, 26) @[common.scala 19:50]
    node _T_34 = bits(zerosRegime, 27, 27) @[common.scala 19:50]
    node _T_35 = bits(zerosRegime, 28, 28) @[common.scala 19:50]
    node _T_36 = bits(zerosRegime, 29, 29) @[common.scala 19:50]
    node _T_37 = bits(zerosRegime, 30, 30) @[common.scala 19:50]
    node _T_38 = bits(zerosRegime, 31, 31) @[common.scala 19:50]
    node _T_39 = bits(zerosRegime, 32, 32) @[common.scala 19:50]
    node _T_40 = bits(zerosRegime, 33, 33) @[common.scala 19:50]
    node _T_41 = bits(zerosRegime, 34, 34) @[common.scala 19:50]
    node _T_42 = bits(zerosRegime, 35, 35) @[common.scala 19:50]
    node _T_43 = bits(zerosRegime, 36, 36) @[common.scala 19:50]
    node _T_44 = bits(zerosRegime, 37, 37) @[common.scala 19:50]
    node _T_45 = bits(zerosRegime, 38, 38) @[common.scala 19:50]
    node _T_46 = bits(zerosRegime, 39, 39) @[common.scala 19:50]
    node _T_47 = bits(zerosRegime, 40, 40) @[common.scala 19:50]
    node _T_48 = bits(zerosRegime, 41, 41) @[common.scala 19:50]
    node _T_49 = bits(zerosRegime, 42, 42) @[common.scala 19:50]
    node _T_50 = bits(zerosRegime, 43, 43) @[common.scala 19:50]
    node _T_51 = bits(zerosRegime, 44, 44) @[common.scala 19:50]
    node _T_52 = bits(zerosRegime, 45, 45) @[common.scala 19:50]
    node _T_53 = bits(zerosRegime, 46, 46) @[common.scala 19:50]
    node _T_54 = bits(zerosRegime, 47, 47) @[common.scala 19:50]
    node _T_55 = bits(zerosRegime, 48, 48) @[common.scala 19:50]
    node _T_56 = bits(zerosRegime, 49, 49) @[common.scala 19:50]
    node _T_57 = bits(zerosRegime, 50, 50) @[common.scala 19:50]
    node _T_58 = bits(zerosRegime, 51, 51) @[common.scala 19:50]
    node _T_59 = bits(zerosRegime, 52, 52) @[common.scala 19:50]
    node _T_60 = bits(zerosRegime, 53, 53) @[common.scala 19:50]
    node _T_61 = bits(zerosRegime, 54, 54) @[common.scala 19:50]
    node _T_62 = bits(zerosRegime, 55, 55) @[common.scala 19:50]
    node _T_63 = bits(zerosRegime, 56, 56) @[common.scala 19:50]
    node _T_64 = bits(zerosRegime, 57, 57) @[common.scala 19:50]
    node _T_65 = bits(zerosRegime, 58, 58) @[common.scala 19:50]
    node _T_66 = bits(zerosRegime, 59, 59) @[common.scala 19:50]
    node _T_67 = bits(zerosRegime, 60, 60) @[common.scala 19:50]
    node _T_68 = bits(zerosRegime, 61, 61) @[common.scala 19:50]
    node _T_69 = bits(zerosRegime, 62, 62) @[common.scala 19:50]
    node _T_70 = mux(_T_8, UInt<6>("h03d"), UInt<6>("h03e")) @[Mux.scala 47:69]
    node _T_71 = mux(_T_9, UInt<6>("h03c"), _T_70) @[Mux.scala 47:69]
    node _T_72 = mux(_T_10, UInt<6>("h03b"), _T_71) @[Mux.scala 47:69]
    node _T_73 = mux(_T_11, UInt<6>("h03a"), _T_72) @[Mux.scala 47:69]
    node _T_74 = mux(_T_12, UInt<6>("h039"), _T_73) @[Mux.scala 47:69]
    node _T_75 = mux(_T_13, UInt<6>("h038"), _T_74) @[Mux.scala 47:69]
    node _T_76 = mux(_T_14, UInt<6>("h037"), _T_75) @[Mux.scala 47:69]
    node _T_77 = mux(_T_15, UInt<6>("h036"), _T_76) @[Mux.scala 47:69]
    node _T_78 = mux(_T_16, UInt<6>("h035"), _T_77) @[Mux.scala 47:69]
    node _T_79 = mux(_T_17, UInt<6>("h034"), _T_78) @[Mux.scala 47:69]
    node _T_80 = mux(_T_18, UInt<6>("h033"), _T_79) @[Mux.scala 47:69]
    node _T_81 = mux(_T_19, UInt<6>("h032"), _T_80) @[Mux.scala 47:69]
    node _T_82 = mux(_T_20, UInt<6>("h031"), _T_81) @[Mux.scala 47:69]
    node _T_83 = mux(_T_21, UInt<6>("h030"), _T_82) @[Mux.scala 47:69]
    node _T_84 = mux(_T_22, UInt<6>("h02f"), _T_83) @[Mux.scala 47:69]
    node _T_85 = mux(_T_23, UInt<6>("h02e"), _T_84) @[Mux.scala 47:69]
    node _T_86 = mux(_T_24, UInt<6>("h02d"), _T_85) @[Mux.scala 47:69]
    node _T_87 = mux(_T_25, UInt<6>("h02c"), _T_86) @[Mux.scala 47:69]
    node _T_88 = mux(_T_26, UInt<6>("h02b"), _T_87) @[Mux.scala 47:69]
    node _T_89 = mux(_T_27, UInt<6>("h02a"), _T_88) @[Mux.scala 47:69]
    node _T_90 = mux(_T_28, UInt<6>("h029"), _T_89) @[Mux.scala 47:69]
    node _T_91 = mux(_T_29, UInt<6>("h028"), _T_90) @[Mux.scala 47:69]
    node _T_92 = mux(_T_30, UInt<6>("h027"), _T_91) @[Mux.scala 47:69]
    node _T_93 = mux(_T_31, UInt<6>("h026"), _T_92) @[Mux.scala 47:69]
    node _T_94 = mux(_T_32, UInt<6>("h025"), _T_93) @[Mux.scala 47:69]
    node _T_95 = mux(_T_33, UInt<6>("h024"), _T_94) @[Mux.scala 47:69]
    node _T_96 = mux(_T_34, UInt<6>("h023"), _T_95) @[Mux.scala 47:69]
    node _T_97 = mux(_T_35, UInt<6>("h022"), _T_96) @[Mux.scala 47:69]
    node _T_98 = mux(_T_36, UInt<6>("h021"), _T_97) @[Mux.scala 47:69]
    node _T_99 = mux(_T_37, UInt<6>("h020"), _T_98) @[Mux.scala 47:69]
    node _T_100 = mux(_T_38, UInt<5>("h01f"), _T_99) @[Mux.scala 47:69]
    node _T_101 = mux(_T_39, UInt<5>("h01e"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_40, UInt<5>("h01d"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_41, UInt<5>("h01c"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_42, UInt<5>("h01b"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_43, UInt<5>("h01a"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_44, UInt<5>("h019"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_45, UInt<5>("h018"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_46, UInt<5>("h017"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_47, UInt<5>("h016"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_48, UInt<5>("h015"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_49, UInt<5>("h014"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_50, UInt<5>("h013"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_51, UInt<5>("h012"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_52, UInt<5>("h011"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_53, UInt<5>("h010"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_54, UInt<4>("h0f"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_55, UInt<4>("h0e"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_56, UInt<4>("h0d"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_57, UInt<4>("h0c"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_58, UInt<4>("h0b"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_59, UInt<4>("h0a"), _T_120) @[Mux.scala 47:69]
    node _T_122 = mux(_T_60, UInt<4>("h09"), _T_121) @[Mux.scala 47:69]
    node _T_123 = mux(_T_61, UInt<4>("h08"), _T_122) @[Mux.scala 47:69]
    node _T_124 = mux(_T_62, UInt<3>("h07"), _T_123) @[Mux.scala 47:69]
    node _T_125 = mux(_T_63, UInt<3>("h06"), _T_124) @[Mux.scala 47:69]
    node _T_126 = mux(_T_64, UInt<3>("h05"), _T_125) @[Mux.scala 47:69]
    node _T_127 = mux(_T_65, UInt<3>("h04"), _T_126) @[Mux.scala 47:69]
    node _T_128 = mux(_T_66, UInt<2>("h03"), _T_127) @[Mux.scala 47:69]
    node _T_129 = mux(_T_67, UInt<2>("h02"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_68, UInt<1>("h01"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_69, UInt<1>("h00"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_6, UInt<6>("h03f"), _T_131) @[PositExtractor.scala 20:10]
    node regimeCount = cat(UInt<1>("h00"), _T_132) @[Cat.scala 30:58]
    node _T_133 = not(regimeCount) @[PositExtractor.scala 22:17]
    node _T_134 = add(_T_133, UInt<1>("h01")) @[PositExtractor.scala 22:30]
    node _T_135 = tail(_T_134, 1) @[PositExtractor.scala 22:30]
    node _T_136 = sub(regimeCount, UInt<1>("h01")) @[PositExtractor.scala 22:49]
    node _T_137 = tail(_T_136, 1) @[PositExtractor.scala 22:49]
    node regime = mux(negExp, _T_135, _T_137) @[PositExtractor.scala 22:8]
    node _T_138 = add(regimeCount, UInt<2>("h02")) @[PositExtractor.scala 24:39]
    node _T_139 = tail(_T_138, 1) @[PositExtractor.scala 24:39]
    node expFrac = dshl(absIn, _T_139) @[PositExtractor.scala 24:23]
    node extractedExp = bits(expFrac, 63, 60) @[PositExtractor.scala 26:24]
    node frac = bits(expFrac, 59, 3) @[PositExtractor.scala 28:21]
    node _T_140 = bits(io.in, 63, 63) @[common.scala 27:43]
    node _T_141 = bits(io.in, 62, 0) @[common.scala 27:57]
    node _T_142 = neq(_T_141, UInt<1>("h00")) @[common.scala 27:71]
    node _T_143 = not(_T_142) @[common.scala 27:53]
    node _T_144 = and(_T_140, _T_143) @[common.scala 27:51]
    io.out.isNaR <= _T_144 @[PositExtractor.scala 30:19]
    node _T_145 = neq(io.in, UInt<1>("h00")) @[common.scala 61:41]
    node _T_146 = not(_T_145) @[common.scala 61:33]
    io.out.isZero <= _T_146 @[PositExtractor.scala 31:19]
    io.out.sign <= sign @[PositExtractor.scala 33:19]
    node _T_147 = cat(regime, extractedExp) @[Cat.scala 30:58]
    node _T_148 = asSInt(_T_147) @[PositExtractor.scala 37:11]
    io.out.exponent <= _T_148 @[PositExtractor.scala 34:19]
    node _T_149 = cat(UInt<1>("h01"), frac) @[Cat.scala 30:58]
    io.out.fraction <= _T_149 @[PositExtractor.scala 38:19]
    
  module PositExtractor_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<64>, out : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    node sign = bits(io.in, 63, 63) @[PositExtractor.scala 12:21]
    node _T = not(io.in) @[PositExtractor.scala 13:26]
    node _T_1 = add(_T, UInt<1>("h01")) @[PositExtractor.scala 13:33]
    node _T_2 = tail(_T_1, 1) @[PositExtractor.scala 13:33]
    node absIn = mux(sign, _T_2, io.in) @[PositExtractor.scala 13:19]
    node _T_3 = bits(absIn, 62, 62) @[PositExtractor.scala 14:22]
    node negExp = not(_T_3) @[PositExtractor.scala 14:16]
    node regExpFrac = bits(absIn, 62, 0) @[PositExtractor.scala 16:26]
    node _T_4 = not(regExpFrac) @[PositExtractor.scala 17:45]
    node zerosRegime = mux(negExp, regExpFrac, _T_4) @[PositExtractor.scala 17:24]
    node _T_5 = neq(zerosRegime, UInt<1>("h00")) @[common.scala 61:41]
    node _T_6 = not(_T_5) @[common.scala 61:33]
    node _T_7 = bits(zerosRegime, 0, 0) @[common.scala 19:50]
    node _T_8 = bits(zerosRegime, 1, 1) @[common.scala 19:50]
    node _T_9 = bits(zerosRegime, 2, 2) @[common.scala 19:50]
    node _T_10 = bits(zerosRegime, 3, 3) @[common.scala 19:50]
    node _T_11 = bits(zerosRegime, 4, 4) @[common.scala 19:50]
    node _T_12 = bits(zerosRegime, 5, 5) @[common.scala 19:50]
    node _T_13 = bits(zerosRegime, 6, 6) @[common.scala 19:50]
    node _T_14 = bits(zerosRegime, 7, 7) @[common.scala 19:50]
    node _T_15 = bits(zerosRegime, 8, 8) @[common.scala 19:50]
    node _T_16 = bits(zerosRegime, 9, 9) @[common.scala 19:50]
    node _T_17 = bits(zerosRegime, 10, 10) @[common.scala 19:50]
    node _T_18 = bits(zerosRegime, 11, 11) @[common.scala 19:50]
    node _T_19 = bits(zerosRegime, 12, 12) @[common.scala 19:50]
    node _T_20 = bits(zerosRegime, 13, 13) @[common.scala 19:50]
    node _T_21 = bits(zerosRegime, 14, 14) @[common.scala 19:50]
    node _T_22 = bits(zerosRegime, 15, 15) @[common.scala 19:50]
    node _T_23 = bits(zerosRegime, 16, 16) @[common.scala 19:50]
    node _T_24 = bits(zerosRegime, 17, 17) @[common.scala 19:50]
    node _T_25 = bits(zerosRegime, 18, 18) @[common.scala 19:50]
    node _T_26 = bits(zerosRegime, 19, 19) @[common.scala 19:50]
    node _T_27 = bits(zerosRegime, 20, 20) @[common.scala 19:50]
    node _T_28 = bits(zerosRegime, 21, 21) @[common.scala 19:50]
    node _T_29 = bits(zerosRegime, 22, 22) @[common.scala 19:50]
    node _T_30 = bits(zerosRegime, 23, 23) @[common.scala 19:50]
    node _T_31 = bits(zerosRegime, 24, 24) @[common.scala 19:50]
    node _T_32 = bits(zerosRegime, 25, 25) @[common.scala 19:50]
    node _T_33 = bits(zerosRegime, 26, 26) @[common.scala 19:50]
    node _T_34 = bits(zerosRegime, 27, 27) @[common.scala 19:50]
    node _T_35 = bits(zerosRegime, 28, 28) @[common.scala 19:50]
    node _T_36 = bits(zerosRegime, 29, 29) @[common.scala 19:50]
    node _T_37 = bits(zerosRegime, 30, 30) @[common.scala 19:50]
    node _T_38 = bits(zerosRegime, 31, 31) @[common.scala 19:50]
    node _T_39 = bits(zerosRegime, 32, 32) @[common.scala 19:50]
    node _T_40 = bits(zerosRegime, 33, 33) @[common.scala 19:50]
    node _T_41 = bits(zerosRegime, 34, 34) @[common.scala 19:50]
    node _T_42 = bits(zerosRegime, 35, 35) @[common.scala 19:50]
    node _T_43 = bits(zerosRegime, 36, 36) @[common.scala 19:50]
    node _T_44 = bits(zerosRegime, 37, 37) @[common.scala 19:50]
    node _T_45 = bits(zerosRegime, 38, 38) @[common.scala 19:50]
    node _T_46 = bits(zerosRegime, 39, 39) @[common.scala 19:50]
    node _T_47 = bits(zerosRegime, 40, 40) @[common.scala 19:50]
    node _T_48 = bits(zerosRegime, 41, 41) @[common.scala 19:50]
    node _T_49 = bits(zerosRegime, 42, 42) @[common.scala 19:50]
    node _T_50 = bits(zerosRegime, 43, 43) @[common.scala 19:50]
    node _T_51 = bits(zerosRegime, 44, 44) @[common.scala 19:50]
    node _T_52 = bits(zerosRegime, 45, 45) @[common.scala 19:50]
    node _T_53 = bits(zerosRegime, 46, 46) @[common.scala 19:50]
    node _T_54 = bits(zerosRegime, 47, 47) @[common.scala 19:50]
    node _T_55 = bits(zerosRegime, 48, 48) @[common.scala 19:50]
    node _T_56 = bits(zerosRegime, 49, 49) @[common.scala 19:50]
    node _T_57 = bits(zerosRegime, 50, 50) @[common.scala 19:50]
    node _T_58 = bits(zerosRegime, 51, 51) @[common.scala 19:50]
    node _T_59 = bits(zerosRegime, 52, 52) @[common.scala 19:50]
    node _T_60 = bits(zerosRegime, 53, 53) @[common.scala 19:50]
    node _T_61 = bits(zerosRegime, 54, 54) @[common.scala 19:50]
    node _T_62 = bits(zerosRegime, 55, 55) @[common.scala 19:50]
    node _T_63 = bits(zerosRegime, 56, 56) @[common.scala 19:50]
    node _T_64 = bits(zerosRegime, 57, 57) @[common.scala 19:50]
    node _T_65 = bits(zerosRegime, 58, 58) @[common.scala 19:50]
    node _T_66 = bits(zerosRegime, 59, 59) @[common.scala 19:50]
    node _T_67 = bits(zerosRegime, 60, 60) @[common.scala 19:50]
    node _T_68 = bits(zerosRegime, 61, 61) @[common.scala 19:50]
    node _T_69 = bits(zerosRegime, 62, 62) @[common.scala 19:50]
    node _T_70 = mux(_T_8, UInt<6>("h03d"), UInt<6>("h03e")) @[Mux.scala 47:69]
    node _T_71 = mux(_T_9, UInt<6>("h03c"), _T_70) @[Mux.scala 47:69]
    node _T_72 = mux(_T_10, UInt<6>("h03b"), _T_71) @[Mux.scala 47:69]
    node _T_73 = mux(_T_11, UInt<6>("h03a"), _T_72) @[Mux.scala 47:69]
    node _T_74 = mux(_T_12, UInt<6>("h039"), _T_73) @[Mux.scala 47:69]
    node _T_75 = mux(_T_13, UInt<6>("h038"), _T_74) @[Mux.scala 47:69]
    node _T_76 = mux(_T_14, UInt<6>("h037"), _T_75) @[Mux.scala 47:69]
    node _T_77 = mux(_T_15, UInt<6>("h036"), _T_76) @[Mux.scala 47:69]
    node _T_78 = mux(_T_16, UInt<6>("h035"), _T_77) @[Mux.scala 47:69]
    node _T_79 = mux(_T_17, UInt<6>("h034"), _T_78) @[Mux.scala 47:69]
    node _T_80 = mux(_T_18, UInt<6>("h033"), _T_79) @[Mux.scala 47:69]
    node _T_81 = mux(_T_19, UInt<6>("h032"), _T_80) @[Mux.scala 47:69]
    node _T_82 = mux(_T_20, UInt<6>("h031"), _T_81) @[Mux.scala 47:69]
    node _T_83 = mux(_T_21, UInt<6>("h030"), _T_82) @[Mux.scala 47:69]
    node _T_84 = mux(_T_22, UInt<6>("h02f"), _T_83) @[Mux.scala 47:69]
    node _T_85 = mux(_T_23, UInt<6>("h02e"), _T_84) @[Mux.scala 47:69]
    node _T_86 = mux(_T_24, UInt<6>("h02d"), _T_85) @[Mux.scala 47:69]
    node _T_87 = mux(_T_25, UInt<6>("h02c"), _T_86) @[Mux.scala 47:69]
    node _T_88 = mux(_T_26, UInt<6>("h02b"), _T_87) @[Mux.scala 47:69]
    node _T_89 = mux(_T_27, UInt<6>("h02a"), _T_88) @[Mux.scala 47:69]
    node _T_90 = mux(_T_28, UInt<6>("h029"), _T_89) @[Mux.scala 47:69]
    node _T_91 = mux(_T_29, UInt<6>("h028"), _T_90) @[Mux.scala 47:69]
    node _T_92 = mux(_T_30, UInt<6>("h027"), _T_91) @[Mux.scala 47:69]
    node _T_93 = mux(_T_31, UInt<6>("h026"), _T_92) @[Mux.scala 47:69]
    node _T_94 = mux(_T_32, UInt<6>("h025"), _T_93) @[Mux.scala 47:69]
    node _T_95 = mux(_T_33, UInt<6>("h024"), _T_94) @[Mux.scala 47:69]
    node _T_96 = mux(_T_34, UInt<6>("h023"), _T_95) @[Mux.scala 47:69]
    node _T_97 = mux(_T_35, UInt<6>("h022"), _T_96) @[Mux.scala 47:69]
    node _T_98 = mux(_T_36, UInt<6>("h021"), _T_97) @[Mux.scala 47:69]
    node _T_99 = mux(_T_37, UInt<6>("h020"), _T_98) @[Mux.scala 47:69]
    node _T_100 = mux(_T_38, UInt<5>("h01f"), _T_99) @[Mux.scala 47:69]
    node _T_101 = mux(_T_39, UInt<5>("h01e"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_40, UInt<5>("h01d"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_41, UInt<5>("h01c"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_42, UInt<5>("h01b"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_43, UInt<5>("h01a"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_44, UInt<5>("h019"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_45, UInt<5>("h018"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_46, UInt<5>("h017"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_47, UInt<5>("h016"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_48, UInt<5>("h015"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_49, UInt<5>("h014"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_50, UInt<5>("h013"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_51, UInt<5>("h012"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_52, UInt<5>("h011"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_53, UInt<5>("h010"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_54, UInt<4>("h0f"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_55, UInt<4>("h0e"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_56, UInt<4>("h0d"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_57, UInt<4>("h0c"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_58, UInt<4>("h0b"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_59, UInt<4>("h0a"), _T_120) @[Mux.scala 47:69]
    node _T_122 = mux(_T_60, UInt<4>("h09"), _T_121) @[Mux.scala 47:69]
    node _T_123 = mux(_T_61, UInt<4>("h08"), _T_122) @[Mux.scala 47:69]
    node _T_124 = mux(_T_62, UInt<3>("h07"), _T_123) @[Mux.scala 47:69]
    node _T_125 = mux(_T_63, UInt<3>("h06"), _T_124) @[Mux.scala 47:69]
    node _T_126 = mux(_T_64, UInt<3>("h05"), _T_125) @[Mux.scala 47:69]
    node _T_127 = mux(_T_65, UInt<3>("h04"), _T_126) @[Mux.scala 47:69]
    node _T_128 = mux(_T_66, UInt<2>("h03"), _T_127) @[Mux.scala 47:69]
    node _T_129 = mux(_T_67, UInt<2>("h02"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_68, UInt<1>("h01"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_69, UInt<1>("h00"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_6, UInt<6>("h03f"), _T_131) @[PositExtractor.scala 20:10]
    node regimeCount = cat(UInt<1>("h00"), _T_132) @[Cat.scala 30:58]
    node _T_133 = not(regimeCount) @[PositExtractor.scala 22:17]
    node _T_134 = add(_T_133, UInt<1>("h01")) @[PositExtractor.scala 22:30]
    node _T_135 = tail(_T_134, 1) @[PositExtractor.scala 22:30]
    node _T_136 = sub(regimeCount, UInt<1>("h01")) @[PositExtractor.scala 22:49]
    node _T_137 = tail(_T_136, 1) @[PositExtractor.scala 22:49]
    node regime = mux(negExp, _T_135, _T_137) @[PositExtractor.scala 22:8]
    node _T_138 = add(regimeCount, UInt<2>("h02")) @[PositExtractor.scala 24:39]
    node _T_139 = tail(_T_138, 1) @[PositExtractor.scala 24:39]
    node expFrac = dshl(absIn, _T_139) @[PositExtractor.scala 24:23]
    node extractedExp = bits(expFrac, 63, 60) @[PositExtractor.scala 26:24]
    node frac = bits(expFrac, 59, 3) @[PositExtractor.scala 28:21]
    node _T_140 = bits(io.in, 63, 63) @[common.scala 27:43]
    node _T_141 = bits(io.in, 62, 0) @[common.scala 27:57]
    node _T_142 = neq(_T_141, UInt<1>("h00")) @[common.scala 27:71]
    node _T_143 = not(_T_142) @[common.scala 27:53]
    node _T_144 = and(_T_140, _T_143) @[common.scala 27:51]
    io.out.isNaR <= _T_144 @[PositExtractor.scala 30:19]
    node _T_145 = neq(io.in, UInt<1>("h00")) @[common.scala 61:41]
    node _T_146 = not(_T_145) @[common.scala 61:33]
    io.out.isZero <= _T_146 @[PositExtractor.scala 31:19]
    io.out.sign <= sign @[PositExtractor.scala 33:19]
    node _T_147 = cat(regime, extractedExp) @[Cat.scala 30:58]
    node _T_148 = asSInt(_T_147) @[PositExtractor.scala 37:11]
    io.out.exponent <= _T_148 @[PositExtractor.scala 34:19]
    node _T_149 = cat(UInt<1>("h01"), frac) @[Cat.scala 30:58]
    io.out.fraction <= _T_149 @[PositExtractor.scala 38:19]
    
  module PositGenerator : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<64>}
    
    node fraction = bits(io.in.fraction, 56, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 11, 4) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 11, 4) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 3, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<6>("h03f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 64, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 64, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 61, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<63>("h07fffffffffffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 63) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<64>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module Posit : 
    input clock : Clock
    input reset : Reset
    output io : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {num1 : UInt<64>, num2 : UInt<64>, num3 : UInt<64>, inst : UInt<3>, mode : UInt<2>}}, result : {flip ready : UInt<1>, valid : UInt<1>, bits : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<64>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}}}
    
    inst positAddCore of PositAddCore @[POSIT.scala 43:34]
    positAddCore.clock <= clock
    positAddCore.reset <= reset
    inst positCompare of PositCompare @[POSIT.scala 44:34]
    positCompare.clock <= clock
    positCompare.reset <= reset
    inst positFMACore of PositFMACore @[POSIT.scala 45:34]
    positFMACore.clock <= clock
    positFMACore.reset <= reset
    inst positDivSqrtCore of PositDivSqrtCore @[POSIT.scala 46:38]
    positDivSqrtCore.clock <= clock
    positDivSqrtCore.reset <= reset
    inst positMulCore of PositMulCore @[POSIT.scala 47:34]
    positMulCore.clock <= clock
    positMulCore.reset <= reset
    node _T = and(io.result.ready, positDivSqrtCore.io.readyIn) @[POSIT.scala 49:45]
    io.request.ready <= _T @[POSIT.scala 49:26]
    reg init_num1 : UInt<64>, clock @[POSIT.scala 51:28]
    reg init_num2 : UInt<64>, clock @[POSIT.scala 52:28]
    reg init_num3 : UInt<64>, clock @[POSIT.scala 53:28]
    reg init_input_valid : UInt<1>, clock @[POSIT.scala 54:35]
    reg init_inst : UInt<3>, clock @[POSIT.scala 55:28]
    reg init_mode : UInt<2>, clock @[POSIT.scala 56:28]
    reg init_valid : UInt<1>, clock @[POSIT.scala 57:29]
    node _T_1 = and(io.result.ready, positDivSqrtCore.io.readyIn) @[POSIT.scala 58:30]
    when _T_1 : @[POSIT.scala 58:61]
      init_num1 <= io.request.bits.num1 @[POSIT.scala 59:27]
      init_num2 <= io.request.bits.num2 @[POSIT.scala 60:27]
      init_num3 <= io.request.bits.num3 @[POSIT.scala 61:27]
      init_valid <= io.request.valid @[POSIT.scala 62:28]
      init_inst <= io.request.bits.inst @[POSIT.scala 63:27]
      init_mode <= io.request.bits.mode @[POSIT.scala 64:27]
      skip @[POSIT.scala 58:61]
    inst num1Extractor of PositExtractor @[POSIT.scala 66:35]
    num1Extractor.clock <= clock
    num1Extractor.reset <= reset
    inst num2Extractor of PositExtractor_1 @[POSIT.scala 67:35]
    num2Extractor.clock <= clock
    num2Extractor.reset <= reset
    inst num3Extractor of PositExtractor_2 @[POSIT.scala 68:35]
    num3Extractor.clock <= clock
    num3Extractor.reset <= reset
    num1Extractor.io.in <= init_num1 @[POSIT.scala 69:29]
    num2Extractor.io.in <= init_num2 @[POSIT.scala 70:29]
    num3Extractor.io.in <= init_num3 @[POSIT.scala 71:29]
    reg exec_num1 : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}, clock @[POSIT.scala 73:28]
    reg exec_num2 : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}, clock @[POSIT.scala 74:28]
    reg exec_num3 : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}, clock @[POSIT.scala 75:28]
    reg comp_num1 : UInt<64>, clock @[POSIT.scala 76:28]
    reg comp_num2 : UInt<64>, clock @[POSIT.scala 77:28]
    reg exec_input_valid : UInt<1>, clock @[POSIT.scala 78:35]
    reg exec_inst : UInt<3>, clock @[POSIT.scala 79:28]
    reg exec_mode : UInt<2>, clock @[POSIT.scala 80:28]
    reg exec_valid : UInt<1>, clock @[POSIT.scala 81:29]
    wire default_unpacked : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 82:36]
    default_unpacked.sign <= UInt<1>("h00") @[POSIT.scala 83:32]
    default_unpacked.exponent <= asSInt(UInt<1>("h00")) @[POSIT.scala 84:35]
    default_unpacked.fraction <= UInt<1>("h00") @[POSIT.scala 85:35]
    default_unpacked.isZero <= UInt<1>("h00") @[POSIT.scala 86:33]
    default_unpacked.isNaR <= UInt<1>("h00") @[POSIT.scala 87:32]
    node _T_2 = and(io.result.ready, positDivSqrtCore.io.readyIn) @[POSIT.scala 89:30]
    when _T_2 : @[POSIT.scala 89:61]
      comp_num1 <= init_num1 @[POSIT.scala 90:27]
      comp_num2 <= init_num2 @[POSIT.scala 91:27]
      exec_num1.isNaR <= num1Extractor.io.out.isNaR @[POSIT.scala 92:27]
      exec_num1.isZero <= num1Extractor.io.out.isZero @[POSIT.scala 92:27]
      exec_num1.fraction <= num1Extractor.io.out.fraction @[POSIT.scala 92:27]
      exec_num1.exponent <= num1Extractor.io.out.exponent @[POSIT.scala 92:27]
      exec_num1.sign <= num1Extractor.io.out.sign @[POSIT.scala 92:27]
      exec_num2.isNaR <= num2Extractor.io.out.isNaR @[POSIT.scala 93:27]
      exec_num2.isZero <= num2Extractor.io.out.isZero @[POSIT.scala 93:27]
      exec_num2.fraction <= num2Extractor.io.out.fraction @[POSIT.scala 93:27]
      exec_num2.exponent <= num2Extractor.io.out.exponent @[POSIT.scala 93:27]
      exec_num2.sign <= num2Extractor.io.out.sign @[POSIT.scala 93:27]
      exec_num3.isNaR <= num3Extractor.io.out.isNaR @[POSIT.scala 94:27]
      exec_num3.isZero <= num3Extractor.io.out.isZero @[POSIT.scala 94:27]
      exec_num3.fraction <= num3Extractor.io.out.fraction @[POSIT.scala 94:27]
      exec_num3.exponent <= num3Extractor.io.out.exponent @[POSIT.scala 94:27]
      exec_num3.sign <= num3Extractor.io.out.sign @[POSIT.scala 94:27]
      exec_valid <= init_valid @[POSIT.scala 95:28]
      exec_inst <= init_inst @[POSIT.scala 96:27]
      exec_mode <= init_mode @[POSIT.scala 97:27]
      skip @[POSIT.scala 89:61]
    positAddCore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 100:30]
    positAddCore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 100:30]
    positAddCore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 100:30]
    positAddCore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 100:30]
    positAddCore.io.num1.sign <= exec_num1.sign @[POSIT.scala 100:30]
    positAddCore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 101:30]
    positAddCore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 101:30]
    positAddCore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 101:30]
    positAddCore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 101:30]
    positAddCore.io.num2.sign <= exec_num2.sign @[POSIT.scala 101:30]
    node _T_3 = bits(exec_mode, 0, 0) @[POSIT.scala 102:41]
    positAddCore.io.sub <= _T_3 @[POSIT.scala 102:29]
    node _T_4 = asSInt(comp_num1) @[POSIT.scala 104:43]
    positCompare.io.num1 <= _T_4 @[POSIT.scala 104:30]
    node _T_5 = asSInt(comp_num2) @[POSIT.scala 105:43]
    positCompare.io.num2 <= _T_5 @[POSIT.scala 105:30]
    positFMACore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 107:30]
    positFMACore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 107:30]
    positFMACore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 107:30]
    positFMACore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 107:30]
    positFMACore.io.num1.sign <= exec_num1.sign @[POSIT.scala 107:30]
    positFMACore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 108:30]
    positFMACore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 108:30]
    positFMACore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 108:30]
    positFMACore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 108:30]
    positFMACore.io.num2.sign <= exec_num2.sign @[POSIT.scala 108:30]
    positFMACore.io.num3.isNaR <= default_unpacked.isNaR @[POSIT.scala 109:30]
    positFMACore.io.num3.isZero <= default_unpacked.isZero @[POSIT.scala 109:30]
    positFMACore.io.num3.fraction <= default_unpacked.fraction @[POSIT.scala 109:30]
    positFMACore.io.num3.exponent <= default_unpacked.exponent @[POSIT.scala 109:30]
    positFMACore.io.num3.sign <= default_unpacked.sign @[POSIT.scala 109:30]
    node _T_6 = bits(exec_mode, 0, 0) @[POSIT.scala 110:41]
    positFMACore.io.sub <= _T_6 @[POSIT.scala 110:29]
    node _T_7 = bits(exec_mode, 1, 1) @[POSIT.scala 111:44]
    positFMACore.io.negate <= _T_7 @[POSIT.scala 111:32]
    positDivSqrtCore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 113:34]
    positDivSqrtCore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 113:34]
    positDivSqrtCore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 113:34]
    positDivSqrtCore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 113:34]
    positDivSqrtCore.io.num1.sign <= exec_num1.sign @[POSIT.scala 113:34]
    positDivSqrtCore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 114:34]
    positDivSqrtCore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 114:34]
    positDivSqrtCore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 114:34]
    positDivSqrtCore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 114:34]
    positDivSqrtCore.io.num2.sign <= exec_num2.sign @[POSIT.scala 114:34]
    node _T_8 = bits(exec_mode, 0, 0) @[POSIT.scala 115:48]
    positDivSqrtCore.io.sqrtOp <= _T_8 @[POSIT.scala 115:36]
    positDivSqrtCore.io.validIn <= exec_valid @[POSIT.scala 116:37]
    positMulCore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 118:30]
    positMulCore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 118:30]
    positMulCore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 118:30]
    positMulCore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 118:30]
    positMulCore.io.num1.sign <= exec_num1.sign @[POSIT.scala 118:30]
    positMulCore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 119:30]
    positMulCore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 119:30]
    positMulCore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 119:30]
    positMulCore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 119:30]
    positMulCore.io.num2.sign <= exec_num2.sign @[POSIT.scala 119:30]
    reg result_out : {sign : UInt<1>, exponent : SInt<12>, fraction : UInt<58>, isZero : UInt<1>, isNaR : UInt<1>}, clock @[POSIT.scala 121:29]
    reg result_stickyBit : UInt<1>, clock @[POSIT.scala 122:35]
    reg result_trailingBits : UInt<2>, clock @[POSIT.scala 123:38]
    reg result_valid : UInt<1>, clock @[POSIT.scala 124:31]
    reg result_lt : UInt<1>, clock @[POSIT.scala 125:28]
    reg result_eq : UInt<1>, clock @[POSIT.scala 126:28]
    reg result_gt : UInt<1>, clock @[POSIT.scala 127:28]
    node _T_9 = and(io.result.ready, positDivSqrtCore.io.readyIn) @[POSIT.scala 130:30]
    when _T_9 : @[POSIT.scala 130:61]
      node _T_10 = eq(UInt<3>("h05"), io.request.bits.inst) @[Mux.scala 68:19]
      node _T_11 = mux(_T_10, positDivSqrtCore.io.out, default_unpacked) @[Mux.scala 68:16]
      node _T_12 = eq(UInt<3>("h04"), io.request.bits.inst) @[Mux.scala 68:19]
      node _T_13 = mux(_T_12, positMulCore.io.out, _T_11) @[Mux.scala 68:16]
      node _T_14 = eq(UInt<3>("h03"), io.request.bits.inst) @[Mux.scala 68:19]
      node _T_15 = mux(_T_14, positFMACore.io.out, _T_13) @[Mux.scala 68:16]
      node _T_16 = eq(UInt<3>("h01"), io.request.bits.inst) @[Mux.scala 68:19]
      node _T_17 = mux(_T_16, positAddCore.io.out, _T_15) @[Mux.scala 68:16]
      result_out.isNaR <= _T_17.isNaR @[POSIT.scala 131:28]
      result_out.isZero <= _T_17.isZero @[POSIT.scala 131:28]
      result_out.fraction <= _T_17.fraction @[POSIT.scala 131:28]
      result_out.exponent <= _T_17.exponent @[POSIT.scala 131:28]
      result_out.sign <= _T_17.sign @[POSIT.scala 131:28]
      node _T_18 = eq(UInt<3>("h05"), exec_inst) @[Mux.scala 68:19]
      node _T_19 = mux(_T_18, positDivSqrtCore.io.stickyBit, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_20 = eq(UInt<3>("h04"), exec_inst) @[Mux.scala 68:19]
      node _T_21 = mux(_T_20, positMulCore.io.stickyBit, _T_19) @[Mux.scala 68:16]
      node _T_22 = eq(UInt<3>("h03"), exec_inst) @[Mux.scala 68:19]
      node _T_23 = mux(_T_22, positFMACore.io.stickyBit, _T_21) @[Mux.scala 68:16]
      node _T_24 = eq(UInt<3>("h01"), exec_inst) @[Mux.scala 68:19]
      node _T_25 = mux(_T_24, positAddCore.io.stickyBit, _T_23) @[Mux.scala 68:16]
      result_stickyBit <= _T_25 @[POSIT.scala 139:34]
      node _T_26 = eq(UInt<3>("h05"), exec_inst) @[Mux.scala 68:19]
      node _T_27 = mux(_T_26, positDivSqrtCore.io.trailingBits, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_28 = eq(UInt<3>("h04"), exec_inst) @[Mux.scala 68:19]
      node _T_29 = mux(_T_28, positMulCore.io.trailingBits, _T_27) @[Mux.scala 68:16]
      node _T_30 = eq(UInt<3>("h03"), exec_inst) @[Mux.scala 68:19]
      node _T_31 = mux(_T_30, positFMACore.io.trailingBits, _T_29) @[Mux.scala 68:16]
      node _T_32 = eq(UInt<3>("h01"), exec_inst) @[Mux.scala 68:19]
      node _T_33 = mux(_T_32, positAddCore.io.trailingBits, _T_31) @[Mux.scala 68:16]
      result_trailingBits <= _T_33 @[POSIT.scala 147:37]
      result_lt <= positCompare.io.lt @[POSIT.scala 154:27]
      result_eq <= positCompare.io.eq @[POSIT.scala 155:27]
      result_gt <= positCompare.io.gt @[POSIT.scala 156:27]
      node _T_34 = neq(exec_inst, UInt<3>("h05")) @[POSIT.scala 157:59]
      node _T_35 = and(exec_valid, _T_34) @[POSIT.scala 157:45]
      node _T_36 = or(_T_35, positDivSqrtCore.io.validOut_div) @[POSIT.scala 157:85]
      node _T_37 = or(_T_36, positDivSqrtCore.io.validOut_sqrt) @[POSIT.scala 158:58]
      result_valid <= _T_37 @[POSIT.scala 157:30]
      skip @[POSIT.scala 130:61]
    inst positGenerator of PositGenerator @[POSIT.scala 162:36]
    positGenerator.clock <= clock
    positGenerator.reset <= reset
    positGenerator.io.in.isNaR <= result_out.isNaR @[POSIT.scala 163:40]
    positGenerator.io.in.isZero <= result_out.isZero @[POSIT.scala 163:40]
    positGenerator.io.in.fraction <= result_out.fraction @[POSIT.scala 163:40]
    positGenerator.io.in.exponent <= result_out.exponent @[POSIT.scala 163:40]
    positGenerator.io.in.sign <= result_out.sign @[POSIT.scala 163:40]
    positGenerator.io.trailingBits <= result_trailingBits @[POSIT.scala 164:40]
    positGenerator.io.stickyBit <= result_stickyBit @[POSIT.scala 165:40]
    node _T_38 = neq(positGenerator.io.out, UInt<1>("h00")) @[common.scala 61:41]
    node _T_39 = not(_T_38) @[common.scala 61:33]
    node _T_40 = or(result_out.isZero, _T_39) @[POSIT.scala 167:52]
    io.result.bits.isZero <= _T_40 @[POSIT.scala 167:31]
    node _T_41 = bits(positGenerator.io.out, 63, 63) @[common.scala 27:43]
    node _T_42 = bits(positGenerator.io.out, 62, 0) @[common.scala 27:57]
    node _T_43 = neq(_T_42, UInt<1>("h00")) @[common.scala 27:71]
    node _T_44 = not(_T_43) @[common.scala 27:53]
    node _T_45 = and(_T_41, _T_44) @[common.scala 27:51]
    node _T_46 = or(result_out.isNaR, _T_45) @[POSIT.scala 168:52]
    io.result.bits.isNaR <= _T_46 @[POSIT.scala 168:31]
    io.result.bits.out <= positGenerator.io.out @[POSIT.scala 169:31]
    io.result.bits.lt <= result_lt @[POSIT.scala 170:27]
    io.result.bits.eq <= result_eq @[POSIT.scala 171:27]
    io.result.bits.gt <= result_gt @[POSIT.scala 172:27]
    io.result.bits.exceptions <= positDivSqrtCore.io.exceptions @[POSIT.scala 173:35]
    io.result.valid <= result_valid @[POSIT.scala 175:25]
    
  module Queue : 
    input clock : Clock
    input reset : Reset
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<3>}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<3>}, count : UInt<4>}
    
    cmem _T : UInt<3>[8] @[Decoupled.scala 218:24]
    reg value : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Counter.scala 29:33]
    reg value_1 : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Counter.scala 29:33]
    reg _T_1 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 221:35]
    node _T_2 = eq(value, value_1) @[Decoupled.scala 223:41]
    node _T_3 = eq(_T_1, UInt<1>("h00")) @[Decoupled.scala 224:36]
    node _T_4 = and(_T_2, _T_3) @[Decoupled.scala 224:33]
    node _T_5 = and(_T_2, _T_1) @[Decoupled.scala 225:32]
    node _T_6 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    wire _T_7 : UInt<1>
    _T_7 <= _T_6
    node _T_8 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 40:37]
    wire _T_9 : UInt<1>
    _T_9 <= _T_8
    when _T_7 : @[Decoupled.scala 229:17]
      infer mport _T_10 = _T[value], clock @[Decoupled.scala 230:8]
      _T_10 <= io.enq.bits @[Decoupled.scala 230:24]
      node wrap = eq(value, UInt<3>("h07")) @[Counter.scala 38:24]
      node _T_11 = add(value, UInt<1>("h01")) @[Counter.scala 39:22]
      node _T_12 = tail(_T_11, 1) @[Counter.scala 39:22]
      value <= _T_12 @[Counter.scala 39:13]
      skip @[Decoupled.scala 229:17]
    when _T_9 : @[Decoupled.scala 233:17]
      node wrap_1 = eq(value_1, UInt<3>("h07")) @[Counter.scala 38:24]
      node _T_13 = add(value_1, UInt<1>("h01")) @[Counter.scala 39:22]
      node _T_14 = tail(_T_13, 1) @[Counter.scala 39:22]
      value_1 <= _T_14 @[Counter.scala 39:13]
      skip @[Decoupled.scala 233:17]
    node _T_15 = neq(_T_7, _T_9) @[Decoupled.scala 236:16]
    when _T_15 : @[Decoupled.scala 236:28]
      _T_1 <= _T_7 @[Decoupled.scala 237:16]
      skip @[Decoupled.scala 236:28]
    node _T_16 = eq(_T_4, UInt<1>("h00")) @[Decoupled.scala 240:19]
    io.deq.valid <= _T_16 @[Decoupled.scala 240:16]
    node _T_17 = eq(_T_5, UInt<1>("h00")) @[Decoupled.scala 241:19]
    io.enq.ready <= _T_17 @[Decoupled.scala 241:16]
    infer mport _T_18 = _T[value_1], clock @[Decoupled.scala 242:21]
    io.deq.bits <= _T_18 @[Decoupled.scala 242:15]
    when io.enq.valid : @[Decoupled.scala 245:25]
      io.deq.valid <= UInt<1>("h01") @[Decoupled.scala 245:40]
      skip @[Decoupled.scala 245:25]
    when _T_4 : @[Decoupled.scala 246:18]
      io.deq.bits <= io.enq.bits @[Decoupled.scala 247:19]
      _T_9 <= UInt<1>("h00") @[Decoupled.scala 248:14]
      when io.deq.ready : @[Decoupled.scala 249:27]
        _T_7 <= UInt<1>("h00") @[Decoupled.scala 249:36]
        skip @[Decoupled.scala 249:27]
      skip @[Decoupled.scala 246:18]
    when io.deq.ready : @[Decoupled.scala 254:25]
      io.enq.ready <= UInt<1>("h01") @[Decoupled.scala 254:40]
      skip @[Decoupled.scala 254:25]
    node _T_19 = sub(value, value_1) @[Decoupled.scala 257:40]
    node _T_20 = tail(_T_19, 1) @[Decoupled.scala 257:40]
    node _T_21 = and(_T_1, _T_2) @[Decoupled.scala 259:32]
    node _T_22 = mux(_T_21, UInt<4>("h08"), UInt<1>("h00")) @[Decoupled.scala 259:20]
    node _T_23 = or(_T_22, _T_20) @[Decoupled.scala 259:62]
    io.count <= _T_23 @[Decoupled.scala 259:14]
    
  module DispatchArbiter : 
    input clock : Clock
    input reset : Reset
    output io : {flip validity : UInt<8>, flip priority : UInt<3>, chosen : UInt<3>, hasChosen : UInt<1>}
    
    wire afterPriority : UInt<1>[8] @[DispatchArbiter.scala 14:33]
    wire beforePriority : UInt<1>[8] @[DispatchArbiter.scala 15:34]
    node _T = gt(UInt<3>("h07"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_1 = bits(io.validity, 7, 7) @[DispatchArbiter.scala 19:63]
    node _T_2 = mux(_T, _T_1, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[7] <= _T_2 @[DispatchArbiter.scala 18:34]
    node _T_3 = lt(UInt<3>("h07"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_4 = bits(io.validity, 7, 7) @[DispatchArbiter.scala 21:63]
    node _T_5 = mux(_T_3, _T_4, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[7] <= _T_5 @[DispatchArbiter.scala 20:35]
    node _T_6 = gt(UInt<3>("h06"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_7 = bits(io.validity, 6, 6) @[DispatchArbiter.scala 19:63]
    node _T_8 = mux(_T_6, _T_7, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[6] <= _T_8 @[DispatchArbiter.scala 18:34]
    node _T_9 = lt(UInt<3>("h06"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_10 = bits(io.validity, 6, 6) @[DispatchArbiter.scala 21:63]
    node _T_11 = mux(_T_9, _T_10, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[6] <= _T_11 @[DispatchArbiter.scala 20:35]
    node _T_12 = gt(UInt<3>("h05"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_13 = bits(io.validity, 5, 5) @[DispatchArbiter.scala 19:63]
    node _T_14 = mux(_T_12, _T_13, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[5] <= _T_14 @[DispatchArbiter.scala 18:34]
    node _T_15 = lt(UInt<3>("h05"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_16 = bits(io.validity, 5, 5) @[DispatchArbiter.scala 21:63]
    node _T_17 = mux(_T_15, _T_16, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[5] <= _T_17 @[DispatchArbiter.scala 20:35]
    node _T_18 = gt(UInt<3>("h04"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_19 = bits(io.validity, 4, 4) @[DispatchArbiter.scala 19:63]
    node _T_20 = mux(_T_18, _T_19, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[4] <= _T_20 @[DispatchArbiter.scala 18:34]
    node _T_21 = lt(UInt<3>("h04"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_22 = bits(io.validity, 4, 4) @[DispatchArbiter.scala 21:63]
    node _T_23 = mux(_T_21, _T_22, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[4] <= _T_23 @[DispatchArbiter.scala 20:35]
    node _T_24 = gt(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_25 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 19:63]
    node _T_26 = mux(_T_24, _T_25, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[3] <= _T_26 @[DispatchArbiter.scala 18:34]
    node _T_27 = lt(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_28 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 21:63]
    node _T_29 = mux(_T_27, _T_28, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[3] <= _T_29 @[DispatchArbiter.scala 20:35]
    node _T_30 = gt(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_31 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 19:63]
    node _T_32 = mux(_T_30, _T_31, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[2] <= _T_32 @[DispatchArbiter.scala 18:34]
    node _T_33 = lt(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_34 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 21:63]
    node _T_35 = mux(_T_33, _T_34, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[2] <= _T_35 @[DispatchArbiter.scala 20:35]
    node _T_36 = gt(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_37 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 19:63]
    node _T_38 = mux(_T_36, _T_37, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[1] <= _T_38 @[DispatchArbiter.scala 18:34]
    node _T_39 = lt(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_40 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 21:63]
    node _T_41 = mux(_T_39, _T_40, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[1] <= _T_41 @[DispatchArbiter.scala 20:35]
    node _T_42 = gt(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_43 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 19:63]
    node _T_44 = mux(_T_42, _T_43, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[0] <= _T_44 @[DispatchArbiter.scala 18:34]
    node _T_45 = lt(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_46 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 21:63]
    node _T_47 = mux(_T_45, _T_46, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[0] <= _T_47 @[DispatchArbiter.scala 20:35]
    wire afterPriorityChosen : UInt<3> @[DispatchArbiter.scala 24:33]
    afterPriorityChosen <= UInt<3>("h07") @[DispatchArbiter.scala 25:23]
    wire beforePriorityChosen : UInt<3> @[DispatchArbiter.scala 26:34]
    beforePriorityChosen <= UInt<3>("h07") @[DispatchArbiter.scala 27:24]
    when afterPriority[6] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h06") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[6] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<3>("h06") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[5] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h05") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[5] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<3>("h05") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[4] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h04") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[4] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<3>("h04") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[3] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[3] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[2] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[2] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[1] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[1] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[0] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[0] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    node _T_48 = or(UInt<1>("h00"), afterPriority[0]) @[DispatchArbiter.scala 37:54]
    node _T_49 = or(_T_48, afterPriority[1]) @[DispatchArbiter.scala 37:54]
    node _T_50 = or(_T_49, afterPriority[2]) @[DispatchArbiter.scala 37:54]
    node _T_51 = or(_T_50, afterPriority[3]) @[DispatchArbiter.scala 37:54]
    node _T_52 = or(_T_51, afterPriority[4]) @[DispatchArbiter.scala 37:54]
    node _T_53 = or(_T_52, afterPriority[5]) @[DispatchArbiter.scala 37:54]
    node _T_54 = or(_T_53, afterPriority[6]) @[DispatchArbiter.scala 37:54]
    node afterPriorityExist = or(_T_54, afterPriority[7]) @[DispatchArbiter.scala 37:54]
    node _T_55 = or(UInt<1>("h00"), beforePriority[0]) @[DispatchArbiter.scala 38:56]
    node _T_56 = or(_T_55, beforePriority[1]) @[DispatchArbiter.scala 38:56]
    node _T_57 = or(_T_56, beforePriority[2]) @[DispatchArbiter.scala 38:56]
    node _T_58 = or(_T_57, beforePriority[3]) @[DispatchArbiter.scala 38:56]
    node _T_59 = or(_T_58, beforePriority[4]) @[DispatchArbiter.scala 38:56]
    node _T_60 = or(_T_59, beforePriority[5]) @[DispatchArbiter.scala 38:56]
    node _T_61 = or(_T_60, beforePriority[6]) @[DispatchArbiter.scala 38:56]
    node beforePriorityExist = or(_T_61, beforePriority[7]) @[DispatchArbiter.scala 38:56]
    node _T_62 = or(afterPriorityExist, beforePriorityExist) @[DispatchArbiter.scala 39:44]
    io.hasChosen <= _T_62 @[DispatchArbiter.scala 39:22]
    node _T_63 = mux(afterPriorityExist, afterPriorityChosen, beforePriorityChosen) @[DispatchArbiter.scala 40:25]
    io.chosen <= _T_63 @[DispatchArbiter.scala 40:19]
    
  module DispatchArbiter_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip validity : UInt<24>, flip priority : UInt<5>, chosen : UInt<5>, hasChosen : UInt<1>}
    
    wire afterPriority : UInt<1>[24] @[DispatchArbiter.scala 14:33]
    wire beforePriority : UInt<1>[24] @[DispatchArbiter.scala 15:34]
    node _T = gt(UInt<5>("h017"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_1 = bits(io.validity, 23, 23) @[DispatchArbiter.scala 19:63]
    node _T_2 = mux(_T, _T_1, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[23] <= _T_2 @[DispatchArbiter.scala 18:34]
    node _T_3 = lt(UInt<5>("h017"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_4 = bits(io.validity, 23, 23) @[DispatchArbiter.scala 21:63]
    node _T_5 = mux(_T_3, _T_4, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[23] <= _T_5 @[DispatchArbiter.scala 20:35]
    node _T_6 = gt(UInt<5>("h016"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_7 = bits(io.validity, 22, 22) @[DispatchArbiter.scala 19:63]
    node _T_8 = mux(_T_6, _T_7, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[22] <= _T_8 @[DispatchArbiter.scala 18:34]
    node _T_9 = lt(UInt<5>("h016"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_10 = bits(io.validity, 22, 22) @[DispatchArbiter.scala 21:63]
    node _T_11 = mux(_T_9, _T_10, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[22] <= _T_11 @[DispatchArbiter.scala 20:35]
    node _T_12 = gt(UInt<5>("h015"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_13 = bits(io.validity, 21, 21) @[DispatchArbiter.scala 19:63]
    node _T_14 = mux(_T_12, _T_13, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[21] <= _T_14 @[DispatchArbiter.scala 18:34]
    node _T_15 = lt(UInt<5>("h015"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_16 = bits(io.validity, 21, 21) @[DispatchArbiter.scala 21:63]
    node _T_17 = mux(_T_15, _T_16, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[21] <= _T_17 @[DispatchArbiter.scala 20:35]
    node _T_18 = gt(UInt<5>("h014"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_19 = bits(io.validity, 20, 20) @[DispatchArbiter.scala 19:63]
    node _T_20 = mux(_T_18, _T_19, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[20] <= _T_20 @[DispatchArbiter.scala 18:34]
    node _T_21 = lt(UInt<5>("h014"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_22 = bits(io.validity, 20, 20) @[DispatchArbiter.scala 21:63]
    node _T_23 = mux(_T_21, _T_22, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[20] <= _T_23 @[DispatchArbiter.scala 20:35]
    node _T_24 = gt(UInt<5>("h013"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_25 = bits(io.validity, 19, 19) @[DispatchArbiter.scala 19:63]
    node _T_26 = mux(_T_24, _T_25, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[19] <= _T_26 @[DispatchArbiter.scala 18:34]
    node _T_27 = lt(UInt<5>("h013"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_28 = bits(io.validity, 19, 19) @[DispatchArbiter.scala 21:63]
    node _T_29 = mux(_T_27, _T_28, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[19] <= _T_29 @[DispatchArbiter.scala 20:35]
    node _T_30 = gt(UInt<5>("h012"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_31 = bits(io.validity, 18, 18) @[DispatchArbiter.scala 19:63]
    node _T_32 = mux(_T_30, _T_31, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[18] <= _T_32 @[DispatchArbiter.scala 18:34]
    node _T_33 = lt(UInt<5>("h012"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_34 = bits(io.validity, 18, 18) @[DispatchArbiter.scala 21:63]
    node _T_35 = mux(_T_33, _T_34, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[18] <= _T_35 @[DispatchArbiter.scala 20:35]
    node _T_36 = gt(UInt<5>("h011"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_37 = bits(io.validity, 17, 17) @[DispatchArbiter.scala 19:63]
    node _T_38 = mux(_T_36, _T_37, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[17] <= _T_38 @[DispatchArbiter.scala 18:34]
    node _T_39 = lt(UInt<5>("h011"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_40 = bits(io.validity, 17, 17) @[DispatchArbiter.scala 21:63]
    node _T_41 = mux(_T_39, _T_40, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[17] <= _T_41 @[DispatchArbiter.scala 20:35]
    node _T_42 = gt(UInt<5>("h010"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_43 = bits(io.validity, 16, 16) @[DispatchArbiter.scala 19:63]
    node _T_44 = mux(_T_42, _T_43, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[16] <= _T_44 @[DispatchArbiter.scala 18:34]
    node _T_45 = lt(UInt<5>("h010"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_46 = bits(io.validity, 16, 16) @[DispatchArbiter.scala 21:63]
    node _T_47 = mux(_T_45, _T_46, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[16] <= _T_47 @[DispatchArbiter.scala 20:35]
    node _T_48 = gt(UInt<4>("h0f"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_49 = bits(io.validity, 15, 15) @[DispatchArbiter.scala 19:63]
    node _T_50 = mux(_T_48, _T_49, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[15] <= _T_50 @[DispatchArbiter.scala 18:34]
    node _T_51 = lt(UInt<4>("h0f"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_52 = bits(io.validity, 15, 15) @[DispatchArbiter.scala 21:63]
    node _T_53 = mux(_T_51, _T_52, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[15] <= _T_53 @[DispatchArbiter.scala 20:35]
    node _T_54 = gt(UInt<4>("h0e"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_55 = bits(io.validity, 14, 14) @[DispatchArbiter.scala 19:63]
    node _T_56 = mux(_T_54, _T_55, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[14] <= _T_56 @[DispatchArbiter.scala 18:34]
    node _T_57 = lt(UInt<4>("h0e"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_58 = bits(io.validity, 14, 14) @[DispatchArbiter.scala 21:63]
    node _T_59 = mux(_T_57, _T_58, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[14] <= _T_59 @[DispatchArbiter.scala 20:35]
    node _T_60 = gt(UInt<4>("h0d"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_61 = bits(io.validity, 13, 13) @[DispatchArbiter.scala 19:63]
    node _T_62 = mux(_T_60, _T_61, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[13] <= _T_62 @[DispatchArbiter.scala 18:34]
    node _T_63 = lt(UInt<4>("h0d"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_64 = bits(io.validity, 13, 13) @[DispatchArbiter.scala 21:63]
    node _T_65 = mux(_T_63, _T_64, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[13] <= _T_65 @[DispatchArbiter.scala 20:35]
    node _T_66 = gt(UInt<4>("h0c"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_67 = bits(io.validity, 12, 12) @[DispatchArbiter.scala 19:63]
    node _T_68 = mux(_T_66, _T_67, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[12] <= _T_68 @[DispatchArbiter.scala 18:34]
    node _T_69 = lt(UInt<4>("h0c"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_70 = bits(io.validity, 12, 12) @[DispatchArbiter.scala 21:63]
    node _T_71 = mux(_T_69, _T_70, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[12] <= _T_71 @[DispatchArbiter.scala 20:35]
    node _T_72 = gt(UInt<4>("h0b"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_73 = bits(io.validity, 11, 11) @[DispatchArbiter.scala 19:63]
    node _T_74 = mux(_T_72, _T_73, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[11] <= _T_74 @[DispatchArbiter.scala 18:34]
    node _T_75 = lt(UInt<4>("h0b"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_76 = bits(io.validity, 11, 11) @[DispatchArbiter.scala 21:63]
    node _T_77 = mux(_T_75, _T_76, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[11] <= _T_77 @[DispatchArbiter.scala 20:35]
    node _T_78 = gt(UInt<4>("h0a"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_79 = bits(io.validity, 10, 10) @[DispatchArbiter.scala 19:63]
    node _T_80 = mux(_T_78, _T_79, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[10] <= _T_80 @[DispatchArbiter.scala 18:34]
    node _T_81 = lt(UInt<4>("h0a"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_82 = bits(io.validity, 10, 10) @[DispatchArbiter.scala 21:63]
    node _T_83 = mux(_T_81, _T_82, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[10] <= _T_83 @[DispatchArbiter.scala 20:35]
    node _T_84 = gt(UInt<4>("h09"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_85 = bits(io.validity, 9, 9) @[DispatchArbiter.scala 19:63]
    node _T_86 = mux(_T_84, _T_85, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[9] <= _T_86 @[DispatchArbiter.scala 18:34]
    node _T_87 = lt(UInt<4>("h09"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_88 = bits(io.validity, 9, 9) @[DispatchArbiter.scala 21:63]
    node _T_89 = mux(_T_87, _T_88, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[9] <= _T_89 @[DispatchArbiter.scala 20:35]
    node _T_90 = gt(UInt<4>("h08"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_91 = bits(io.validity, 8, 8) @[DispatchArbiter.scala 19:63]
    node _T_92 = mux(_T_90, _T_91, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[8] <= _T_92 @[DispatchArbiter.scala 18:34]
    node _T_93 = lt(UInt<4>("h08"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_94 = bits(io.validity, 8, 8) @[DispatchArbiter.scala 21:63]
    node _T_95 = mux(_T_93, _T_94, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[8] <= _T_95 @[DispatchArbiter.scala 20:35]
    node _T_96 = gt(UInt<3>("h07"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_97 = bits(io.validity, 7, 7) @[DispatchArbiter.scala 19:63]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[7] <= _T_98 @[DispatchArbiter.scala 18:34]
    node _T_99 = lt(UInt<3>("h07"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_100 = bits(io.validity, 7, 7) @[DispatchArbiter.scala 21:63]
    node _T_101 = mux(_T_99, _T_100, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[7] <= _T_101 @[DispatchArbiter.scala 20:35]
    node _T_102 = gt(UInt<3>("h06"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_103 = bits(io.validity, 6, 6) @[DispatchArbiter.scala 19:63]
    node _T_104 = mux(_T_102, _T_103, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[6] <= _T_104 @[DispatchArbiter.scala 18:34]
    node _T_105 = lt(UInt<3>("h06"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_106 = bits(io.validity, 6, 6) @[DispatchArbiter.scala 21:63]
    node _T_107 = mux(_T_105, _T_106, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[6] <= _T_107 @[DispatchArbiter.scala 20:35]
    node _T_108 = gt(UInt<3>("h05"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_109 = bits(io.validity, 5, 5) @[DispatchArbiter.scala 19:63]
    node _T_110 = mux(_T_108, _T_109, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[5] <= _T_110 @[DispatchArbiter.scala 18:34]
    node _T_111 = lt(UInt<3>("h05"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_112 = bits(io.validity, 5, 5) @[DispatchArbiter.scala 21:63]
    node _T_113 = mux(_T_111, _T_112, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[5] <= _T_113 @[DispatchArbiter.scala 20:35]
    node _T_114 = gt(UInt<3>("h04"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_115 = bits(io.validity, 4, 4) @[DispatchArbiter.scala 19:63]
    node _T_116 = mux(_T_114, _T_115, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[4] <= _T_116 @[DispatchArbiter.scala 18:34]
    node _T_117 = lt(UInt<3>("h04"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_118 = bits(io.validity, 4, 4) @[DispatchArbiter.scala 21:63]
    node _T_119 = mux(_T_117, _T_118, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[4] <= _T_119 @[DispatchArbiter.scala 20:35]
    node _T_120 = gt(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_121 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 19:63]
    node _T_122 = mux(_T_120, _T_121, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[3] <= _T_122 @[DispatchArbiter.scala 18:34]
    node _T_123 = lt(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_124 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 21:63]
    node _T_125 = mux(_T_123, _T_124, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[3] <= _T_125 @[DispatchArbiter.scala 20:35]
    node _T_126 = gt(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_127 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 19:63]
    node _T_128 = mux(_T_126, _T_127, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[2] <= _T_128 @[DispatchArbiter.scala 18:34]
    node _T_129 = lt(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_130 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 21:63]
    node _T_131 = mux(_T_129, _T_130, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[2] <= _T_131 @[DispatchArbiter.scala 20:35]
    node _T_132 = gt(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_133 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 19:63]
    node _T_134 = mux(_T_132, _T_133, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[1] <= _T_134 @[DispatchArbiter.scala 18:34]
    node _T_135 = lt(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_136 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 21:63]
    node _T_137 = mux(_T_135, _T_136, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[1] <= _T_137 @[DispatchArbiter.scala 20:35]
    node _T_138 = gt(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_139 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 19:63]
    node _T_140 = mux(_T_138, _T_139, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[0] <= _T_140 @[DispatchArbiter.scala 18:34]
    node _T_141 = lt(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_142 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 21:63]
    node _T_143 = mux(_T_141, _T_142, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[0] <= _T_143 @[DispatchArbiter.scala 20:35]
    wire afterPriorityChosen : UInt<5> @[DispatchArbiter.scala 24:33]
    afterPriorityChosen <= UInt<5>("h017") @[DispatchArbiter.scala 25:23]
    wire beforePriorityChosen : UInt<5> @[DispatchArbiter.scala 26:34]
    beforePriorityChosen <= UInt<5>("h017") @[DispatchArbiter.scala 27:24]
    when afterPriority[22] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h016") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[22] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<5>("h016") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[21] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h015") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[21] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<5>("h015") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[20] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h014") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[20] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<5>("h014") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[19] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h013") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[19] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<5>("h013") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[18] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h012") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[18] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<5>("h012") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[17] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h011") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[17] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<5>("h011") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[16] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h010") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[16] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<5>("h010") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[15] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0f") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[15] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h0f") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[14] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0e") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[14] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h0e") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[13] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0d") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[13] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h0d") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[12] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0c") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[12] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h0c") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[11] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0b") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[11] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h0b") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[10] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0a") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[10] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h0a") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[9] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h09") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[9] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h09") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[8] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h08") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[8] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<4>("h08") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[7] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h07") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[7] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<3>("h07") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[6] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h06") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[6] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<3>("h06") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[5] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h05") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[5] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<3>("h05") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[4] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h04") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[4] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<3>("h04") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[3] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[3] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[2] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[2] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[1] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[1] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    when afterPriority[0] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[0] : @[DispatchArbiter.scala 33:32]
      beforePriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 34:38]
      skip @[DispatchArbiter.scala 33:32]
    node _T_144 = or(UInt<1>("h00"), afterPriority[0]) @[DispatchArbiter.scala 37:54]
    node _T_145 = or(_T_144, afterPriority[1]) @[DispatchArbiter.scala 37:54]
    node _T_146 = or(_T_145, afterPriority[2]) @[DispatchArbiter.scala 37:54]
    node _T_147 = or(_T_146, afterPriority[3]) @[DispatchArbiter.scala 37:54]
    node _T_148 = or(_T_147, afterPriority[4]) @[DispatchArbiter.scala 37:54]
    node _T_149 = or(_T_148, afterPriority[5]) @[DispatchArbiter.scala 37:54]
    node _T_150 = or(_T_149, afterPriority[6]) @[DispatchArbiter.scala 37:54]
    node _T_151 = or(_T_150, afterPriority[7]) @[DispatchArbiter.scala 37:54]
    node _T_152 = or(_T_151, afterPriority[8]) @[DispatchArbiter.scala 37:54]
    node _T_153 = or(_T_152, afterPriority[9]) @[DispatchArbiter.scala 37:54]
    node _T_154 = or(_T_153, afterPriority[10]) @[DispatchArbiter.scala 37:54]
    node _T_155 = or(_T_154, afterPriority[11]) @[DispatchArbiter.scala 37:54]
    node _T_156 = or(_T_155, afterPriority[12]) @[DispatchArbiter.scala 37:54]
    node _T_157 = or(_T_156, afterPriority[13]) @[DispatchArbiter.scala 37:54]
    node _T_158 = or(_T_157, afterPriority[14]) @[DispatchArbiter.scala 37:54]
    node _T_159 = or(_T_158, afterPriority[15]) @[DispatchArbiter.scala 37:54]
    node _T_160 = or(_T_159, afterPriority[16]) @[DispatchArbiter.scala 37:54]
    node _T_161 = or(_T_160, afterPriority[17]) @[DispatchArbiter.scala 37:54]
    node _T_162 = or(_T_161, afterPriority[18]) @[DispatchArbiter.scala 37:54]
    node _T_163 = or(_T_162, afterPriority[19]) @[DispatchArbiter.scala 37:54]
    node _T_164 = or(_T_163, afterPriority[20]) @[DispatchArbiter.scala 37:54]
    node _T_165 = or(_T_164, afterPriority[21]) @[DispatchArbiter.scala 37:54]
    node _T_166 = or(_T_165, afterPriority[22]) @[DispatchArbiter.scala 37:54]
    node afterPriorityExist = or(_T_166, afterPriority[23]) @[DispatchArbiter.scala 37:54]
    node _T_167 = or(UInt<1>("h00"), beforePriority[0]) @[DispatchArbiter.scala 38:56]
    node _T_168 = or(_T_167, beforePriority[1]) @[DispatchArbiter.scala 38:56]
    node _T_169 = or(_T_168, beforePriority[2]) @[DispatchArbiter.scala 38:56]
    node _T_170 = or(_T_169, beforePriority[3]) @[DispatchArbiter.scala 38:56]
    node _T_171 = or(_T_170, beforePriority[4]) @[DispatchArbiter.scala 38:56]
    node _T_172 = or(_T_171, beforePriority[5]) @[DispatchArbiter.scala 38:56]
    node _T_173 = or(_T_172, beforePriority[6]) @[DispatchArbiter.scala 38:56]
    node _T_174 = or(_T_173, beforePriority[7]) @[DispatchArbiter.scala 38:56]
    node _T_175 = or(_T_174, beforePriority[8]) @[DispatchArbiter.scala 38:56]
    node _T_176 = or(_T_175, beforePriority[9]) @[DispatchArbiter.scala 38:56]
    node _T_177 = or(_T_176, beforePriority[10]) @[DispatchArbiter.scala 38:56]
    node _T_178 = or(_T_177, beforePriority[11]) @[DispatchArbiter.scala 38:56]
    node _T_179 = or(_T_178, beforePriority[12]) @[DispatchArbiter.scala 38:56]
    node _T_180 = or(_T_179, beforePriority[13]) @[DispatchArbiter.scala 38:56]
    node _T_181 = or(_T_180, beforePriority[14]) @[DispatchArbiter.scala 38:56]
    node _T_182 = or(_T_181, beforePriority[15]) @[DispatchArbiter.scala 38:56]
    node _T_183 = or(_T_182, beforePriority[16]) @[DispatchArbiter.scala 38:56]
    node _T_184 = or(_T_183, beforePriority[17]) @[DispatchArbiter.scala 38:56]
    node _T_185 = or(_T_184, beforePriority[18]) @[DispatchArbiter.scala 38:56]
    node _T_186 = or(_T_185, beforePriority[19]) @[DispatchArbiter.scala 38:56]
    node _T_187 = or(_T_186, beforePriority[20]) @[DispatchArbiter.scala 38:56]
    node _T_188 = or(_T_187, beforePriority[21]) @[DispatchArbiter.scala 38:56]
    node _T_189 = or(_T_188, beforePriority[22]) @[DispatchArbiter.scala 38:56]
    node beforePriorityExist = or(_T_189, beforePriority[23]) @[DispatchArbiter.scala 38:56]
    node _T_190 = or(afterPriorityExist, beforePriorityExist) @[DispatchArbiter.scala 39:44]
    io.hasChosen <= _T_190 @[DispatchArbiter.scala 39:22]
    node _T_191 = mux(afterPriorityExist, afterPriorityChosen, beforePriorityChosen) @[DispatchArbiter.scala 40:25]
    io.chosen <= _T_191 @[DispatchArbiter.scala 40:19]
    
  module POSIT_Locality : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {operands : {value : UInt<64>, mode : UInt<2>}[3], inst : UInt<3>, mode : UInt<2>, wr_addr : UInt<48>}}, mem_write : {flip ready : UInt<1>, valid : UInt<1>, bits : {result : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<64>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}, out_wr_addr : UInt<48>}}, op_mem_read : {req_valid : UInt<1>, req_addr : UInt<48>, flip data : UInt<64>, flip resp_valid : UInt<1>, flip resp_tag : UInt<48>}}
    
    inst pe of Posit @[POSIT_Locality.scala 10:24]
    pe.clock <= clock
    pe.reset <= reset
    reg rb : {entries : {operands : {value : UInt<64>, mode : UInt<2>}[3], completed : UInt<1>, valid : UInt<1>, dispatched : UInt<1>, written : UInt<1>, wr_addr : UInt<48>, request : {operands : {value : UInt<64>, mode : UInt<2>}[3], inst : UInt<3>, mode : UInt<2>, wr_addr : UInt<48>, inFetch : UInt<1>[3]}, result : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<64>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}}[8]}, clock @[POSIT_Locality.scala 14:21]
    wire new_input_log : UInt<1> @[POSIT_Locality.scala 17:33]
    reg value : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Counter.scala 29:33]
    wire _T : UInt<1>
    _T <= UInt<1>("h00")
    when new_input_log : @[Counter.scala 67:17]
      node _T_1 = eq(value, UInt<3>("h07")) @[Counter.scala 38:24]
      node _T_2 = add(value, UInt<1>("h01")) @[Counter.scala 39:22]
      node _T_3 = tail(_T_2, 1) @[Counter.scala 39:22]
      value <= _T_3 @[Counter.scala 39:13]
      _T <= _T_1 @[Counter.scala 67:24]
      skip @[Counter.scala 67:17]
    node _T_4 = eq(rb.entries[value].valid, UInt<1>("h00")) @[POSIT_Locality.scala 19:83]
    node _T_5 = or(rb.entries[value].written, _T_4) @[POSIT_Locality.scala 19:80]
    node _T_6 = and(io.request.valid, _T_5) @[POSIT_Locality.scala 19:43]
    new_input_log <= _T_6 @[POSIT_Locality.scala 19:23]
    io.request.ready <= rb.entries[value].written @[POSIT_Locality.scala 22:26]
    when new_input_log : @[POSIT_Locality.scala 23:28]
      rb.entries[value].completed <= UInt<1>("h00") @[POSIT_Locality.scala 24:52]
      rb.entries[value].valid <= UInt<1>("h01") @[POSIT_Locality.scala 25:48]
      rb.entries[value].written <= UInt<1>("h00") @[POSIT_Locality.scala 26:50]
      rb.entries[value].wr_addr <= io.request.bits.wr_addr @[POSIT_Locality.scala 27:50]
      rb.entries[value].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 28:58]
      rb.entries[value].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 28:58]
      rb.entries[value].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 28:58]
      rb.entries[value].request.inst <= io.request.bits.inst @[POSIT_Locality.scala 29:55]
      rb.entries[value].request.mode <= io.request.bits.mode @[POSIT_Locality.scala 30:55]
      rb.entries[value].request.operands[0].mode <= io.request.bits.operands[0].mode @[POSIT_Locality.scala 32:70]
      rb.entries[value].request.operands[0].value <= io.request.bits.operands[0].value @[POSIT_Locality.scala 32:70]
      rb.entries[value].request.operands[1].mode <= io.request.bits.operands[1].mode @[POSIT_Locality.scala 32:70]
      rb.entries[value].request.operands[1].value <= io.request.bits.operands[1].value @[POSIT_Locality.scala 32:70]
      rb.entries[value].request.operands[2].mode <= io.request.bits.operands[2].mode @[POSIT_Locality.scala 32:70]
      rb.entries[value].request.operands[2].value <= io.request.bits.operands[2].value @[POSIT_Locality.scala 32:70]
      wire _T_7 : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<64>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>} @[POSIT_Locality.scala 34:64]
      _T_7.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 34:64]
      _T_7.gt <= UInt<1>("h00") @[POSIT_Locality.scala 34:64]
      _T_7.eq <= UInt<1>("h00") @[POSIT_Locality.scala 34:64]
      _T_7.lt <= UInt<1>("h00") @[POSIT_Locality.scala 34:64]
      _T_7.out <= UInt<64>("h00") @[POSIT_Locality.scala 34:64]
      _T_7.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 34:64]
      _T_7.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 34:64]
      rb.entries[value].result.exceptions <= _T_7.exceptions @[POSIT_Locality.scala 34:49]
      rb.entries[value].result.gt <= _T_7.gt @[POSIT_Locality.scala 34:49]
      rb.entries[value].result.eq <= _T_7.eq @[POSIT_Locality.scala 34:49]
      rb.entries[value].result.lt <= _T_7.lt @[POSIT_Locality.scala 34:49]
      rb.entries[value].result.out <= _T_7.out @[POSIT_Locality.scala 34:49]
      rb.entries[value].result.isNaR <= _T_7.isNaR @[POSIT_Locality.scala 34:49]
      rb.entries[value].result.isZero <= _T_7.isZero @[POSIT_Locality.scala 34:49]
      skip @[POSIT_Locality.scala 23:28]
    wire wbCountOn : UInt<1> @[POSIT_Locality.scala 39:29]
    reg value_1 : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Counter.scala 29:33]
    wire _T_8 : UInt<1>
    _T_8 <= UInt<1>("h00")
    when wbCountOn : @[Counter.scala 67:17]
      node _T_9 = eq(value_1, UInt<3>("h07")) @[Counter.scala 38:24]
      node _T_10 = add(value_1, UInt<1>("h01")) @[Counter.scala 39:22]
      node _T_11 = tail(_T_10, 1) @[Counter.scala 39:22]
      value_1 <= _T_11 @[Counter.scala 39:13]
      _T_8 <= _T_9 @[Counter.scala 67:24]
      skip @[Counter.scala 67:17]
    node _T_12 = and(io.mem_write.ready, rb.entries[value_1].completed) @[POSIT_Locality.scala 41:33]
    when _T_12 : @[POSIT_Locality.scala 41:68]
      wbCountOn <= UInt<1>("h01") @[POSIT_Locality.scala 42:27]
      rb.entries[value_1].written <= UInt<1>("h01") @[POSIT_Locality.scala 43:47]
      skip @[POSIT_Locality.scala 41:68]
    else : @[POSIT_Locality.scala 44:20]
      wbCountOn <= UInt<1>("h00") @[POSIT_Locality.scala 45:27]
      skip @[POSIT_Locality.scala 44:20]
    io.mem_write.valid <= rb.entries[value_1].completed @[POSIT_Locality.scala 49:28]
    io.mem_write.bits.out_wr_addr <= rb.entries[value_1].wr_addr @[POSIT_Locality.scala 50:39]
    io.mem_write.bits.result.exceptions <= rb.entries[value_1].result.exceptions @[POSIT_Locality.scala 51:34]
    io.mem_write.bits.result.gt <= rb.entries[value_1].result.gt @[POSIT_Locality.scala 51:34]
    io.mem_write.bits.result.eq <= rb.entries[value_1].result.eq @[POSIT_Locality.scala 51:34]
    io.mem_write.bits.result.lt <= rb.entries[value_1].result.lt @[POSIT_Locality.scala 51:34]
    io.mem_write.bits.result.out <= rb.entries[value_1].result.out @[POSIT_Locality.scala 51:34]
    io.mem_write.bits.result.isNaR <= rb.entries[value_1].result.isNaR @[POSIT_Locality.scala 51:34]
    io.mem_write.bits.result.isZero <= rb.entries[value_1].result.isZero @[POSIT_Locality.scala 51:34]
    when wbCountOn : @[POSIT_Locality.scala 54:24]
      rb.entries[value_1].written <= UInt<1>("h01") @[POSIT_Locality.scala 55:47]
      skip @[POSIT_Locality.scala 54:24]
    inst processQueue of Queue @[POSIT_Locality.scala 59:31]
    processQueue.clock <= clock
    processQueue.reset <= reset
    inst dispatchArb of DispatchArbiter @[POSIT_Locality.scala 61:33]
    dispatchArb.clock <= clock
    dispatchArb.reset <= reset
    wire opsValidVec : UInt<1>[8] @[POSIT_Locality.scala 66:31]
    node _T_13 = eq(rb.entries[0].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[0] <= _T_13 @[POSIT_Locality.scala 69:40]
    node _T_14 = eq(rb.entries[0].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[0] <= _T_14 @[POSIT_Locality.scala 69:40]
    node _T_15 = eq(rb.entries[0].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[0] <= _T_15 @[POSIT_Locality.scala 69:40]
    node _T_16 = eq(rb.entries[1].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[1] <= _T_16 @[POSIT_Locality.scala 69:40]
    node _T_17 = eq(rb.entries[1].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[1] <= _T_17 @[POSIT_Locality.scala 69:40]
    node _T_18 = eq(rb.entries[1].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[1] <= _T_18 @[POSIT_Locality.scala 69:40]
    node _T_19 = eq(rb.entries[2].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[2] <= _T_19 @[POSIT_Locality.scala 69:40]
    node _T_20 = eq(rb.entries[2].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[2] <= _T_20 @[POSIT_Locality.scala 69:40]
    node _T_21 = eq(rb.entries[2].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[2] <= _T_21 @[POSIT_Locality.scala 69:40]
    node _T_22 = eq(rb.entries[3].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[3] <= _T_22 @[POSIT_Locality.scala 69:40]
    node _T_23 = eq(rb.entries[3].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[3] <= _T_23 @[POSIT_Locality.scala 69:40]
    node _T_24 = eq(rb.entries[3].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[3] <= _T_24 @[POSIT_Locality.scala 69:40]
    node _T_25 = eq(rb.entries[4].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[4] <= _T_25 @[POSIT_Locality.scala 69:40]
    node _T_26 = eq(rb.entries[4].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[4] <= _T_26 @[POSIT_Locality.scala 69:40]
    node _T_27 = eq(rb.entries[4].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[4] <= _T_27 @[POSIT_Locality.scala 69:40]
    node _T_28 = eq(rb.entries[5].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[5] <= _T_28 @[POSIT_Locality.scala 69:40]
    node _T_29 = eq(rb.entries[5].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[5] <= _T_29 @[POSIT_Locality.scala 69:40]
    node _T_30 = eq(rb.entries[5].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[5] <= _T_30 @[POSIT_Locality.scala 69:40]
    node _T_31 = eq(rb.entries[6].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[6] <= _T_31 @[POSIT_Locality.scala 69:40]
    node _T_32 = eq(rb.entries[6].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[6] <= _T_32 @[POSIT_Locality.scala 69:40]
    node _T_33 = eq(rb.entries[6].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[6] <= _T_33 @[POSIT_Locality.scala 69:40]
    node _T_34 = eq(rb.entries[7].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[7] <= _T_34 @[POSIT_Locality.scala 69:40]
    node _T_35 = eq(rb.entries[7].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[7] <= _T_35 @[POSIT_Locality.scala 69:40]
    node _T_36 = eq(rb.entries[7].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 69:43]
    opsValidVec[7] <= _T_36 @[POSIT_Locality.scala 69:40]
    wire waitingForDispatchVec : UInt<1>[8] @[POSIT_Locality.scala 72:41]
    node _T_37 = and(opsValidVec[0], rb.entries[0].valid) @[POSIT_Locality.scala 74:60]
    node _T_38 = eq(rb.entries[0].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_39 = and(_T_37, _T_38) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[0] <= _T_39 @[POSIT_Locality.scala 74:42]
    node _T_40 = and(opsValidVec[1], rb.entries[1].valid) @[POSIT_Locality.scala 74:60]
    node _T_41 = eq(rb.entries[1].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_42 = and(_T_40, _T_41) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[1] <= _T_42 @[POSIT_Locality.scala 74:42]
    node _T_43 = and(opsValidVec[2], rb.entries[2].valid) @[POSIT_Locality.scala 74:60]
    node _T_44 = eq(rb.entries[2].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_45 = and(_T_43, _T_44) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[2] <= _T_45 @[POSIT_Locality.scala 74:42]
    node _T_46 = and(opsValidVec[3], rb.entries[3].valid) @[POSIT_Locality.scala 74:60]
    node _T_47 = eq(rb.entries[3].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_48 = and(_T_46, _T_47) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[3] <= _T_48 @[POSIT_Locality.scala 74:42]
    node _T_49 = and(opsValidVec[4], rb.entries[4].valid) @[POSIT_Locality.scala 74:60]
    node _T_50 = eq(rb.entries[4].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_51 = and(_T_49, _T_50) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[4] <= _T_51 @[POSIT_Locality.scala 74:42]
    node _T_52 = and(opsValidVec[5], rb.entries[5].valid) @[POSIT_Locality.scala 74:60]
    node _T_53 = eq(rb.entries[5].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_54 = and(_T_52, _T_53) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[5] <= _T_54 @[POSIT_Locality.scala 74:42]
    node _T_55 = and(opsValidVec[6], rb.entries[6].valid) @[POSIT_Locality.scala 74:60]
    node _T_56 = eq(rb.entries[6].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_57 = and(_T_55, _T_56) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[6] <= _T_57 @[POSIT_Locality.scala 74:42]
    node _T_58 = and(opsValidVec[7], rb.entries[7].valid) @[POSIT_Locality.scala 74:60]
    node _T_59 = eq(rb.entries[7].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 74:85]
    node _T_60 = and(_T_58, _T_59) @[POSIT_Locality.scala 74:82]
    waitingForDispatchVec[7] <= _T_60 @[POSIT_Locality.scala 74:42]
    node _T_61 = cat(waitingForDispatchVec[1], waitingForDispatchVec[0]) @[POSIT_Locality.scala 78:58]
    node _T_62 = cat(waitingForDispatchVec[3], waitingForDispatchVec[2]) @[POSIT_Locality.scala 78:58]
    node _T_63 = cat(_T_62, _T_61) @[POSIT_Locality.scala 78:58]
    node _T_64 = cat(waitingForDispatchVec[5], waitingForDispatchVec[4]) @[POSIT_Locality.scala 78:58]
    node _T_65 = cat(waitingForDispatchVec[7], waitingForDispatchVec[6]) @[POSIT_Locality.scala 78:58]
    node _T_66 = cat(_T_65, _T_64) @[POSIT_Locality.scala 78:58]
    node _T_67 = cat(_T_66, _T_63) @[POSIT_Locality.scala 78:58]
    dispatchArb.io.validity <= _T_67 @[POSIT_Locality.scala 78:33]
    dispatchArb.io.priority <= wbCountOn @[POSIT_Locality.scala 79:33]
    processQueue.io.enq.bits <= dispatchArb.io.chosen @[POSIT_Locality.scala 83:34]
    node _T_68 = and(dispatchArb.io.hasChosen, pe.io.request.ready) @[POSIT_Locality.scala 84:39]
    node _T_69 = and(_T_68, processQueue.io.enq.ready) @[POSIT_Locality.scala 84:61]
    when _T_69 : @[POSIT_Locality.scala 84:89]
      pe.io.request.valid <= UInt<1>("h01") @[POSIT_Locality.scala 85:37]
      processQueue.io.enq.valid <= UInt<1>("h01") @[POSIT_Locality.scala 86:43]
      skip @[POSIT_Locality.scala 84:89]
    else : @[POSIT_Locality.scala 87:20]
      pe.io.request.valid <= UInt<1>("h00") @[POSIT_Locality.scala 88:37]
      processQueue.io.enq.valid <= UInt<1>("h00") @[POSIT_Locality.scala 89:43]
      skip @[POSIT_Locality.scala 87:20]
    pe.io.result.ready <= io.mem_write.ready @[POSIT_Locality.scala 92:28]
    pe.io.request.bits.num1 <= rb.entries[dispatchArb.io.chosen].request.operands[0].value @[POSIT_Locality.scala 93:33]
    pe.io.request.bits.num2 <= rb.entries[dispatchArb.io.chosen].request.operands[1].value @[POSIT_Locality.scala 94:33]
    pe.io.request.bits.num3 <= rb.entries[dispatchArb.io.chosen].request.operands[2].value @[POSIT_Locality.scala 95:33]
    pe.io.request.bits.mode <= rb.entries[dispatchArb.io.chosen].request.mode @[POSIT_Locality.scala 96:33]
    pe.io.request.bits.inst <= rb.entries[dispatchArb.io.chosen].request.inst @[POSIT_Locality.scala 97:33]
    wire result_idx : UInt<3> @[POSIT_Locality.scala 99:30]
    result_idx <= processQueue.io.deq.bits @[POSIT_Locality.scala 100:20]
    node _T_70 = and(pe.io.result.ready, pe.io.result.valid) @[POSIT_Locality.scala 101:33]
    when _T_70 : @[POSIT_Locality.scala 101:55]
      processQueue.io.deq.ready <= UInt<1>("h01") @[POSIT_Locality.scala 102:43]
      rb.entries[result_idx].result.exceptions <= pe.io.result.bits.exceptions @[POSIT_Locality.scala 103:47]
      rb.entries[result_idx].result.gt <= pe.io.result.bits.gt @[POSIT_Locality.scala 103:47]
      rb.entries[result_idx].result.eq <= pe.io.result.bits.eq @[POSIT_Locality.scala 103:47]
      rb.entries[result_idx].result.lt <= pe.io.result.bits.lt @[POSIT_Locality.scala 103:47]
      rb.entries[result_idx].result.out <= pe.io.result.bits.out @[POSIT_Locality.scala 103:47]
      rb.entries[result_idx].result.isNaR <= pe.io.result.bits.isNaR @[POSIT_Locality.scala 103:47]
      rb.entries[result_idx].result.isZero <= pe.io.result.bits.isZero @[POSIT_Locality.scala 103:47]
      rb.entries[result_idx].completed <= UInt<1>("h01") @[POSIT_Locality.scala 104:50]
      skip @[POSIT_Locality.scala 101:55]
    else : @[POSIT_Locality.scala 105:20]
      processQueue.io.deq.ready <= UInt<1>("h00") @[POSIT_Locality.scala 106:43]
      skip @[POSIT_Locality.scala 105:20]
    node _T_71 = eq(rb.entries[0].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_71 : @[POSIT_Locality.scala 112:77]
      node _T_72 = bits(rb.entries[0].request.operands[0].value, 2, 0)
      when rb.entries[_T_72].completed : @[POSIT_Locality.scala 113:100]
        node _T_73 = bits(rb.entries[0].request.operands[0].value, 2, 0)
        rb.entries[0].request.operands[0].value <= rb.entries[_T_73].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[0].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_74 = eq(rb.entries[0].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_74 : @[POSIT_Locality.scala 112:77]
      node _T_75 = bits(rb.entries[0].request.operands[1].value, 2, 0)
      when rb.entries[_T_75].completed : @[POSIT_Locality.scala 113:100]
        node _T_76 = bits(rb.entries[0].request.operands[1].value, 2, 0)
        rb.entries[0].request.operands[1].value <= rb.entries[_T_76].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[0].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_77 = eq(rb.entries[0].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_77 : @[POSIT_Locality.scala 112:77]
      node _T_78 = bits(rb.entries[0].request.operands[2].value, 2, 0)
      when rb.entries[_T_78].completed : @[POSIT_Locality.scala 113:100]
        node _T_79 = bits(rb.entries[0].request.operands[2].value, 2, 0)
        rb.entries[0].request.operands[2].value <= rb.entries[_T_79].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[0].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_80 = eq(rb.entries[1].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_80 : @[POSIT_Locality.scala 112:77]
      node _T_81 = bits(rb.entries[1].request.operands[0].value, 2, 0)
      when rb.entries[_T_81].completed : @[POSIT_Locality.scala 113:100]
        node _T_82 = bits(rb.entries[1].request.operands[0].value, 2, 0)
        rb.entries[1].request.operands[0].value <= rb.entries[_T_82].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[1].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_83 = eq(rb.entries[1].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_83 : @[POSIT_Locality.scala 112:77]
      node _T_84 = bits(rb.entries[1].request.operands[1].value, 2, 0)
      when rb.entries[_T_84].completed : @[POSIT_Locality.scala 113:100]
        node _T_85 = bits(rb.entries[1].request.operands[1].value, 2, 0)
        rb.entries[1].request.operands[1].value <= rb.entries[_T_85].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[1].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_86 = eq(rb.entries[1].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_86 : @[POSIT_Locality.scala 112:77]
      node _T_87 = bits(rb.entries[1].request.operands[2].value, 2, 0)
      when rb.entries[_T_87].completed : @[POSIT_Locality.scala 113:100]
        node _T_88 = bits(rb.entries[1].request.operands[2].value, 2, 0)
        rb.entries[1].request.operands[2].value <= rb.entries[_T_88].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[1].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_89 = eq(rb.entries[2].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_89 : @[POSIT_Locality.scala 112:77]
      node _T_90 = bits(rb.entries[2].request.operands[0].value, 2, 0)
      when rb.entries[_T_90].completed : @[POSIT_Locality.scala 113:100]
        node _T_91 = bits(rb.entries[2].request.operands[0].value, 2, 0)
        rb.entries[2].request.operands[0].value <= rb.entries[_T_91].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[2].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_92 = eq(rb.entries[2].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_92 : @[POSIT_Locality.scala 112:77]
      node _T_93 = bits(rb.entries[2].request.operands[1].value, 2, 0)
      when rb.entries[_T_93].completed : @[POSIT_Locality.scala 113:100]
        node _T_94 = bits(rb.entries[2].request.operands[1].value, 2, 0)
        rb.entries[2].request.operands[1].value <= rb.entries[_T_94].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[2].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_95 = eq(rb.entries[2].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_95 : @[POSIT_Locality.scala 112:77]
      node _T_96 = bits(rb.entries[2].request.operands[2].value, 2, 0)
      when rb.entries[_T_96].completed : @[POSIT_Locality.scala 113:100]
        node _T_97 = bits(rb.entries[2].request.operands[2].value, 2, 0)
        rb.entries[2].request.operands[2].value <= rb.entries[_T_97].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[2].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_98 = eq(rb.entries[3].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_98 : @[POSIT_Locality.scala 112:77]
      node _T_99 = bits(rb.entries[3].request.operands[0].value, 2, 0)
      when rb.entries[_T_99].completed : @[POSIT_Locality.scala 113:100]
        node _T_100 = bits(rb.entries[3].request.operands[0].value, 2, 0)
        rb.entries[3].request.operands[0].value <= rb.entries[_T_100].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[3].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_101 = eq(rb.entries[3].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_101 : @[POSIT_Locality.scala 112:77]
      node _T_102 = bits(rb.entries[3].request.operands[1].value, 2, 0)
      when rb.entries[_T_102].completed : @[POSIT_Locality.scala 113:100]
        node _T_103 = bits(rb.entries[3].request.operands[1].value, 2, 0)
        rb.entries[3].request.operands[1].value <= rb.entries[_T_103].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[3].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_104 = eq(rb.entries[3].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_104 : @[POSIT_Locality.scala 112:77]
      node _T_105 = bits(rb.entries[3].request.operands[2].value, 2, 0)
      when rb.entries[_T_105].completed : @[POSIT_Locality.scala 113:100]
        node _T_106 = bits(rb.entries[3].request.operands[2].value, 2, 0)
        rb.entries[3].request.operands[2].value <= rb.entries[_T_106].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[3].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_107 = eq(rb.entries[4].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_107 : @[POSIT_Locality.scala 112:77]
      node _T_108 = bits(rb.entries[4].request.operands[0].value, 2, 0)
      when rb.entries[_T_108].completed : @[POSIT_Locality.scala 113:100]
        node _T_109 = bits(rb.entries[4].request.operands[0].value, 2, 0)
        rb.entries[4].request.operands[0].value <= rb.entries[_T_109].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[4].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_110 = eq(rb.entries[4].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_110 : @[POSIT_Locality.scala 112:77]
      node _T_111 = bits(rb.entries[4].request.operands[1].value, 2, 0)
      when rb.entries[_T_111].completed : @[POSIT_Locality.scala 113:100]
        node _T_112 = bits(rb.entries[4].request.operands[1].value, 2, 0)
        rb.entries[4].request.operands[1].value <= rb.entries[_T_112].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[4].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_113 = eq(rb.entries[4].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_113 : @[POSIT_Locality.scala 112:77]
      node _T_114 = bits(rb.entries[4].request.operands[2].value, 2, 0)
      when rb.entries[_T_114].completed : @[POSIT_Locality.scala 113:100]
        node _T_115 = bits(rb.entries[4].request.operands[2].value, 2, 0)
        rb.entries[4].request.operands[2].value <= rb.entries[_T_115].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[4].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_116 = eq(rb.entries[5].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_116 : @[POSIT_Locality.scala 112:77]
      node _T_117 = bits(rb.entries[5].request.operands[0].value, 2, 0)
      when rb.entries[_T_117].completed : @[POSIT_Locality.scala 113:100]
        node _T_118 = bits(rb.entries[5].request.operands[0].value, 2, 0)
        rb.entries[5].request.operands[0].value <= rb.entries[_T_118].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[5].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_119 = eq(rb.entries[5].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_119 : @[POSIT_Locality.scala 112:77]
      node _T_120 = bits(rb.entries[5].request.operands[1].value, 2, 0)
      when rb.entries[_T_120].completed : @[POSIT_Locality.scala 113:100]
        node _T_121 = bits(rb.entries[5].request.operands[1].value, 2, 0)
        rb.entries[5].request.operands[1].value <= rb.entries[_T_121].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[5].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_122 = eq(rb.entries[5].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_122 : @[POSIT_Locality.scala 112:77]
      node _T_123 = bits(rb.entries[5].request.operands[2].value, 2, 0)
      when rb.entries[_T_123].completed : @[POSIT_Locality.scala 113:100]
        node _T_124 = bits(rb.entries[5].request.operands[2].value, 2, 0)
        rb.entries[5].request.operands[2].value <= rb.entries[_T_124].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[5].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_125 = eq(rb.entries[6].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_125 : @[POSIT_Locality.scala 112:77]
      node _T_126 = bits(rb.entries[6].request.operands[0].value, 2, 0)
      when rb.entries[_T_126].completed : @[POSIT_Locality.scala 113:100]
        node _T_127 = bits(rb.entries[6].request.operands[0].value, 2, 0)
        rb.entries[6].request.operands[0].value <= rb.entries[_T_127].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[6].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_128 = eq(rb.entries[6].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_128 : @[POSIT_Locality.scala 112:77]
      node _T_129 = bits(rb.entries[6].request.operands[1].value, 2, 0)
      when rb.entries[_T_129].completed : @[POSIT_Locality.scala 113:100]
        node _T_130 = bits(rb.entries[6].request.operands[1].value, 2, 0)
        rb.entries[6].request.operands[1].value <= rb.entries[_T_130].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[6].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_131 = eq(rb.entries[6].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_131 : @[POSIT_Locality.scala 112:77]
      node _T_132 = bits(rb.entries[6].request.operands[2].value, 2, 0)
      when rb.entries[_T_132].completed : @[POSIT_Locality.scala 113:100]
        node _T_133 = bits(rb.entries[6].request.operands[2].value, 2, 0)
        rb.entries[6].request.operands[2].value <= rb.entries[_T_133].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[6].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_134 = eq(rb.entries[7].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_134 : @[POSIT_Locality.scala 112:77]
      node _T_135 = bits(rb.entries[7].request.operands[0].value, 2, 0)
      when rb.entries[_T_135].completed : @[POSIT_Locality.scala 113:100]
        node _T_136 = bits(rb.entries[7].request.operands[0].value, 2, 0)
        rb.entries[7].request.operands[0].value <= rb.entries[_T_136].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[7].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_137 = eq(rb.entries[7].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_137 : @[POSIT_Locality.scala 112:77]
      node _T_138 = bits(rb.entries[7].request.operands[1].value, 2, 0)
      when rb.entries[_T_138].completed : @[POSIT_Locality.scala 113:100]
        node _T_139 = bits(rb.entries[7].request.operands[1].value, 2, 0)
        rb.entries[7].request.operands[1].value <= rb.entries[_T_139].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[7].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    node _T_140 = eq(rb.entries[7].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 112:69]
    when _T_140 : @[POSIT_Locality.scala 112:77]
      node _T_141 = bits(rb.entries[7].request.operands[2].value, 2, 0)
      when rb.entries[_T_141].completed : @[POSIT_Locality.scala 113:100]
        node _T_142 = bits(rb.entries[7].request.operands[2].value, 2, 0)
        rb.entries[7].request.operands[2].value <= rb.entries[_T_142].result.out @[POSIT_Locality.scala 114:81]
        rb.entries[7].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 116:80]
        skip @[POSIT_Locality.scala 113:100]
      skip @[POSIT_Locality.scala 112:77]
    when io.op_mem_read.resp_valid : @[POSIT_Locality.scala 123:40]
      node _T_143 = eq(rb.entries[0].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_143 : @[POSIT_Locality.scala 126:85]
        node _T_144 = eq(rb.entries[0].request.operands[0].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_144 : @[POSIT_Locality.scala 127:114]
          rb.entries[0].request.operands[0].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[0].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_145 = eq(rb.entries[0].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_145 : @[POSIT_Locality.scala 126:85]
        node _T_146 = eq(rb.entries[1].request.operands[1].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_146 : @[POSIT_Locality.scala 127:114]
          rb.entries[1].request.operands[1].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[0].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_147 = eq(rb.entries[0].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_147 : @[POSIT_Locality.scala 126:85]
        node _T_148 = eq(rb.entries[2].request.operands[2].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_148 : @[POSIT_Locality.scala 127:114]
          rb.entries[2].request.operands[2].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[0].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_149 = eq(rb.entries[1].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_149 : @[POSIT_Locality.scala 126:85]
        node _T_150 = eq(rb.entries[0].request.operands[0].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_150 : @[POSIT_Locality.scala 127:114]
          rb.entries[0].request.operands[0].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[1].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_151 = eq(rb.entries[1].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_151 : @[POSIT_Locality.scala 126:85]
        node _T_152 = eq(rb.entries[1].request.operands[1].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_152 : @[POSIT_Locality.scala 127:114]
          rb.entries[1].request.operands[1].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[1].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_153 = eq(rb.entries[1].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_153 : @[POSIT_Locality.scala 126:85]
        node _T_154 = eq(rb.entries[2].request.operands[2].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_154 : @[POSIT_Locality.scala 127:114]
          rb.entries[2].request.operands[2].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[1].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_155 = eq(rb.entries[2].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_155 : @[POSIT_Locality.scala 126:85]
        node _T_156 = eq(rb.entries[0].request.operands[0].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_156 : @[POSIT_Locality.scala 127:114]
          rb.entries[0].request.operands[0].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[2].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_157 = eq(rb.entries[2].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_157 : @[POSIT_Locality.scala 126:85]
        node _T_158 = eq(rb.entries[1].request.operands[1].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_158 : @[POSIT_Locality.scala 127:114]
          rb.entries[1].request.operands[1].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[2].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_159 = eq(rb.entries[2].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_159 : @[POSIT_Locality.scala 126:85]
        node _T_160 = eq(rb.entries[2].request.operands[2].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_160 : @[POSIT_Locality.scala 127:114]
          rb.entries[2].request.operands[2].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[2].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_161 = eq(rb.entries[3].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_161 : @[POSIT_Locality.scala 126:85]
        node _T_162 = eq(rb.entries[0].request.operands[0].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_162 : @[POSIT_Locality.scala 127:114]
          rb.entries[0].request.operands[0].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[3].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_163 = eq(rb.entries[3].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_163 : @[POSIT_Locality.scala 126:85]
        node _T_164 = eq(rb.entries[1].request.operands[1].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_164 : @[POSIT_Locality.scala 127:114]
          rb.entries[1].request.operands[1].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[3].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_165 = eq(rb.entries[3].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_165 : @[POSIT_Locality.scala 126:85]
        node _T_166 = eq(rb.entries[2].request.operands[2].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_166 : @[POSIT_Locality.scala 127:114]
          rb.entries[2].request.operands[2].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[3].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_167 = eq(rb.entries[4].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_167 : @[POSIT_Locality.scala 126:85]
        node _T_168 = eq(rb.entries[0].request.operands[0].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_168 : @[POSIT_Locality.scala 127:114]
          rb.entries[0].request.operands[0].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[4].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_169 = eq(rb.entries[4].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_169 : @[POSIT_Locality.scala 126:85]
        node _T_170 = eq(rb.entries[1].request.operands[1].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_170 : @[POSIT_Locality.scala 127:114]
          rb.entries[1].request.operands[1].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[4].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_171 = eq(rb.entries[4].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_171 : @[POSIT_Locality.scala 126:85]
        node _T_172 = eq(rb.entries[2].request.operands[2].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_172 : @[POSIT_Locality.scala 127:114]
          rb.entries[2].request.operands[2].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[4].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_173 = eq(rb.entries[5].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_173 : @[POSIT_Locality.scala 126:85]
        node _T_174 = eq(rb.entries[0].request.operands[0].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_174 : @[POSIT_Locality.scala 127:114]
          rb.entries[0].request.operands[0].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[5].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_175 = eq(rb.entries[5].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_175 : @[POSIT_Locality.scala 126:85]
        node _T_176 = eq(rb.entries[1].request.operands[1].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_176 : @[POSIT_Locality.scala 127:114]
          rb.entries[1].request.operands[1].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[5].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_177 = eq(rb.entries[5].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_177 : @[POSIT_Locality.scala 126:85]
        node _T_178 = eq(rb.entries[2].request.operands[2].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_178 : @[POSIT_Locality.scala 127:114]
          rb.entries[2].request.operands[2].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[5].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_179 = eq(rb.entries[6].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_179 : @[POSIT_Locality.scala 126:85]
        node _T_180 = eq(rb.entries[0].request.operands[0].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_180 : @[POSIT_Locality.scala 127:114]
          rb.entries[0].request.operands[0].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[6].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_181 = eq(rb.entries[6].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_181 : @[POSIT_Locality.scala 126:85]
        node _T_182 = eq(rb.entries[1].request.operands[1].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_182 : @[POSIT_Locality.scala 127:114]
          rb.entries[1].request.operands[1].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[6].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_183 = eq(rb.entries[6].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_183 : @[POSIT_Locality.scala 126:85]
        node _T_184 = eq(rb.entries[2].request.operands[2].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_184 : @[POSIT_Locality.scala 127:114]
          rb.entries[2].request.operands[2].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[6].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_185 = eq(rb.entries[7].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_185 : @[POSIT_Locality.scala 126:85]
        node _T_186 = eq(rb.entries[0].request.operands[0].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_186 : @[POSIT_Locality.scala 127:114]
          rb.entries[0].request.operands[0].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[7].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_187 = eq(rb.entries[7].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_187 : @[POSIT_Locality.scala 126:85]
        node _T_188 = eq(rb.entries[1].request.operands[1].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_188 : @[POSIT_Locality.scala 127:114]
          rb.entries[1].request.operands[1].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[7].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      node _T_189 = eq(rb.entries[7].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 126:77]
      when _T_189 : @[POSIT_Locality.scala 126:85]
        node _T_190 = eq(rb.entries[2].request.operands[2].value, io.op_mem_read.resp_tag) @[POSIT_Locality.scala 127:86]
        when _T_190 : @[POSIT_Locality.scala 127:114]
          rb.entries[2].request.operands[2].value <= io.op_mem_read.data @[POSIT_Locality.scala 128:89]
          rb.entries[7].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 129:88]
          skip @[POSIT_Locality.scala 127:114]
        skip @[POSIT_Locality.scala 126:85]
      skip @[POSIT_Locality.scala 123:40]
    wire waitingToBeFetched : UInt<1>[24] @[POSIT_Locality.scala 136:38]
    wire fetchOffSet : UInt<48>[24] @[POSIT_Locality.scala 137:31]
    wire crnt_inFetch : UInt<1>[24] @[POSIT_Locality.scala 138:32]
    wire inFetch : UInt<1>[24] @[POSIT_Locality.scala 139:27]
    node _T_191 = eq(rb.entries[0].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_192 = and(rb.entries[0].valid, _T_191) @[POSIT_Locality.scala 143:53]
    node _T_193 = eq(rb.entries[0].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_194 = and(_T_192, _T_193) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[0] <= _T_194 @[POSIT_Locality.scala 142:67]
    fetchOffSet[0] <= rb.entries[0].request.operands[0].value @[POSIT_Locality.scala 144:60]
    node _T_195 = eq(rb.entries[0].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_196 = and(rb.entries[0].valid, _T_195) @[POSIT_Locality.scala 143:53]
    node _T_197 = eq(rb.entries[0].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_198 = and(_T_196, _T_197) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[1] <= _T_198 @[POSIT_Locality.scala 142:67]
    fetchOffSet[1] <= rb.entries[0].request.operands[1].value @[POSIT_Locality.scala 144:60]
    node _T_199 = eq(rb.entries[0].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_200 = and(rb.entries[0].valid, _T_199) @[POSIT_Locality.scala 143:53]
    node _T_201 = eq(rb.entries[0].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_202 = and(_T_200, _T_201) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[2] <= _T_202 @[POSIT_Locality.scala 142:67]
    fetchOffSet[2] <= rb.entries[0].request.operands[2].value @[POSIT_Locality.scala 144:60]
    node _T_203 = eq(rb.entries[1].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_204 = and(rb.entries[1].valid, _T_203) @[POSIT_Locality.scala 143:53]
    node _T_205 = eq(rb.entries[1].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_206 = and(_T_204, _T_205) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[3] <= _T_206 @[POSIT_Locality.scala 142:67]
    fetchOffSet[3] <= rb.entries[1].request.operands[0].value @[POSIT_Locality.scala 144:60]
    node _T_207 = eq(rb.entries[1].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_208 = and(rb.entries[1].valid, _T_207) @[POSIT_Locality.scala 143:53]
    node _T_209 = eq(rb.entries[1].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_210 = and(_T_208, _T_209) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[4] <= _T_210 @[POSIT_Locality.scala 142:67]
    fetchOffSet[4] <= rb.entries[1].request.operands[1].value @[POSIT_Locality.scala 144:60]
    node _T_211 = eq(rb.entries[1].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_212 = and(rb.entries[1].valid, _T_211) @[POSIT_Locality.scala 143:53]
    node _T_213 = eq(rb.entries[1].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_214 = and(_T_212, _T_213) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[5] <= _T_214 @[POSIT_Locality.scala 142:67]
    fetchOffSet[5] <= rb.entries[1].request.operands[2].value @[POSIT_Locality.scala 144:60]
    node _T_215 = eq(rb.entries[2].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_216 = and(rb.entries[2].valid, _T_215) @[POSIT_Locality.scala 143:53]
    node _T_217 = eq(rb.entries[2].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_218 = and(_T_216, _T_217) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[6] <= _T_218 @[POSIT_Locality.scala 142:67]
    fetchOffSet[6] <= rb.entries[2].request.operands[0].value @[POSIT_Locality.scala 144:60]
    node _T_219 = eq(rb.entries[2].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_220 = and(rb.entries[2].valid, _T_219) @[POSIT_Locality.scala 143:53]
    node _T_221 = eq(rb.entries[2].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_222 = and(_T_220, _T_221) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[7] <= _T_222 @[POSIT_Locality.scala 142:67]
    fetchOffSet[7] <= rb.entries[2].request.operands[1].value @[POSIT_Locality.scala 144:60]
    node _T_223 = eq(rb.entries[2].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_224 = and(rb.entries[2].valid, _T_223) @[POSIT_Locality.scala 143:53]
    node _T_225 = eq(rb.entries[2].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_226 = and(_T_224, _T_225) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[8] <= _T_226 @[POSIT_Locality.scala 142:67]
    fetchOffSet[8] <= rb.entries[2].request.operands[2].value @[POSIT_Locality.scala 144:60]
    node _T_227 = eq(rb.entries[3].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_228 = and(rb.entries[3].valid, _T_227) @[POSIT_Locality.scala 143:53]
    node _T_229 = eq(rb.entries[3].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_230 = and(_T_228, _T_229) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[9] <= _T_230 @[POSIT_Locality.scala 142:67]
    fetchOffSet[9] <= rb.entries[3].request.operands[0].value @[POSIT_Locality.scala 144:60]
    node _T_231 = eq(rb.entries[3].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_232 = and(rb.entries[3].valid, _T_231) @[POSIT_Locality.scala 143:53]
    node _T_233 = eq(rb.entries[3].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_234 = and(_T_232, _T_233) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[10] <= _T_234 @[POSIT_Locality.scala 142:67]
    fetchOffSet[10] <= rb.entries[3].request.operands[1].value @[POSIT_Locality.scala 144:60]
    node _T_235 = eq(rb.entries[3].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_236 = and(rb.entries[3].valid, _T_235) @[POSIT_Locality.scala 143:53]
    node _T_237 = eq(rb.entries[3].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_238 = and(_T_236, _T_237) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[11] <= _T_238 @[POSIT_Locality.scala 142:67]
    fetchOffSet[11] <= rb.entries[3].request.operands[2].value @[POSIT_Locality.scala 144:60]
    node _T_239 = eq(rb.entries[4].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_240 = and(rb.entries[4].valid, _T_239) @[POSIT_Locality.scala 143:53]
    node _T_241 = eq(rb.entries[4].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_242 = and(_T_240, _T_241) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[12] <= _T_242 @[POSIT_Locality.scala 142:67]
    fetchOffSet[12] <= rb.entries[4].request.operands[0].value @[POSIT_Locality.scala 144:60]
    node _T_243 = eq(rb.entries[4].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_244 = and(rb.entries[4].valid, _T_243) @[POSIT_Locality.scala 143:53]
    node _T_245 = eq(rb.entries[4].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_246 = and(_T_244, _T_245) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[13] <= _T_246 @[POSIT_Locality.scala 142:67]
    fetchOffSet[13] <= rb.entries[4].request.operands[1].value @[POSIT_Locality.scala 144:60]
    node _T_247 = eq(rb.entries[4].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_248 = and(rb.entries[4].valid, _T_247) @[POSIT_Locality.scala 143:53]
    node _T_249 = eq(rb.entries[4].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_250 = and(_T_248, _T_249) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[14] <= _T_250 @[POSIT_Locality.scala 142:67]
    fetchOffSet[14] <= rb.entries[4].request.operands[2].value @[POSIT_Locality.scala 144:60]
    node _T_251 = eq(rb.entries[5].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_252 = and(rb.entries[5].valid, _T_251) @[POSIT_Locality.scala 143:53]
    node _T_253 = eq(rb.entries[5].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_254 = and(_T_252, _T_253) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[15] <= _T_254 @[POSIT_Locality.scala 142:67]
    fetchOffSet[15] <= rb.entries[5].request.operands[0].value @[POSIT_Locality.scala 144:60]
    node _T_255 = eq(rb.entries[5].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_256 = and(rb.entries[5].valid, _T_255) @[POSIT_Locality.scala 143:53]
    node _T_257 = eq(rb.entries[5].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_258 = and(_T_256, _T_257) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[16] <= _T_258 @[POSIT_Locality.scala 142:67]
    fetchOffSet[16] <= rb.entries[5].request.operands[1].value @[POSIT_Locality.scala 144:60]
    node _T_259 = eq(rb.entries[5].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_260 = and(rb.entries[5].valid, _T_259) @[POSIT_Locality.scala 143:53]
    node _T_261 = eq(rb.entries[5].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_262 = and(_T_260, _T_261) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[17] <= _T_262 @[POSIT_Locality.scala 142:67]
    fetchOffSet[17] <= rb.entries[5].request.operands[2].value @[POSIT_Locality.scala 144:60]
    node _T_263 = eq(rb.entries[6].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_264 = and(rb.entries[6].valid, _T_263) @[POSIT_Locality.scala 143:53]
    node _T_265 = eq(rb.entries[6].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_266 = and(_T_264, _T_265) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[18] <= _T_266 @[POSIT_Locality.scala 142:67]
    fetchOffSet[18] <= rb.entries[6].request.operands[0].value @[POSIT_Locality.scala 144:60]
    node _T_267 = eq(rb.entries[6].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_268 = and(rb.entries[6].valid, _T_267) @[POSIT_Locality.scala 143:53]
    node _T_269 = eq(rb.entries[6].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_270 = and(_T_268, _T_269) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[19] <= _T_270 @[POSIT_Locality.scala 142:67]
    fetchOffSet[19] <= rb.entries[6].request.operands[1].value @[POSIT_Locality.scala 144:60]
    node _T_271 = eq(rb.entries[6].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_272 = and(rb.entries[6].valid, _T_271) @[POSIT_Locality.scala 143:53]
    node _T_273 = eq(rb.entries[6].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_274 = and(_T_272, _T_273) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[20] <= _T_274 @[POSIT_Locality.scala 142:67]
    fetchOffSet[20] <= rb.entries[6].request.operands[2].value @[POSIT_Locality.scala 144:60]
    node _T_275 = eq(rb.entries[7].request.operands[0].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_276 = and(rb.entries[7].valid, _T_275) @[POSIT_Locality.scala 143:53]
    node _T_277 = eq(rb.entries[7].request.inFetch[0], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_278 = and(_T_276, _T_277) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[21] <= _T_278 @[POSIT_Locality.scala 142:67]
    fetchOffSet[21] <= rb.entries[7].request.operands[0].value @[POSIT_Locality.scala 144:60]
    node _T_279 = eq(rb.entries[7].request.operands[1].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_280 = and(rb.entries[7].valid, _T_279) @[POSIT_Locality.scala 143:53]
    node _T_281 = eq(rb.entries[7].request.inFetch[1], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_282 = and(_T_280, _T_281) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[22] <= _T_282 @[POSIT_Locality.scala 142:67]
    fetchOffSet[22] <= rb.entries[7].request.operands[1].value @[POSIT_Locality.scala 144:60]
    node _T_283 = eq(rb.entries[7].request.operands[2].mode, UInt<2>("h02")) @[POSIT_Locality.scala 143:96]
    node _T_284 = and(rb.entries[7].valid, _T_283) @[POSIT_Locality.scala 143:53]
    node _T_285 = eq(rb.entries[7].request.inFetch[2], UInt<1>("h00")) @[POSIT_Locality.scala 143:109]
    node _T_286 = and(_T_284, _T_285) @[POSIT_Locality.scala 143:105]
    waitingToBeFetched[23] <= _T_286 @[POSIT_Locality.scala 142:67]
    fetchOffSet[23] <= rb.entries[7].request.operands[2].value @[POSIT_Locality.scala 144:60]
    inst fetchArb of DispatchArbiter_1 @[POSIT_Locality.scala 148:30]
    fetchArb.clock <= clock
    fetchArb.reset <= reset
    node _T_287 = cat(waitingToBeFetched[2], waitingToBeFetched[1]) @[POSIT_Locality.scala 149:52]
    node _T_288 = cat(_T_287, waitingToBeFetched[0]) @[POSIT_Locality.scala 149:52]
    node _T_289 = cat(waitingToBeFetched[5], waitingToBeFetched[4]) @[POSIT_Locality.scala 149:52]
    node _T_290 = cat(_T_289, waitingToBeFetched[3]) @[POSIT_Locality.scala 149:52]
    node _T_291 = cat(_T_290, _T_288) @[POSIT_Locality.scala 149:52]
    node _T_292 = cat(waitingToBeFetched[8], waitingToBeFetched[7]) @[POSIT_Locality.scala 149:52]
    node _T_293 = cat(_T_292, waitingToBeFetched[6]) @[POSIT_Locality.scala 149:52]
    node _T_294 = cat(waitingToBeFetched[11], waitingToBeFetched[10]) @[POSIT_Locality.scala 149:52]
    node _T_295 = cat(_T_294, waitingToBeFetched[9]) @[POSIT_Locality.scala 149:52]
    node _T_296 = cat(_T_295, _T_293) @[POSIT_Locality.scala 149:52]
    node _T_297 = cat(_T_296, _T_291) @[POSIT_Locality.scala 149:52]
    node _T_298 = cat(waitingToBeFetched[14], waitingToBeFetched[13]) @[POSIT_Locality.scala 149:52]
    node _T_299 = cat(_T_298, waitingToBeFetched[12]) @[POSIT_Locality.scala 149:52]
    node _T_300 = cat(waitingToBeFetched[17], waitingToBeFetched[16]) @[POSIT_Locality.scala 149:52]
    node _T_301 = cat(_T_300, waitingToBeFetched[15]) @[POSIT_Locality.scala 149:52]
    node _T_302 = cat(_T_301, _T_299) @[POSIT_Locality.scala 149:52]
    node _T_303 = cat(waitingToBeFetched[20], waitingToBeFetched[19]) @[POSIT_Locality.scala 149:52]
    node _T_304 = cat(_T_303, waitingToBeFetched[18]) @[POSIT_Locality.scala 149:52]
    node _T_305 = cat(waitingToBeFetched[23], waitingToBeFetched[22]) @[POSIT_Locality.scala 149:52]
    node _T_306 = cat(_T_305, waitingToBeFetched[21]) @[POSIT_Locality.scala 149:52]
    node _T_307 = cat(_T_306, _T_304) @[POSIT_Locality.scala 149:52]
    node _T_308 = cat(_T_307, _T_302) @[POSIT_Locality.scala 149:52]
    node _T_309 = cat(_T_308, _T_297) @[POSIT_Locality.scala 149:52]
    fetchArb.io.validity <= _T_309 @[POSIT_Locality.scala 149:30]
    fetchArb.io.priority <= wbCountOn @[POSIT_Locality.scala 150:30]
    crnt_inFetch[0] <= rb.entries[0].request.inFetch[0] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[1] <= rb.entries[0].request.inFetch[1] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[2] <= rb.entries[0].request.inFetch[2] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[3] <= rb.entries[1].request.inFetch[0] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[4] <= rb.entries[1].request.inFetch[1] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[5] <= rb.entries[1].request.inFetch[2] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[6] <= rb.entries[2].request.inFetch[0] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[7] <= rb.entries[2].request.inFetch[1] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[8] <= rb.entries[2].request.inFetch[2] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[9] <= rb.entries[3].request.inFetch[0] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[10] <= rb.entries[3].request.inFetch[1] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[11] <= rb.entries[3].request.inFetch[2] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[12] <= rb.entries[4].request.inFetch[0] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[13] <= rb.entries[4].request.inFetch[1] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[14] <= rb.entries[4].request.inFetch[2] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[15] <= rb.entries[5].request.inFetch[0] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[16] <= rb.entries[5].request.inFetch[1] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[17] <= rb.entries[5].request.inFetch[2] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[18] <= rb.entries[6].request.inFetch[0] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[19] <= rb.entries[6].request.inFetch[1] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[20] <= rb.entries[6].request.inFetch[2] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[21] <= rb.entries[7].request.inFetch[0] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[22] <= rb.entries[7].request.inFetch[1] @[POSIT_Locality.scala 154:61]
    crnt_inFetch[23] <= rb.entries[7].request.inFetch[2] @[POSIT_Locality.scala 154:61]
    when fetchArb.io.hasChosen : @[POSIT_Locality.scala 157:36]
      node _T_310 = cat(crnt_inFetch[2], crnt_inFetch[1]) @[POSIT_Locality.scala 158:42]
      node _T_311 = cat(_T_310, crnt_inFetch[0]) @[POSIT_Locality.scala 158:42]
      node _T_312 = cat(crnt_inFetch[5], crnt_inFetch[4]) @[POSIT_Locality.scala 158:42]
      node _T_313 = cat(_T_312, crnt_inFetch[3]) @[POSIT_Locality.scala 158:42]
      node _T_314 = cat(_T_313, _T_311) @[POSIT_Locality.scala 158:42]
      node _T_315 = cat(crnt_inFetch[8], crnt_inFetch[7]) @[POSIT_Locality.scala 158:42]
      node _T_316 = cat(_T_315, crnt_inFetch[6]) @[POSIT_Locality.scala 158:42]
      node _T_317 = cat(crnt_inFetch[11], crnt_inFetch[10]) @[POSIT_Locality.scala 158:42]
      node _T_318 = cat(_T_317, crnt_inFetch[9]) @[POSIT_Locality.scala 158:42]
      node _T_319 = cat(_T_318, _T_316) @[POSIT_Locality.scala 158:42]
      node _T_320 = cat(_T_319, _T_314) @[POSIT_Locality.scala 158:42]
      node _T_321 = cat(crnt_inFetch[14], crnt_inFetch[13]) @[POSIT_Locality.scala 158:42]
      node _T_322 = cat(_T_321, crnt_inFetch[12]) @[POSIT_Locality.scala 158:42]
      node _T_323 = cat(crnt_inFetch[17], crnt_inFetch[16]) @[POSIT_Locality.scala 158:42]
      node _T_324 = cat(_T_323, crnt_inFetch[15]) @[POSIT_Locality.scala 158:42]
      node _T_325 = cat(_T_324, _T_322) @[POSIT_Locality.scala 158:42]
      node _T_326 = cat(crnt_inFetch[20], crnt_inFetch[19]) @[POSIT_Locality.scala 158:42]
      node _T_327 = cat(_T_326, crnt_inFetch[18]) @[POSIT_Locality.scala 158:42]
      node _T_328 = cat(crnt_inFetch[23], crnt_inFetch[22]) @[POSIT_Locality.scala 158:42]
      node _T_329 = cat(_T_328, crnt_inFetch[21]) @[POSIT_Locality.scala 158:42]
      node _T_330 = cat(_T_329, _T_327) @[POSIT_Locality.scala 158:42]
      node _T_331 = cat(_T_330, _T_325) @[POSIT_Locality.scala 158:42]
      node _T_332 = cat(_T_331, _T_320) @[POSIT_Locality.scala 158:42]
      node _T_333 = dshl(UInt<1>("h01"), fetchArb.io.chosen) @[OneHot.scala 58:35]
      node _T_334 = bits(_T_333, 23, 0) @[POSIT_Locality.scala 158:80]
      node _T_335 = xor(_T_332, _T_334) @[POSIT_Locality.scala 158:49]
      node _T_336 = bits(_T_335, 0, 0) @[POSIT_Locality.scala 158:126]
      node _T_337 = bits(_T_335, 1, 1) @[POSIT_Locality.scala 158:126]
      node _T_338 = bits(_T_335, 2, 2) @[POSIT_Locality.scala 158:126]
      node _T_339 = bits(_T_335, 3, 3) @[POSIT_Locality.scala 158:126]
      node _T_340 = bits(_T_335, 4, 4) @[POSIT_Locality.scala 158:126]
      node _T_341 = bits(_T_335, 5, 5) @[POSIT_Locality.scala 158:126]
      node _T_342 = bits(_T_335, 6, 6) @[POSIT_Locality.scala 158:126]
      node _T_343 = bits(_T_335, 7, 7) @[POSIT_Locality.scala 158:126]
      node _T_344 = bits(_T_335, 8, 8) @[POSIT_Locality.scala 158:126]
      node _T_345 = bits(_T_335, 9, 9) @[POSIT_Locality.scala 158:126]
      node _T_346 = bits(_T_335, 10, 10) @[POSIT_Locality.scala 158:126]
      node _T_347 = bits(_T_335, 11, 11) @[POSIT_Locality.scala 158:126]
      node _T_348 = bits(_T_335, 12, 12) @[POSIT_Locality.scala 158:126]
      node _T_349 = bits(_T_335, 13, 13) @[POSIT_Locality.scala 158:126]
      node _T_350 = bits(_T_335, 14, 14) @[POSIT_Locality.scala 158:126]
      node _T_351 = bits(_T_335, 15, 15) @[POSIT_Locality.scala 158:126]
      node _T_352 = bits(_T_335, 16, 16) @[POSIT_Locality.scala 158:126]
      node _T_353 = bits(_T_335, 17, 17) @[POSIT_Locality.scala 158:126]
      node _T_354 = bits(_T_335, 18, 18) @[POSIT_Locality.scala 158:126]
      node _T_355 = bits(_T_335, 19, 19) @[POSIT_Locality.scala 158:126]
      node _T_356 = bits(_T_335, 20, 20) @[POSIT_Locality.scala 158:126]
      node _T_357 = bits(_T_335, 21, 21) @[POSIT_Locality.scala 158:126]
      node _T_358 = bits(_T_335, 22, 22) @[POSIT_Locality.scala 158:126]
      node _T_359 = bits(_T_335, 23, 23) @[POSIT_Locality.scala 158:126]
      inFetch[0] <= _T_336 @[POSIT_Locality.scala 158:25]
      inFetch[1] <= _T_337 @[POSIT_Locality.scala 158:25]
      inFetch[2] <= _T_338 @[POSIT_Locality.scala 158:25]
      inFetch[3] <= _T_339 @[POSIT_Locality.scala 158:25]
      inFetch[4] <= _T_340 @[POSIT_Locality.scala 158:25]
      inFetch[5] <= _T_341 @[POSIT_Locality.scala 158:25]
      inFetch[6] <= _T_342 @[POSIT_Locality.scala 158:25]
      inFetch[7] <= _T_343 @[POSIT_Locality.scala 158:25]
      inFetch[8] <= _T_344 @[POSIT_Locality.scala 158:25]
      inFetch[9] <= _T_345 @[POSIT_Locality.scala 158:25]
      inFetch[10] <= _T_346 @[POSIT_Locality.scala 158:25]
      inFetch[11] <= _T_347 @[POSIT_Locality.scala 158:25]
      inFetch[12] <= _T_348 @[POSIT_Locality.scala 158:25]
      inFetch[13] <= _T_349 @[POSIT_Locality.scala 158:25]
      inFetch[14] <= _T_350 @[POSIT_Locality.scala 158:25]
      inFetch[15] <= _T_351 @[POSIT_Locality.scala 158:25]
      inFetch[16] <= _T_352 @[POSIT_Locality.scala 158:25]
      inFetch[17] <= _T_353 @[POSIT_Locality.scala 158:25]
      inFetch[18] <= _T_354 @[POSIT_Locality.scala 158:25]
      inFetch[19] <= _T_355 @[POSIT_Locality.scala 158:25]
      inFetch[20] <= _T_356 @[POSIT_Locality.scala 158:25]
      inFetch[21] <= _T_357 @[POSIT_Locality.scala 158:25]
      inFetch[22] <= _T_358 @[POSIT_Locality.scala 158:25]
      inFetch[23] <= _T_359 @[POSIT_Locality.scala 158:25]
      io.op_mem_read.req_valid <= UInt<1>("h01") @[POSIT_Locality.scala 159:42]
      io.op_mem_read.req_addr <= fetchOffSet[fetchArb.io.chosen] @[POSIT_Locality.scala 160:41]
      skip @[POSIT_Locality.scala 157:36]
    else : @[POSIT_Locality.scala 161:20]
      inFetch[0] <= crnt_inFetch[0] @[POSIT_Locality.scala 162:25]
      inFetch[1] <= crnt_inFetch[1] @[POSIT_Locality.scala 162:25]
      inFetch[2] <= crnt_inFetch[2] @[POSIT_Locality.scala 162:25]
      inFetch[3] <= crnt_inFetch[3] @[POSIT_Locality.scala 162:25]
      inFetch[4] <= crnt_inFetch[4] @[POSIT_Locality.scala 162:25]
      inFetch[5] <= crnt_inFetch[5] @[POSIT_Locality.scala 162:25]
      inFetch[6] <= crnt_inFetch[6] @[POSIT_Locality.scala 162:25]
      inFetch[7] <= crnt_inFetch[7] @[POSIT_Locality.scala 162:25]
      inFetch[8] <= crnt_inFetch[8] @[POSIT_Locality.scala 162:25]
      inFetch[9] <= crnt_inFetch[9] @[POSIT_Locality.scala 162:25]
      inFetch[10] <= crnt_inFetch[10] @[POSIT_Locality.scala 162:25]
      inFetch[11] <= crnt_inFetch[11] @[POSIT_Locality.scala 162:25]
      inFetch[12] <= crnt_inFetch[12] @[POSIT_Locality.scala 162:25]
      inFetch[13] <= crnt_inFetch[13] @[POSIT_Locality.scala 162:25]
      inFetch[14] <= crnt_inFetch[14] @[POSIT_Locality.scala 162:25]
      inFetch[15] <= crnt_inFetch[15] @[POSIT_Locality.scala 162:25]
      inFetch[16] <= crnt_inFetch[16] @[POSIT_Locality.scala 162:25]
      inFetch[17] <= crnt_inFetch[17] @[POSIT_Locality.scala 162:25]
      inFetch[18] <= crnt_inFetch[18] @[POSIT_Locality.scala 162:25]
      inFetch[19] <= crnt_inFetch[19] @[POSIT_Locality.scala 162:25]
      inFetch[20] <= crnt_inFetch[20] @[POSIT_Locality.scala 162:25]
      inFetch[21] <= crnt_inFetch[21] @[POSIT_Locality.scala 162:25]
      inFetch[22] <= crnt_inFetch[22] @[POSIT_Locality.scala 162:25]
      inFetch[23] <= crnt_inFetch[23] @[POSIT_Locality.scala 162:25]
      io.op_mem_read.req_valid <= UInt<1>("h00") @[POSIT_Locality.scala 163:42]
      io.op_mem_read.req_addr <= fetchOffSet[fetchArb.io.chosen] @[POSIT_Locality.scala 164:41]
      skip @[POSIT_Locality.scala 161:20]
    rb.entries[0].request.inFetch[0] <= inFetch[0] @[POSIT_Locality.scala 168:58]
    rb.entries[0].request.inFetch[1] <= inFetch[1] @[POSIT_Locality.scala 168:58]
    rb.entries[0].request.inFetch[2] <= inFetch[2] @[POSIT_Locality.scala 168:58]
    rb.entries[1].request.inFetch[0] <= inFetch[3] @[POSIT_Locality.scala 168:58]
    rb.entries[1].request.inFetch[1] <= inFetch[4] @[POSIT_Locality.scala 168:58]
    rb.entries[1].request.inFetch[2] <= inFetch[5] @[POSIT_Locality.scala 168:58]
    rb.entries[2].request.inFetch[0] <= inFetch[6] @[POSIT_Locality.scala 168:58]
    rb.entries[2].request.inFetch[1] <= inFetch[7] @[POSIT_Locality.scala 168:58]
    rb.entries[2].request.inFetch[2] <= inFetch[8] @[POSIT_Locality.scala 168:58]
    rb.entries[3].request.inFetch[0] <= inFetch[9] @[POSIT_Locality.scala 168:58]
    rb.entries[3].request.inFetch[1] <= inFetch[10] @[POSIT_Locality.scala 168:58]
    rb.entries[3].request.inFetch[2] <= inFetch[11] @[POSIT_Locality.scala 168:58]
    rb.entries[4].request.inFetch[0] <= inFetch[12] @[POSIT_Locality.scala 168:58]
    rb.entries[4].request.inFetch[1] <= inFetch[13] @[POSIT_Locality.scala 168:58]
    rb.entries[4].request.inFetch[2] <= inFetch[14] @[POSIT_Locality.scala 168:58]
    rb.entries[5].request.inFetch[0] <= inFetch[15] @[POSIT_Locality.scala 168:58]
    rb.entries[5].request.inFetch[1] <= inFetch[16] @[POSIT_Locality.scala 168:58]
    rb.entries[5].request.inFetch[2] <= inFetch[17] @[POSIT_Locality.scala 168:58]
    rb.entries[6].request.inFetch[0] <= inFetch[18] @[POSIT_Locality.scala 168:58]
    rb.entries[6].request.inFetch[1] <= inFetch[19] @[POSIT_Locality.scala 168:58]
    rb.entries[6].request.inFetch[2] <= inFetch[20] @[POSIT_Locality.scala 168:58]
    rb.entries[7].request.inFetch[0] <= inFetch[21] @[POSIT_Locality.scala 168:58]
    rb.entries[7].request.inFetch[1] <= inFetch[22] @[POSIT_Locality.scala 168:58]
    rb.entries[7].request.inFetch[2] <= inFetch[23] @[POSIT_Locality.scala 168:58]
    
