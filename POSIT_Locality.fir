;buildInfoPackage: chisel3, version: 3.2.8, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit POSIT_Locality : 
  module PositAddCore : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip sub : UInt<1>, flip input_valid : UInt<1>, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, output_valid : UInt<1>}
    
    wire result : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[PositAdd.scala 22:20]
    node _T = gt(io.num1.exponent, io.num2.exponent) @[PositAdd.scala 25:20]
    node _T_1 = eq(io.num1.exponent, io.num2.exponent) @[PositAdd.scala 26:21]
    node _T_2 = gt(io.num1.fraction, io.num2.fraction) @[PositAdd.scala 27:22]
    node _T_3 = and(_T_1, _T_2) @[PositAdd.scala 26:39]
    node num1magGt = or(_T, _T_3) @[PositAdd.scala 25:37]
    node num2AdjSign = xor(io.num2.sign, io.sub) @[PositAdd.scala 28:31]
    node largeSign = mux(num1magGt, io.num1.sign, num2AdjSign) @[PositAdd.scala 30:22]
    node largeExp = mux(num1magGt, io.num1.exponent, io.num2.exponent) @[PositAdd.scala 31:22]
    node _T_4 = mux(num1magGt, io.num1.fraction, io.num2.fraction) @[PositAdd.scala 33:12]
    node largeFrac = cat(_T_4, UInt<3>("h00")) @[Cat.scala 30:58]
    node smallSign = mux(num1magGt, num2AdjSign, io.num1.sign) @[PositAdd.scala 35:22]
    node smallExp = mux(num1magGt, io.num2.exponent, io.num1.exponent) @[PositAdd.scala 36:22]
    node _T_5 = mux(num1magGt, io.num2.fraction, io.num1.fraction) @[PositAdd.scala 38:12]
    node smallFrac = cat(_T_5, UInt<3>("h00")) @[Cat.scala 30:58]
    node _T_6 = sub(largeExp, smallExp) @[PositAdd.scala 40:27]
    node _T_7 = tail(_T_6, 1) @[PositAdd.scala 40:27]
    node _T_8 = asSInt(_T_7) @[PositAdd.scala 40:27]
    node expDiff = asUInt(_T_8) @[PositAdd.scala 40:45]
    node _T_9 = lt(expDiff, UInt<5>("h01f")) @[PositAdd.scala 42:17]
    node _T_10 = dshr(smallFrac, expDiff) @[PositAdd.scala 42:59]
    node shiftedSmallFrac = mux(_T_9, _T_10, UInt<1>("h00")) @[PositAdd.scala 42:8]
    node _T_11 = gt(expDiff, UInt<2>("h03")) @[PositAdd.scala 44:17]
    node _T_12 = sub(expDiff, UInt<2>("h03")) @[PositAdd.scala 45:36]
    node _T_13 = tail(_T_12, 1) @[PositAdd.scala 45:36]
    node _T_14 = dshl(UInt<1>("h01"), _T_13) @[PositAdd.scala 45:24]
    node _T_15 = sub(_T_14, UInt<1>("h01")) @[PositAdd.scala 45:100]
    node _T_16 = tail(_T_15, 1) @[PositAdd.scala 45:100]
    node _T_17 = and(smallFrac, _T_16) @[PositAdd.scala 45:16]
    node _T_18 = neq(_T_17, UInt<1>("h00")) @[PositAdd.scala 45:111]
    node smallFracStickyBit = mux(_T_11, _T_18, UInt<1>("h00")) @[PositAdd.scala 44:8]
    node _T_19 = xor(largeSign, smallSign) @[PositAdd.scala 48:32]
    node isAddition = eq(_T_19, UInt<1>("h00")) @[PositAdd.scala 48:20]
    reg isAddition_n : UInt<1>, clock @[PositAdd.scala 50:29]
    isAddition_n <= isAddition @[PositAdd.scala 50:29]
    reg shiftedSmallFrac_n : UInt, clock @[PositAdd.scala 51:35]
    shiftedSmallFrac_n <= shiftedSmallFrac @[PositAdd.scala 51:35]
    reg largeFrac_n : UInt, clock @[PositAdd.scala 52:28]
    largeFrac_n <= largeFrac @[PositAdd.scala 52:28]
    reg largeExp_n : SInt, clock @[PositAdd.scala 53:27]
    largeExp_n <= largeExp @[PositAdd.scala 53:27]
    reg valid_n : UInt<1>, clock @[PositAdd.scala 54:24]
    valid_n <= io.input_valid @[PositAdd.scala 54:24]
    node _T_20 = not(shiftedSmallFrac_n) @[PositAdd.scala 57:43]
    node _T_21 = add(_T_20, UInt<1>("h01")) @[PositAdd.scala 57:63]
    node _T_22 = tail(_T_21, 1) @[PositAdd.scala 57:63]
    node signedSmallerFrac = mux(isAddition_n, shiftedSmallFrac_n, _T_22) @[PositAdd.scala 57:8]
    node _T_23 = add(largeFrac_n, signedSmallerFrac) @[PositAdd.scala 59:56]
    wire adderFrac : UInt<32>
    adderFrac <= _T_23
    node _T_24 = bits(adderFrac, 31, 31) @[PositAdd.scala 61:45]
    node sumOverflow = and(isAddition_n, _T_24) @[PositAdd.scala 61:34]
    node _T_25 = asSInt(sumOverflow) @[PositAdd.scala 63:52]
    node _T_26 = sub(largeExp_n, _T_25) @[PositAdd.scala 63:32]
    node _T_27 = tail(_T_26, 1) @[PositAdd.scala 63:32]
    node adjAdderExp = asSInt(_T_27) @[PositAdd.scala 63:32]
    node _T_28 = bits(adderFrac, 31, 1) @[PositAdd.scala 65:31]
    node _T_29 = bits(adderFrac, 30, 0) @[PositAdd.scala 65:71]
    node adjAdderFrac = mux(sumOverflow, _T_28, _T_29) @[PositAdd.scala 65:8]
    node _T_30 = bits(adderFrac, 0, 0) @[PositAdd.scala 66:45]
    node sumStickyBit = and(sumOverflow, _T_30) @[PositAdd.scala 66:34]
    node _T_31 = bits(adjAdderFrac, 0, 0) @[common.scala 19:50]
    node _T_32 = bits(adjAdderFrac, 1, 1) @[common.scala 19:50]
    node _T_33 = bits(adjAdderFrac, 2, 2) @[common.scala 19:50]
    node _T_34 = bits(adjAdderFrac, 3, 3) @[common.scala 19:50]
    node _T_35 = bits(adjAdderFrac, 4, 4) @[common.scala 19:50]
    node _T_36 = bits(adjAdderFrac, 5, 5) @[common.scala 19:50]
    node _T_37 = bits(adjAdderFrac, 6, 6) @[common.scala 19:50]
    node _T_38 = bits(adjAdderFrac, 7, 7) @[common.scala 19:50]
    node _T_39 = bits(adjAdderFrac, 8, 8) @[common.scala 19:50]
    node _T_40 = bits(adjAdderFrac, 9, 9) @[common.scala 19:50]
    node _T_41 = bits(adjAdderFrac, 10, 10) @[common.scala 19:50]
    node _T_42 = bits(adjAdderFrac, 11, 11) @[common.scala 19:50]
    node _T_43 = bits(adjAdderFrac, 12, 12) @[common.scala 19:50]
    node _T_44 = bits(adjAdderFrac, 13, 13) @[common.scala 19:50]
    node _T_45 = bits(adjAdderFrac, 14, 14) @[common.scala 19:50]
    node _T_46 = bits(adjAdderFrac, 15, 15) @[common.scala 19:50]
    node _T_47 = bits(adjAdderFrac, 16, 16) @[common.scala 19:50]
    node _T_48 = bits(adjAdderFrac, 17, 17) @[common.scala 19:50]
    node _T_49 = bits(adjAdderFrac, 18, 18) @[common.scala 19:50]
    node _T_50 = bits(adjAdderFrac, 19, 19) @[common.scala 19:50]
    node _T_51 = bits(adjAdderFrac, 20, 20) @[common.scala 19:50]
    node _T_52 = bits(adjAdderFrac, 21, 21) @[common.scala 19:50]
    node _T_53 = bits(adjAdderFrac, 22, 22) @[common.scala 19:50]
    node _T_54 = bits(adjAdderFrac, 23, 23) @[common.scala 19:50]
    node _T_55 = bits(adjAdderFrac, 24, 24) @[common.scala 19:50]
    node _T_56 = bits(adjAdderFrac, 25, 25) @[common.scala 19:50]
    node _T_57 = bits(adjAdderFrac, 26, 26) @[common.scala 19:50]
    node _T_58 = bits(adjAdderFrac, 27, 27) @[common.scala 19:50]
    node _T_59 = bits(adjAdderFrac, 28, 28) @[common.scala 19:50]
    node _T_60 = bits(adjAdderFrac, 29, 29) @[common.scala 19:50]
    node _T_61 = bits(adjAdderFrac, 30, 30) @[common.scala 19:50]
    node _T_62 = mux(_T_32, UInt<5>("h01d"), UInt<5>("h01e")) @[Mux.scala 47:69]
    node _T_63 = mux(_T_33, UInt<5>("h01c"), _T_62) @[Mux.scala 47:69]
    node _T_64 = mux(_T_34, UInt<5>("h01b"), _T_63) @[Mux.scala 47:69]
    node _T_65 = mux(_T_35, UInt<5>("h01a"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_36, UInt<5>("h019"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_37, UInt<5>("h018"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_38, UInt<5>("h017"), _T_67) @[Mux.scala 47:69]
    node _T_69 = mux(_T_39, UInt<5>("h016"), _T_68) @[Mux.scala 47:69]
    node _T_70 = mux(_T_40, UInt<5>("h015"), _T_69) @[Mux.scala 47:69]
    node _T_71 = mux(_T_41, UInt<5>("h014"), _T_70) @[Mux.scala 47:69]
    node _T_72 = mux(_T_42, UInt<5>("h013"), _T_71) @[Mux.scala 47:69]
    node _T_73 = mux(_T_43, UInt<5>("h012"), _T_72) @[Mux.scala 47:69]
    node _T_74 = mux(_T_44, UInt<5>("h011"), _T_73) @[Mux.scala 47:69]
    node _T_75 = mux(_T_45, UInt<5>("h010"), _T_74) @[Mux.scala 47:69]
    node _T_76 = mux(_T_46, UInt<4>("h0f"), _T_75) @[Mux.scala 47:69]
    node _T_77 = mux(_T_47, UInt<4>("h0e"), _T_76) @[Mux.scala 47:69]
    node _T_78 = mux(_T_48, UInt<4>("h0d"), _T_77) @[Mux.scala 47:69]
    node _T_79 = mux(_T_49, UInt<4>("h0c"), _T_78) @[Mux.scala 47:69]
    node _T_80 = mux(_T_50, UInt<4>("h0b"), _T_79) @[Mux.scala 47:69]
    node _T_81 = mux(_T_51, UInt<4>("h0a"), _T_80) @[Mux.scala 47:69]
    node _T_82 = mux(_T_52, UInt<4>("h09"), _T_81) @[Mux.scala 47:69]
    node _T_83 = mux(_T_53, UInt<4>("h08"), _T_82) @[Mux.scala 47:69]
    node _T_84 = mux(_T_54, UInt<3>("h07"), _T_83) @[Mux.scala 47:69]
    node _T_85 = mux(_T_55, UInt<3>("h06"), _T_84) @[Mux.scala 47:69]
    node _T_86 = mux(_T_56, UInt<3>("h05"), _T_85) @[Mux.scala 47:69]
    node _T_87 = mux(_T_57, UInt<3>("h04"), _T_86) @[Mux.scala 47:69]
    node _T_88 = mux(_T_58, UInt<2>("h03"), _T_87) @[Mux.scala 47:69]
    node _T_89 = mux(_T_59, UInt<2>("h02"), _T_88) @[Mux.scala 47:69]
    node _T_90 = mux(_T_60, UInt<1>("h01"), _T_89) @[Mux.scala 47:69]
    node normalizationFactor = mux(_T_61, UInt<1>("h00"), _T_90) @[Mux.scala 47:69]
    node _T_91 = asSInt(normalizationFactor) @[PositAdd.scala 70:62]
    node _T_92 = sub(adjAdderExp, _T_91) @[PositAdd.scala 70:34]
    node _T_93 = tail(_T_92, 1) @[PositAdd.scala 70:34]
    node normExponent = asSInt(_T_93) @[PositAdd.scala 70:34]
    node normFraction = dshl(adjAdderFrac, normalizationFactor) @[PositAdd.scala 71:35]
    node _T_94 = or(io.num1.isNaR, io.num2.isNaR) @[PositAdd.scala 73:33]
    result.isNaR <= _T_94 @[PositAdd.scala 73:19]
    node _T_95 = and(io.num1.isZero, io.num2.isZero) @[PositAdd.scala 74:35]
    node _T_96 = eq(adderFrac, UInt<1>("h00")) @[PositAdd.scala 74:64]
    node _T_97 = or(_T_95, _T_96) @[PositAdd.scala 74:51]
    result.isZero <= _T_97 @[PositAdd.scala 74:19]
    result.sign <= largeSign @[PositAdd.scala 75:19]
    result.exponent <= normExponent @[PositAdd.scala 76:19]
    node _T_98 = bits(normFraction, 30, 3) @[PositAdd.scala 77:34]
    result.fraction <= _T_98 @[PositAdd.scala 77:19]
    node _T_99 = bits(normFraction, 2, 1) @[PositAdd.scala 79:34]
    io.trailingBits <= _T_99 @[PositAdd.scala 79:19]
    node _T_100 = bits(normFraction, 0, 0) @[PositAdd.scala 80:49]
    node _T_101 = neq(_T_100, UInt<1>("h00")) @[PositAdd.scala 80:76]
    node _T_102 = or(sumStickyBit, _T_101) @[PositAdd.scala 80:35]
    io.stickyBit <= _T_102 @[PositAdd.scala 80:19]
    io.out.isNaR <= result.isNaR @[PositAdd.scala 82:10]
    io.out.isZero <= result.isZero @[PositAdd.scala 82:10]
    io.out.fraction <= result.fraction @[PositAdd.scala 82:10]
    io.out.exponent <= result.exponent @[PositAdd.scala 82:10]
    io.out.sign <= result.sign @[PositAdd.scala 82:10]
    io.output_valid <= valid_n @[PositAdd.scala 83:19]
    
  module PositCompare : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : SInt<32>, flip num2 : SInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, flip validIn : UInt<1>, validOut : UInt<1>}
    
    io.validOut <= io.validIn @[PositCompare.scala 15:15]
    node _T = lt(io.num1, io.num2) @[PositCompare.scala 16:21]
    io.lt <= _T @[PositCompare.scala 16:9]
    node _T_1 = eq(io.num1, io.num2) @[PositCompare.scala 17:21]
    io.eq <= _T_1 @[PositCompare.scala 17:9]
    node _T_2 = eq(io.lt, UInt<1>("h00")) @[PositCompare.scala 18:13]
    node _T_3 = eq(io.eq, UInt<1>("h00")) @[PositCompare.scala 18:23]
    node _T_4 = and(_T_2, _T_3) @[PositCompare.scala 18:20]
    io.gt <= _T_4 @[PositCompare.scala 18:9]
    
  module PositFMACore : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num3 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip sub : UInt<1>, flip negate : UInt<1>, flip input_valid : UInt<1>, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, output_valid : UInt<1>}
    
    node productExponent = add(io.num1.exponent, io.num2.exponent) @[PositFMA.scala 25:39]
    node _T = mul(io.num1.fraction, io.num2.fraction) @[PositFMA.scala 27:63]
    wire productFraction : UInt<56>
    productFraction <= _T
    node prodOverflow = bits(productFraction, 55, 55) @[PositFMA.scala 29:44]
    node _T_1 = bits(productFraction, 55, 1) @[PositFMA.scala 31:38]
    node _T_2 = bits(productFraction, 54, 0) @[PositFMA.scala 31:89]
    node normProductFraction = mux(prodOverflow, _T_1, _T_2) @[PositFMA.scala 31:8]
    node _T_3 = cat(UInt<1>("h00"), prodOverflow) @[Cat.scala 30:58]
    node _T_4 = asSInt(_T_3) @[PositFMA.scala 32:76]
    node _T_5 = add(productExponent, _T_4) @[PositFMA.scala 32:45]
    node _T_6 = tail(_T_5, 1) @[PositFMA.scala 32:45]
    node normProductExponent = asSInt(_T_6) @[PositFMA.scala 32:45]
    node _T_7 = bits(productFraction, 0, 0) @[PositFMA.scala 33:59]
    node prodStickyBit = and(prodOverflow, _T_7) @[PositFMA.scala 33:42]
    node _T_8 = cat(io.num3.fraction, UInt<27>("h00")) @[Cat.scala 30:58]
    node addendFraction = mux(io.num3.isZero, UInt<1>("h00"), _T_8) @[PositFMA.scala 36:27]
    node _T_9 = xor(io.num1.sign, io.num2.sign) @[PositFMA.scala 39:39]
    node _T_10 = xor(_T_9, io.negate) @[PositFMA.scala 39:51]
    reg productSign : UInt<1>, clock @[PositFMA.scala 39:28]
    productSign <= _T_10 @[PositFMA.scala 39:28]
    node _T_11 = xor(io.num3.sign, io.negate) @[PositFMA.scala 40:39]
    node _T_12 = xor(_T_11, io.sub) @[PositFMA.scala 40:51]
    reg addendSign : UInt<1>, clock @[PositFMA.scala 40:28]
    addendSign <= _T_12 @[PositFMA.scala 40:28]
    reg addendExponent_n : SInt, clock @[PositFMA.scala 41:33]
    addendExponent_n <= io.num3.exponent @[PositFMA.scala 41:33]
    reg normProductExponent_n : SInt, clock @[PositFMA.scala 42:38]
    normProductExponent_n <= normProductExponent @[PositFMA.scala 42:38]
    reg addendFraction_n : UInt, clock @[PositFMA.scala 43:33]
    addendFraction_n <= addendFraction @[PositFMA.scala 43:33]
    reg normProductFraction_n : UInt, clock @[PositFMA.scala 44:38]
    normProductFraction_n <= normProductFraction @[PositFMA.scala 44:38]
    node _T_13 = not(io.num3.isZero) @[PositFMA.scala 46:13]
    node _T_14 = gt(io.num3.exponent, normProductExponent) @[PositFMA.scala 47:24]
    node _T_15 = eq(io.num3.exponent, normProductExponent) @[PositFMA.scala 48:25]
    node _T_16 = gt(addendFraction, normProductFraction) @[PositFMA.scala 48:68]
    node _T_17 = and(_T_15, _T_16) @[PositFMA.scala 48:49]
    node _T_18 = or(_T_14, _T_17) @[PositFMA.scala 47:47]
    node _T_19 = and(_T_13, _T_18) @[PositFMA.scala 46:27]
    reg isAddendGtProduct : UInt<1>, clock @[PositFMA.scala 46:12]
    isAddendGtProduct <= _T_19 @[PositFMA.scala 46:12]
    node gExp = mux(isAddendGtProduct, addendExponent_n, normProductExponent_n) @[PositFMA.scala 50:18]
    node gFrac = mux(isAddendGtProduct, addendFraction_n, normProductFraction_n) @[PositFMA.scala 51:18]
    node gSign = mux(isAddendGtProduct, addendSign, productSign) @[PositFMA.scala 52:18]
    node lExp = mux(isAddendGtProduct, normProductExponent_n, addendExponent_n) @[PositFMA.scala 54:18]
    node lFrac = mux(isAddendGtProduct, normProductFraction_n, addendFraction_n) @[PositFMA.scala 55:18]
    node lSign = mux(isAddendGtProduct, productSign, addendSign) @[PositFMA.scala 56:18]
    node _T_20 = sub(gExp, lExp) @[PositFMA.scala 58:23]
    node _T_21 = tail(_T_20, 1) @[PositFMA.scala 58:23]
    node _T_22 = asSInt(_T_21) @[PositFMA.scala 58:23]
    node expDiff = asUInt(_T_22) @[PositFMA.scala 58:37]
    node shftInBound = lt(expDiff, UInt<6>("h037")) @[PositFMA.scala 59:29]
    node _T_23 = dshr(lFrac, expDiff) @[PositFMA.scala 61:28]
    node shiftedLFrac = mux(shftInBound, _T_23, UInt<56>("h00")) @[PositFMA.scala 61:8]
    node _T_24 = dshl(UInt<1>("h01"), expDiff) @[OneHot.scala 58:35]
    node _T_25 = sub(_T_24, UInt<1>("h01")) @[common.scala 23:44]
    node _T_26 = tail(_T_25, 1) @[common.scala 23:44]
    node lfracStickyMask = bits(_T_26, 55, 0) @[PositFMA.scala 63:26]
    node _T_27 = and(lFrac, lfracStickyMask) @[PositFMA.scala 64:31]
    node lFracStickyBit = neq(_T_27, UInt<1>("h00")) @[PositFMA.scala 64:53]
    node _T_28 = xor(gSign, lSign) @[PositFMA.scala 66:28]
    node isAddition = not(_T_28) @[PositFMA.scala 66:20]
    node _T_29 = not(shiftedLFrac) @[PositFMA.scala 68:35]
    node _T_30 = add(_T_29, UInt<1>("h01")) @[PositFMA.scala 68:49]
    node _T_31 = tail(_T_30, 1) @[PositFMA.scala 68:49]
    node signedLFrac = mux(isAddition, shiftedLFrac, _T_31) @[PositFMA.scala 68:8]
    node _T_32 = add(gFrac, signedLFrac) @[PositFMA.scala 70:55]
    wire fmaFraction : UInt<56>
    fmaFraction <= _T_32
    node _T_33 = bits(fmaFraction, 55, 55) @[PositFMA.scala 72:45]
    node fmaOverflow = and(isAddition, _T_33) @[PositFMA.scala 72:32]
    node _T_34 = bits(fmaFraction, 54, 0) @[PositFMA.scala 74:50]
    node _T_35 = cat(_T_34, UInt<1>("h00")) @[Cat.scala 30:58]
    node adjFmaFraction = mux(fmaOverflow, fmaFraction, _T_35) @[PositFMA.scala 74:8]
    node _T_36 = cat(UInt<1>("h00"), fmaOverflow) @[Cat.scala 30:58]
    node _T_37 = asSInt(_T_36) @[PositFMA.scala 75:59]
    node _T_38 = add(gExp, _T_37) @[PositFMA.scala 75:29]
    node _T_39 = tail(_T_38, 1) @[PositFMA.scala 75:29]
    node adjFmaExponent = asSInt(_T_39) @[PositFMA.scala 75:29]
    node _T_40 = bits(adjFmaFraction, 0, 0) @[common.scala 19:50]
    node _T_41 = bits(adjFmaFraction, 1, 1) @[common.scala 19:50]
    node _T_42 = bits(adjFmaFraction, 2, 2) @[common.scala 19:50]
    node _T_43 = bits(adjFmaFraction, 3, 3) @[common.scala 19:50]
    node _T_44 = bits(adjFmaFraction, 4, 4) @[common.scala 19:50]
    node _T_45 = bits(adjFmaFraction, 5, 5) @[common.scala 19:50]
    node _T_46 = bits(adjFmaFraction, 6, 6) @[common.scala 19:50]
    node _T_47 = bits(adjFmaFraction, 7, 7) @[common.scala 19:50]
    node _T_48 = bits(adjFmaFraction, 8, 8) @[common.scala 19:50]
    node _T_49 = bits(adjFmaFraction, 9, 9) @[common.scala 19:50]
    node _T_50 = bits(adjFmaFraction, 10, 10) @[common.scala 19:50]
    node _T_51 = bits(adjFmaFraction, 11, 11) @[common.scala 19:50]
    node _T_52 = bits(adjFmaFraction, 12, 12) @[common.scala 19:50]
    node _T_53 = bits(adjFmaFraction, 13, 13) @[common.scala 19:50]
    node _T_54 = bits(adjFmaFraction, 14, 14) @[common.scala 19:50]
    node _T_55 = bits(adjFmaFraction, 15, 15) @[common.scala 19:50]
    node _T_56 = bits(adjFmaFraction, 16, 16) @[common.scala 19:50]
    node _T_57 = bits(adjFmaFraction, 17, 17) @[common.scala 19:50]
    node _T_58 = bits(adjFmaFraction, 18, 18) @[common.scala 19:50]
    node _T_59 = bits(adjFmaFraction, 19, 19) @[common.scala 19:50]
    node _T_60 = bits(adjFmaFraction, 20, 20) @[common.scala 19:50]
    node _T_61 = bits(adjFmaFraction, 21, 21) @[common.scala 19:50]
    node _T_62 = bits(adjFmaFraction, 22, 22) @[common.scala 19:50]
    node _T_63 = bits(adjFmaFraction, 23, 23) @[common.scala 19:50]
    node _T_64 = bits(adjFmaFraction, 24, 24) @[common.scala 19:50]
    node _T_65 = bits(adjFmaFraction, 25, 25) @[common.scala 19:50]
    node _T_66 = bits(adjFmaFraction, 26, 26) @[common.scala 19:50]
    node _T_67 = bits(adjFmaFraction, 27, 27) @[common.scala 19:50]
    node _T_68 = bits(adjFmaFraction, 28, 28) @[common.scala 19:50]
    node _T_69 = bits(adjFmaFraction, 29, 29) @[common.scala 19:50]
    node _T_70 = bits(adjFmaFraction, 30, 30) @[common.scala 19:50]
    node _T_71 = bits(adjFmaFraction, 31, 31) @[common.scala 19:50]
    node _T_72 = bits(adjFmaFraction, 32, 32) @[common.scala 19:50]
    node _T_73 = bits(adjFmaFraction, 33, 33) @[common.scala 19:50]
    node _T_74 = bits(adjFmaFraction, 34, 34) @[common.scala 19:50]
    node _T_75 = bits(adjFmaFraction, 35, 35) @[common.scala 19:50]
    node _T_76 = bits(adjFmaFraction, 36, 36) @[common.scala 19:50]
    node _T_77 = bits(adjFmaFraction, 37, 37) @[common.scala 19:50]
    node _T_78 = bits(adjFmaFraction, 38, 38) @[common.scala 19:50]
    node _T_79 = bits(adjFmaFraction, 39, 39) @[common.scala 19:50]
    node _T_80 = bits(adjFmaFraction, 40, 40) @[common.scala 19:50]
    node _T_81 = bits(adjFmaFraction, 41, 41) @[common.scala 19:50]
    node _T_82 = bits(adjFmaFraction, 42, 42) @[common.scala 19:50]
    node _T_83 = bits(adjFmaFraction, 43, 43) @[common.scala 19:50]
    node _T_84 = bits(adjFmaFraction, 44, 44) @[common.scala 19:50]
    node _T_85 = bits(adjFmaFraction, 45, 45) @[common.scala 19:50]
    node _T_86 = bits(adjFmaFraction, 46, 46) @[common.scala 19:50]
    node _T_87 = bits(adjFmaFraction, 47, 47) @[common.scala 19:50]
    node _T_88 = bits(adjFmaFraction, 48, 48) @[common.scala 19:50]
    node _T_89 = bits(adjFmaFraction, 49, 49) @[common.scala 19:50]
    node _T_90 = bits(adjFmaFraction, 50, 50) @[common.scala 19:50]
    node _T_91 = bits(adjFmaFraction, 51, 51) @[common.scala 19:50]
    node _T_92 = bits(adjFmaFraction, 52, 52) @[common.scala 19:50]
    node _T_93 = bits(adjFmaFraction, 53, 53) @[common.scala 19:50]
    node _T_94 = bits(adjFmaFraction, 54, 54) @[common.scala 19:50]
    node _T_95 = bits(adjFmaFraction, 55, 55) @[common.scala 19:50]
    node _T_96 = mux(_T_41, UInt<6>("h036"), UInt<6>("h037")) @[Mux.scala 47:69]
    node _T_97 = mux(_T_42, UInt<6>("h035"), _T_96) @[Mux.scala 47:69]
    node _T_98 = mux(_T_43, UInt<6>("h034"), _T_97) @[Mux.scala 47:69]
    node _T_99 = mux(_T_44, UInt<6>("h033"), _T_98) @[Mux.scala 47:69]
    node _T_100 = mux(_T_45, UInt<6>("h032"), _T_99) @[Mux.scala 47:69]
    node _T_101 = mux(_T_46, UInt<6>("h031"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_47, UInt<6>("h030"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_48, UInt<6>("h02f"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_49, UInt<6>("h02e"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_50, UInt<6>("h02d"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_51, UInt<6>("h02c"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_52, UInt<6>("h02b"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_53, UInt<6>("h02a"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_54, UInt<6>("h029"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_55, UInt<6>("h028"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_56, UInt<6>("h027"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_57, UInt<6>("h026"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_58, UInt<6>("h025"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_59, UInt<6>("h024"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_60, UInt<6>("h023"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_61, UInt<6>("h022"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_62, UInt<6>("h021"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_63, UInt<6>("h020"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_64, UInt<5>("h01f"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_65, UInt<5>("h01e"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_66, UInt<5>("h01d"), _T_120) @[Mux.scala 47:69]
    node _T_122 = mux(_T_67, UInt<5>("h01c"), _T_121) @[Mux.scala 47:69]
    node _T_123 = mux(_T_68, UInt<5>("h01b"), _T_122) @[Mux.scala 47:69]
    node _T_124 = mux(_T_69, UInt<5>("h01a"), _T_123) @[Mux.scala 47:69]
    node _T_125 = mux(_T_70, UInt<5>("h019"), _T_124) @[Mux.scala 47:69]
    node _T_126 = mux(_T_71, UInt<5>("h018"), _T_125) @[Mux.scala 47:69]
    node _T_127 = mux(_T_72, UInt<5>("h017"), _T_126) @[Mux.scala 47:69]
    node _T_128 = mux(_T_73, UInt<5>("h016"), _T_127) @[Mux.scala 47:69]
    node _T_129 = mux(_T_74, UInt<5>("h015"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_75, UInt<5>("h014"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_76, UInt<5>("h013"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_77, UInt<5>("h012"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_78, UInt<5>("h011"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_79, UInt<5>("h010"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_80, UInt<4>("h0f"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_81, UInt<4>("h0e"), _T_135) @[Mux.scala 47:69]
    node _T_137 = mux(_T_82, UInt<4>("h0d"), _T_136) @[Mux.scala 47:69]
    node _T_138 = mux(_T_83, UInt<4>("h0c"), _T_137) @[Mux.scala 47:69]
    node _T_139 = mux(_T_84, UInt<4>("h0b"), _T_138) @[Mux.scala 47:69]
    node _T_140 = mux(_T_85, UInt<4>("h0a"), _T_139) @[Mux.scala 47:69]
    node _T_141 = mux(_T_86, UInt<4>("h09"), _T_140) @[Mux.scala 47:69]
    node _T_142 = mux(_T_87, UInt<4>("h08"), _T_141) @[Mux.scala 47:69]
    node _T_143 = mux(_T_88, UInt<3>("h07"), _T_142) @[Mux.scala 47:69]
    node _T_144 = mux(_T_89, UInt<3>("h06"), _T_143) @[Mux.scala 47:69]
    node _T_145 = mux(_T_90, UInt<3>("h05"), _T_144) @[Mux.scala 47:69]
    node _T_146 = mux(_T_91, UInt<3>("h04"), _T_145) @[Mux.scala 47:69]
    node _T_147 = mux(_T_92, UInt<2>("h03"), _T_146) @[Mux.scala 47:69]
    node _T_148 = mux(_T_93, UInt<2>("h02"), _T_147) @[Mux.scala 47:69]
    node _T_149 = mux(_T_94, UInt<1>("h01"), _T_148) @[Mux.scala 47:69]
    node normalizationFactor = mux(_T_95, UInt<1>("h00"), _T_149) @[Mux.scala 47:69]
    node _T_150 = asSInt(normalizationFactor) @[PositFMA.scala 78:69]
    node normFmaExponent = sub(adjFmaExponent, _T_150) @[PositFMA.scala 78:40]
    node _T_151 = dshl(adjFmaFraction, normalizationFactor) @[PositFMA.scala 79:41]
    node normFmaFraction = bits(_T_151, 55, 0) @[PositFMA.scala 79:64]
    wire result : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[PositFMA.scala 81:20]
    node _T_152 = or(io.num1.isNaR, io.num2.isNaR) @[PositFMA.scala 83:41]
    node _T_153 = or(_T_152, io.num3.isNaR) @[PositFMA.scala 83:54]
    reg result_isNaR : UInt<1>, clock @[PositFMA.scala 83:29]
    result_isNaR <= _T_153 @[PositFMA.scala 83:29]
    node _T_154 = or(io.num1.isZero, io.num2.isZero) @[PositFMA.scala 84:56]
    node _T_155 = and(_T_154, io.num3.isZero) @[PositFMA.scala 84:71]
    reg result_isZero_second_half : UInt<1>, clock @[PositFMA.scala 84:42]
    result_isZero_second_half <= _T_155 @[PositFMA.scala 84:42]
    reg intermediate_valid : UInt<1>, clock @[PositFMA.scala 85:35]
    intermediate_valid <= io.input_valid @[PositFMA.scala 85:35]
    result.isNaR <= result_isNaR @[PositFMA.scala 86:19]
    node _T_156 = eq(result.isNaR, UInt<1>("h00")) @[PositFMA.scala 87:22]
    node _T_157 = and(_T_156, result_isZero_second_half) @[PositFMA.scala 87:36]
    result.isZero <= _T_157 @[PositFMA.scala 87:19]
    result.sign <= gSign @[PositFMA.scala 88:19]
    result.exponent <= normFmaExponent @[PositFMA.scala 89:19]
    node _T_158 = bits(normFmaFraction, 55, 28) @[PositFMA.scala 90:37]
    result.fraction <= _T_158 @[PositFMA.scala 90:19]
    node _T_159 = bits(normFmaFraction, 27, 26) @[PositFMA.scala 92:37]
    io.trailingBits <= _T_159 @[PositFMA.scala 92:19]
    node _T_160 = or(prodStickyBit, lFracStickyBit) @[PositFMA.scala 93:36]
    node _T_161 = bits(normFmaFraction, 25, 0) @[PositFMA.scala 93:70]
    node _T_162 = neq(_T_161, UInt<1>("h00")) @[PositFMA.scala 93:130]
    node _T_163 = or(_T_160, _T_162) @[PositFMA.scala 93:53]
    io.stickyBit <= _T_163 @[PositFMA.scala 93:19]
    io.out.isNaR <= result.isNaR @[PositFMA.scala 95:10]
    io.out.isZero <= result.isZero @[PositFMA.scala 95:10]
    io.out.fraction <= result.fraction @[PositFMA.scala 95:10]
    io.out.exponent <= result.exponent @[PositFMA.scala 95:10]
    io.out.sign <= result.sign @[PositFMA.scala 95:10]
    io.output_valid <= intermediate_valid @[PositFMA.scala 96:19]
    
  module PositDivSqrtCore : 
    input clock : Clock
    input reset : Reset
    output io : {flip validIn : UInt<1>, readyIn : UInt<1>, flip sqrtOp : UInt<1>, flip num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, validOut_div : UInt<1>, validOut_sqrt : UInt<1>, exceptions : UInt<5>, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    reg cycleCount : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[PositDivSqrt.scala 27:27]
    reg sqrtOp_stored : UInt<1>, clock @[PositDivSqrt.scala 29:26]
    reg isNaR_out : UInt<1>, clock @[PositDivSqrt.scala 30:26]
    reg isZero_out : UInt<1>, clock @[PositDivSqrt.scala 31:26]
    reg exec_out : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[PositDivSqrt.scala 32:30]
    reg sign_out : UInt<1>, clock @[PositDivSqrt.scala 33:26]
    reg divSqrtExp : SInt<9>, clock with : (reset => (reset, asSInt(UInt<9>("h00")))) @[PositDivSqrt.scala 34:30]
    reg divSqrtFrac : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[PositDivSqrt.scala 35:30]
    wire frac_out : UInt<32>
    frac_out <= UInt<32>("h00")
    wire exp_out : SInt<9>
    exp_out <= asSInt(UInt<9>("h00"))
    wire _T : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[PositDivSqrt.scala 39:38]
    _T.isNaR <= UInt<1>("h00") @[PositDivSqrt.scala 39:38]
    _T.isZero <= UInt<1>("h00") @[PositDivSqrt.scala 39:38]
    _T.fraction <= UInt<28>("h00") @[PositDivSqrt.scala 39:38]
    node _T_1 = asSInt(UInt<9>("h00")) @[PositDivSqrt.scala 39:38]
    _T.exponent <= _T_1 @[PositDivSqrt.scala 39:38]
    _T.sign <= UInt<1>("h00") @[PositDivSqrt.scala 39:38]
    wire result : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}
    result.isNaR <= _T.isNaR
    result.isZero <= _T.isZero
    result.fraction <= _T.fraction
    result.exponent <= _T.exponent
    result.sign <= _T.sign
    reg remLo : UInt<29>, clock with : (reset => (reset, UInt<29>("h00"))) @[PositDivSqrt.scala 40:24]
    reg remHi : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[PositDivSqrt.scala 41:24]
    reg divisor : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[PositDivSqrt.scala 42:24]
    node _T_2 = eq(io.sqrtOp, UInt<1>("h00")) @[PositDivSqrt.scala 44:21]
    node divZ = and(_T_2, io.num2.isZero) @[PositDivSqrt.scala 44:32]
    node _T_3 = or(io.num1.sign, io.num1.isNaR) @[PositDivSqrt.scala 45:46]
    node _T_4 = or(io.num1.isNaR, io.num2.isNaR) @[PositDivSqrt.scala 45:71]
    node _T_5 = or(_T_4, divZ) @[PositDivSqrt.scala 45:84]
    node isNaR = mux(io.sqrtOp, _T_3, _T_5) @[PositDivSqrt.scala 45:24]
    node specialCase = or(isNaR, io.num1.isZero) @[PositDivSqrt.scala 47:27]
    node _T_6 = sub(io.num1.exponent, io.num2.exponent) @[PositDivSqrt.scala 48:35]
    node _T_7 = tail(_T_6, 1) @[PositDivSqrt.scala 48:35]
    node expDiff = asSInt(_T_7) @[PositDivSqrt.scala 48:35]
    node idle = eq(cycleCount, UInt<1>("h00")) @[PositDivSqrt.scala 50:28]
    node readyIn = leq(cycleCount, UInt<1>("h01")) @[PositDivSqrt.scala 51:28]
    node starting = and(readyIn, io.validIn) @[PositDivSqrt.scala 53:34]
    node _T_8 = eq(specialCase, UInt<1>("h00")) @[PositDivSqrt.scala 54:38]
    node started_normally = and(starting, _T_8) @[PositDivSqrt.scala 54:35]
    node _T_9 = bits(io.num1.exponent, 0, 0) @[PositDivSqrt.scala 56:48]
    node _T_10 = bits(_T_9, 0, 0) @[PositDivSqrt.scala 56:58]
    node _T_11 = and(io.sqrtOp, _T_10) @[PositDivSqrt.scala 56:32]
    node _T_12 = shl(io.num1.fraction, 1) @[PositDivSqrt.scala 56:76]
    node radicand = mux(_T_11, _T_12, io.num1.fraction) @[PositDivSqrt.scala 56:21]
    node _T_13 = eq(idle, UInt<1>("h00")) @[PositDivSqrt.scala 58:8]
    node _T_14 = or(_T_13, io.validIn) @[PositDivSqrt.scala 58:14]
    when _T_14 : @[PositDivSqrt.scala 58:28]
      node _T_15 = and(starting, specialCase) @[PositDivSqrt.scala 59:32]
      node _T_16 = mux(_T_15, UInt<2>("h02"), UInt<1>("h00")) @[PositDivSqrt.scala 59:22]
      node _T_17 = mux(started_normally, UInt<6>("h020"), UInt<1>("h00")) @[PositDivSqrt.scala 60:22]
      node _T_18 = or(_T_16, _T_17) @[PositDivSqrt.scala 59:58]
      node _T_19 = eq(idle, UInt<1>("h00")) @[PositDivSqrt.scala 61:23]
      node _T_20 = sub(cycleCount, UInt<1>("h01")) @[PositDivSqrt.scala 61:41]
      node _T_21 = tail(_T_20, 1) @[PositDivSqrt.scala 61:41]
      node _T_22 = mux(_T_19, _T_21, UInt<1>("h00")) @[PositDivSqrt.scala 61:22]
      node _T_23 = or(_T_18, _T_22) @[PositDivSqrt.scala 60:72]
      cycleCount <= _T_23 @[PositDivSqrt.scala 59:16]
      skip @[PositDivSqrt.scala 58:28]
    io.readyIn <= readyIn @[PositDivSqrt.scala 64:14]
    when starting : @[PositDivSqrt.scala 66:18]
      sqrtOp_stored <= io.sqrtOp @[PositDivSqrt.scala 67:20]
      isNaR_out <= isNaR @[PositDivSqrt.scala 68:20]
      isZero_out <= io.num1.isZero @[PositDivSqrt.scala 69:20]
      node _T_24 = mux(divZ, UInt<4>("h08"), UInt<1>("h00")) @[PositDivSqrt.scala 70:26]
      exec_out <= _T_24 @[PositDivSqrt.scala 70:20]
      skip @[PositDivSqrt.scala 66:18]
    when started_normally : @[PositDivSqrt.scala 73:26]
      node _T_25 = xor(io.num1.sign, io.num2.sign) @[PositDivSqrt.scala 74:53]
      node _T_26 = mux(io.sqrtOp, UInt<1>("h00"), _T_25) @[PositDivSqrt.scala 74:22]
      sign_out <= _T_26 @[PositDivSqrt.scala 74:16]
      node _T_27 = shr(io.num1.exponent, 1) @[PositDivSqrt.scala 75:48]
      node _T_28 = mux(io.sqrtOp, _T_27, expDiff) @[PositDivSqrt.scala 75:22]
      divSqrtExp <= _T_28 @[PositDivSqrt.scala 75:16]
      skip @[PositDivSqrt.scala 73:26]
    node _T_29 = not(io.sqrtOp) @[PositDivSqrt.scala 78:27]
    node _T_30 = and(started_normally, _T_29) @[PositDivSqrt.scala 78:25]
    when _T_30 : @[PositDivSqrt.scala 78:39]
      divisor <= io.num2.fraction @[PositDivSqrt.scala 79:13]
      skip @[PositDivSqrt.scala 78:39]
    node _T_31 = and(readyIn, io.sqrtOp) @[PositDivSqrt.scala 82:24]
    node _T_32 = shl(radicand, 2) @[PositDivSqrt.scala 82:47]
    node _T_33 = mux(_T_31, _T_32, UInt<1>("h00")) @[PositDivSqrt.scala 82:15]
    node _T_34 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 83:16]
    node _T_35 = and(_T_34, sqrtOp_stored) @[PositDivSqrt.scala 83:25]
    node _T_36 = shl(remLo, 2) @[PositDivSqrt.scala 83:49]
    node _T_37 = mux(_T_35, _T_36, UInt<1>("h00")) @[PositDivSqrt.scala 83:15]
    node _T_38 = or(_T_33, _T_37) @[PositDivSqrt.scala 82:58]
    remLo <= _T_38 @[PositDivSqrt.scala 82:9]
    node _T_39 = and(readyIn, io.sqrtOp) @[PositDivSqrt.scala 85:25]
    node _T_40 = bits(radicand, 28, 27) @[PositDivSqrt.scala 85:47]
    node _T_41 = mux(_T_39, _T_40, UInt<1>("h00")) @[PositDivSqrt.scala 85:16]
    node _T_42 = eq(io.sqrtOp, UInt<1>("h00")) @[PositDivSqrt.scala 86:20]
    node _T_43 = and(readyIn, _T_42) @[PositDivSqrt.scala 86:17]
    node _T_44 = mux(_T_43, radicand, UInt<1>("h00")) @[PositDivSqrt.scala 86:8]
    node _T_45 = or(_T_41, _T_44) @[PositDivSqrt.scala 85:118]
    node _T_46 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 87:9]
    node _T_47 = and(_T_46, sqrtOp_stored) @[PositDivSqrt.scala 87:18]
    node _T_48 = dshl(remHi, UInt<2>("h02")) @[PositDivSqrt.scala 87:42]
    node _T_49 = dshr(remLo, UInt<5>("h01b")) @[PositDivSqrt.scala 87:57]
    node _T_50 = or(_T_48, _T_49) @[PositDivSqrt.scala 87:49]
    node _T_51 = mux(_T_47, _T_50, UInt<1>("h00")) @[PositDivSqrt.scala 87:8]
    node _T_52 = or(_T_45, _T_51) @[PositDivSqrt.scala 86:56]
    node _T_53 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 88:9]
    node _T_54 = eq(sqrtOp_stored, UInt<1>("h00")) @[PositDivSqrt.scala 88:21]
    node _T_55 = and(_T_53, _T_54) @[PositDivSqrt.scala 88:18]
    node _T_56 = dshl(remHi, UInt<1>("h01")) @[PositDivSqrt.scala 88:43]
    node _T_57 = mux(_T_55, _T_56, UInt<1>("h00")) @[PositDivSqrt.scala 88:8]
    node rem = or(_T_52, _T_57) @[PositDivSqrt.scala 87:84]
    node _T_58 = and(readyIn, io.sqrtOp) @[PositDivSqrt.scala 92:17]
    node _T_59 = mux(_T_58, UInt<1>("h01"), UInt<1>("h00")) @[PositDivSqrt.scala 92:8]
    node _T_60 = eq(io.sqrtOp, UInt<1>("h00")) @[PositDivSqrt.scala 93:20]
    node _T_61 = and(readyIn, _T_60) @[PositDivSqrt.scala 93:17]
    node _T_62 = mux(_T_61, io.num2.fraction, UInt<1>("h00")) @[PositDivSqrt.scala 93:8]
    node _T_63 = or(_T_59, _T_62) @[PositDivSqrt.scala 92:41]
    node _T_64 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 94:9]
    node _T_65 = and(_T_64, sqrtOp_stored) @[PositDivSqrt.scala 94:18]
    node _T_66 = dshl(divSqrtFrac, UInt<1>("h01")) @[PositDivSqrt.scala 94:52]
    node _T_67 = cat(_T_66, UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_68 = mux(_T_65, _T_67, UInt<1>("h00")) @[PositDivSqrt.scala 94:8]
    node _T_69 = or(_T_63, _T_68) @[PositDivSqrt.scala 93:52]
    node _T_70 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 95:9]
    node _T_71 = eq(sqrtOp_stored, UInt<1>("h00")) @[PositDivSqrt.scala 95:21]
    node _T_72 = and(_T_70, _T_71) @[PositDivSqrt.scala 95:18]
    node _T_73 = mux(_T_72, divisor, UInt<1>("h00")) @[PositDivSqrt.scala 95:8]
    node testDiv = or(_T_69, _T_73) @[PositDivSqrt.scala 94:71]
    node _T_74 = cvt(rem) @[PositDivSqrt.scala 97:21]
    node _T_75 = cvt(testDiv) @[PositDivSqrt.scala 97:36]
    node _T_76 = sub(_T_74, _T_75) @[PositDivSqrt.scala 97:26]
    node _T_77 = tail(_T_76, 1) @[PositDivSqrt.scala 97:26]
    node testRem = asSInt(_T_77) @[PositDivSqrt.scala 97:26]
    node nextBit = geq(testRem, asSInt(UInt<1>("h00"))) @[PositDivSqrt.scala 98:25]
    node _T_78 = gt(cycleCount, UInt<2>("h02")) @[PositDivSqrt.scala 100:39]
    node _T_79 = or(started_normally, _T_78) @[PositDivSqrt.scala 100:25]
    when _T_79 : @[PositDivSqrt.scala 100:46]
      node _T_80 = asUInt(testRem) @[PositDivSqrt.scala 101:41]
      node _T_81 = mux(nextBit, _T_80, rem) @[PositDivSqrt.scala 101:17]
      remHi <= _T_81 @[PositDivSqrt.scala 101:11]
      skip @[PositDivSqrt.scala 100:46]
    node nextFraction = cat(divSqrtFrac, nextBit) @[Cat.scala 30:58]
    node _T_82 = mux(started_normally, nextBit, UInt<1>("h00")) @[PositDivSqrt.scala 105:21]
    node _T_83 = eq(readyIn, UInt<1>("h00")) @[PositDivSqrt.scala 106:18]
    node _T_84 = mux(_T_83, nextFraction, UInt<1>("h00")) @[PositDivSqrt.scala 106:17]
    node _T_85 = or(_T_82, _T_84) @[PositDivSqrt.scala 105:54]
    divSqrtFrac <= _T_85 @[PositDivSqrt.scala 105:15]
    node _T_86 = bits(divSqrtFrac, 31, 31) @[PositDivSqrt.scala 108:29]
    node normReq = eq(_T_86, UInt<1>("h00")) @[PositDivSqrt.scala 108:17]
    node _T_87 = cat(divSqrtFrac, UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_88 = mux(normReq, _T_87, divSqrtFrac) @[PositDivSqrt.scala 109:18]
    frac_out <= _T_88 @[PositDivSqrt.scala 109:12]
    node _T_89 = asSInt(normReq) @[PositDivSqrt.scala 110:42]
    node _T_90 = add(divSqrtExp, _T_89) @[PositDivSqrt.scala 110:26]
    node _T_91 = tail(_T_90, 1) @[PositDivSqrt.scala 110:26]
    node _T_92 = asSInt(_T_91) @[PositDivSqrt.scala 110:26]
    exp_out <= _T_92 @[PositDivSqrt.scala 110:12]
    result.isNaR <= isNaR_out @[PositDivSqrt.scala 112:19]
    result.isZero <= isZero_out @[PositDivSqrt.scala 113:19]
    result.exponent <= exp_out @[PositDivSqrt.scala 114:19]
    result.sign <= sign_out @[PositDivSqrt.scala 115:19]
    node _T_93 = bits(frac_out, 31, 4) @[PositDivSqrt.scala 116:30]
    result.fraction <= _T_93 @[PositDivSqrt.scala 116:19]
    node validOut = eq(cycleCount, UInt<1>("h01")) @[PositDivSqrt.scala 118:29]
    node _T_94 = eq(sqrtOp_stored, UInt<1>("h00")) @[PositDivSqrt.scala 120:35]
    node _T_95 = and(validOut, _T_94) @[PositDivSqrt.scala 120:32]
    io.validOut_div <= _T_95 @[PositDivSqrt.scala 120:20]
    node _T_96 = and(validOut, sqrtOp_stored) @[PositDivSqrt.scala 121:32]
    io.validOut_sqrt <= _T_96 @[PositDivSqrt.scala 121:20]
    io.exceptions <= exec_out @[PositDivSqrt.scala 122:20]
    node _T_97 = bits(frac_out, 3, 2) @[PositDivSqrt.scala 124:30]
    io.trailingBits <= _T_97 @[PositDivSqrt.scala 124:19]
    node _T_98 = bits(frac_out, 1, 0) @[PositDivSqrt.scala 125:30]
    node _T_99 = neq(_T_98, UInt<1>("h00")) @[PositDivSqrt.scala 125:59]
    node _T_100 = neq(remHi, UInt<1>("h00")) @[PositDivSqrt.scala 125:73]
    node _T_101 = or(_T_99, _T_100) @[PositDivSqrt.scala 125:62]
    io.stickyBit <= _T_101 @[PositDivSqrt.scala 125:19]
    io.out.isNaR <= result.isNaR @[PositDivSqrt.scala 127:10]
    io.out.isZero <= result.isZero @[PositDivSqrt.scala 127:10]
    io.out.fraction <= result.fraction @[PositDivSqrt.scala 127:10]
    io.out.exponent <= result.exponent @[PositDivSqrt.scala 127:10]
    io.out.sign <= result.sign @[PositDivSqrt.scala 127:10]
    
  module PositMulCore : 
    input clock : Clock
    input reset : Reset
    output io : {flip num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, trailingBits : UInt<2>, stickyBit : UInt<1>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip validIn : UInt<1>, validOut : UInt<1>}
    
    io.validOut <= io.validIn @[PositMul.scala 18:15]
    node _T = add(io.num1.exponent, io.num2.exponent) @[PositMul.scala 22:31]
    node _T_1 = tail(_T, 1) @[PositMul.scala 22:31]
    node prodExp = asSInt(_T_1) @[PositMul.scala 22:31]
    node _T_2 = mul(io.num1.fraction, io.num2.fraction) @[PositMul.scala 24:63]
    wire prodFrac : UInt<56>
    prodFrac <= _T_2
    node prodOverflow = bits(prodFrac, 55, 55) @[PositMul.scala 25:30]
    node _T_3 = not(prodOverflow) @[PositMul.scala 27:39]
    node normProductFrac = dshl(prodFrac, _T_3) @[PositMul.scala 27:35]
    node _T_4 = mux(prodOverflow, asSInt(UInt<2>("h01")), asSInt(UInt<1>("h00"))) @[PositMul.scala 28:38]
    node _T_5 = add(prodExp, _T_4) @[PositMul.scala 28:33]
    node _T_6 = tail(_T_5, 1) @[PositMul.scala 28:33]
    node normProductExp = asSInt(_T_6) @[PositMul.scala 28:33]
    wire result : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[PositMul.scala 30:20]
    node _T_7 = or(io.num1.isNaR, io.num2.isNaR) @[PositMul.scala 31:34]
    result.isNaR <= _T_7 @[PositMul.scala 31:19]
    node _T_8 = or(io.num1.isZero, io.num2.isZero) @[PositMul.scala 32:34]
    result.isZero <= _T_8 @[PositMul.scala 32:19]
    node _T_9 = xor(io.num1.sign, io.num2.sign) @[PositMul.scala 33:32]
    result.sign <= _T_9 @[PositMul.scala 33:19]
    result.exponent <= normProductExp @[PositMul.scala 34:19]
    node _T_10 = bits(normProductFrac, 55, 28) @[PositMul.scala 35:37]
    result.fraction <= _T_10 @[PositMul.scala 35:19]
    node _T_11 = bits(normProductFrac, 27, 26) @[PositMul.scala 37:37]
    io.trailingBits <= _T_11 @[PositMul.scala 37:19]
    node _T_12 = bits(normProductFrac, 25, 0) @[PositMul.scala 38:37]
    node _T_13 = neq(_T_12, UInt<1>("h00")) @[PositMul.scala 38:97]
    io.stickyBit <= _T_13 @[PositMul.scala 38:19]
    io.out.isNaR <= result.isNaR @[PositMul.scala 40:10]
    io.out.isZero <= result.isZero @[PositMul.scala 40:10]
    io.out.fraction <= result.fraction @[PositMul.scala 40:10]
    io.out.exponent <= result.exponent @[PositMul.scala 40:10]
    io.out.sign <= result.sign @[PositMul.scala 40:10]
    
  module PositExtractor : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    node sign = bits(io.in, 31, 31) @[PositExtractor.scala 12:21]
    node _T = not(io.in) @[PositExtractor.scala 13:26]
    node _T_1 = add(_T, UInt<1>("h01")) @[PositExtractor.scala 13:33]
    node _T_2 = tail(_T_1, 1) @[PositExtractor.scala 13:33]
    node absIn = mux(sign, _T_2, io.in) @[PositExtractor.scala 13:19]
    node _T_3 = bits(absIn, 30, 30) @[PositExtractor.scala 14:22]
    node negExp = not(_T_3) @[PositExtractor.scala 14:16]
    node regExpFrac = bits(absIn, 30, 0) @[PositExtractor.scala 16:26]
    node _T_4 = not(regExpFrac) @[PositExtractor.scala 17:45]
    node zerosRegime = mux(negExp, regExpFrac, _T_4) @[PositExtractor.scala 17:24]
    node _T_5 = neq(zerosRegime, UInt<1>("h00")) @[common.scala 61:41]
    node _T_6 = not(_T_5) @[common.scala 61:33]
    node _T_7 = bits(zerosRegime, 0, 0) @[common.scala 19:50]
    node _T_8 = bits(zerosRegime, 1, 1) @[common.scala 19:50]
    node _T_9 = bits(zerosRegime, 2, 2) @[common.scala 19:50]
    node _T_10 = bits(zerosRegime, 3, 3) @[common.scala 19:50]
    node _T_11 = bits(zerosRegime, 4, 4) @[common.scala 19:50]
    node _T_12 = bits(zerosRegime, 5, 5) @[common.scala 19:50]
    node _T_13 = bits(zerosRegime, 6, 6) @[common.scala 19:50]
    node _T_14 = bits(zerosRegime, 7, 7) @[common.scala 19:50]
    node _T_15 = bits(zerosRegime, 8, 8) @[common.scala 19:50]
    node _T_16 = bits(zerosRegime, 9, 9) @[common.scala 19:50]
    node _T_17 = bits(zerosRegime, 10, 10) @[common.scala 19:50]
    node _T_18 = bits(zerosRegime, 11, 11) @[common.scala 19:50]
    node _T_19 = bits(zerosRegime, 12, 12) @[common.scala 19:50]
    node _T_20 = bits(zerosRegime, 13, 13) @[common.scala 19:50]
    node _T_21 = bits(zerosRegime, 14, 14) @[common.scala 19:50]
    node _T_22 = bits(zerosRegime, 15, 15) @[common.scala 19:50]
    node _T_23 = bits(zerosRegime, 16, 16) @[common.scala 19:50]
    node _T_24 = bits(zerosRegime, 17, 17) @[common.scala 19:50]
    node _T_25 = bits(zerosRegime, 18, 18) @[common.scala 19:50]
    node _T_26 = bits(zerosRegime, 19, 19) @[common.scala 19:50]
    node _T_27 = bits(zerosRegime, 20, 20) @[common.scala 19:50]
    node _T_28 = bits(zerosRegime, 21, 21) @[common.scala 19:50]
    node _T_29 = bits(zerosRegime, 22, 22) @[common.scala 19:50]
    node _T_30 = bits(zerosRegime, 23, 23) @[common.scala 19:50]
    node _T_31 = bits(zerosRegime, 24, 24) @[common.scala 19:50]
    node _T_32 = bits(zerosRegime, 25, 25) @[common.scala 19:50]
    node _T_33 = bits(zerosRegime, 26, 26) @[common.scala 19:50]
    node _T_34 = bits(zerosRegime, 27, 27) @[common.scala 19:50]
    node _T_35 = bits(zerosRegime, 28, 28) @[common.scala 19:50]
    node _T_36 = bits(zerosRegime, 29, 29) @[common.scala 19:50]
    node _T_37 = bits(zerosRegime, 30, 30) @[common.scala 19:50]
    node _T_38 = mux(_T_8, UInt<5>("h01d"), UInt<5>("h01e")) @[Mux.scala 47:69]
    node _T_39 = mux(_T_9, UInt<5>("h01c"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_10, UInt<5>("h01b"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_11, UInt<5>("h01a"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_12, UInt<5>("h019"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_13, UInt<5>("h018"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_14, UInt<5>("h017"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_15, UInt<5>("h016"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_16, UInt<5>("h015"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_17, UInt<5>("h014"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_18, UInt<5>("h013"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_19, UInt<5>("h012"), _T_48) @[Mux.scala 47:69]
    node _T_50 = mux(_T_20, UInt<5>("h011"), _T_49) @[Mux.scala 47:69]
    node _T_51 = mux(_T_21, UInt<5>("h010"), _T_50) @[Mux.scala 47:69]
    node _T_52 = mux(_T_22, UInt<4>("h0f"), _T_51) @[Mux.scala 47:69]
    node _T_53 = mux(_T_23, UInt<4>("h0e"), _T_52) @[Mux.scala 47:69]
    node _T_54 = mux(_T_24, UInt<4>("h0d"), _T_53) @[Mux.scala 47:69]
    node _T_55 = mux(_T_25, UInt<4>("h0c"), _T_54) @[Mux.scala 47:69]
    node _T_56 = mux(_T_26, UInt<4>("h0b"), _T_55) @[Mux.scala 47:69]
    node _T_57 = mux(_T_27, UInt<4>("h0a"), _T_56) @[Mux.scala 47:69]
    node _T_58 = mux(_T_28, UInt<4>("h09"), _T_57) @[Mux.scala 47:69]
    node _T_59 = mux(_T_29, UInt<4>("h08"), _T_58) @[Mux.scala 47:69]
    node _T_60 = mux(_T_30, UInt<3>("h07"), _T_59) @[Mux.scala 47:69]
    node _T_61 = mux(_T_31, UInt<3>("h06"), _T_60) @[Mux.scala 47:69]
    node _T_62 = mux(_T_32, UInt<3>("h05"), _T_61) @[Mux.scala 47:69]
    node _T_63 = mux(_T_33, UInt<3>("h04"), _T_62) @[Mux.scala 47:69]
    node _T_64 = mux(_T_34, UInt<2>("h03"), _T_63) @[Mux.scala 47:69]
    node _T_65 = mux(_T_35, UInt<2>("h02"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_36, UInt<1>("h01"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_37, UInt<1>("h00"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_6, UInt<5>("h01f"), _T_67) @[PositExtractor.scala 20:10]
    node regimeCount = cat(UInt<1>("h00"), _T_68) @[Cat.scala 30:58]
    node _T_69 = not(regimeCount) @[PositExtractor.scala 22:17]
    node _T_70 = add(_T_69, UInt<1>("h01")) @[PositExtractor.scala 22:30]
    node _T_71 = tail(_T_70, 1) @[PositExtractor.scala 22:30]
    node _T_72 = sub(regimeCount, UInt<1>("h01")) @[PositExtractor.scala 22:49]
    node _T_73 = tail(_T_72, 1) @[PositExtractor.scala 22:49]
    node regime = mux(negExp, _T_71, _T_73) @[PositExtractor.scala 22:8]
    node _T_74 = add(regimeCount, UInt<2>("h02")) @[PositExtractor.scala 24:39]
    node _T_75 = tail(_T_74, 1) @[PositExtractor.scala 24:39]
    node expFrac = dshl(absIn, _T_75) @[PositExtractor.scala 24:23]
    node extractedExp = bits(expFrac, 31, 30) @[PositExtractor.scala 26:24]
    node frac = bits(expFrac, 29, 3) @[PositExtractor.scala 28:21]
    node _T_76 = bits(io.in, 31, 31) @[common.scala 27:43]
    node _T_77 = bits(io.in, 30, 0) @[common.scala 27:57]
    node _T_78 = neq(_T_77, UInt<1>("h00")) @[common.scala 27:71]
    node _T_79 = not(_T_78) @[common.scala 27:53]
    node _T_80 = and(_T_76, _T_79) @[common.scala 27:51]
    io.out.isNaR <= _T_80 @[PositExtractor.scala 30:19]
    node _T_81 = neq(io.in, UInt<1>("h00")) @[common.scala 61:41]
    node _T_82 = not(_T_81) @[common.scala 61:33]
    io.out.isZero <= _T_82 @[PositExtractor.scala 31:19]
    io.out.sign <= sign @[PositExtractor.scala 33:19]
    node _T_83 = cat(regime, extractedExp) @[Cat.scala 30:58]
    node _T_84 = asSInt(_T_83) @[PositExtractor.scala 37:11]
    io.out.exponent <= _T_84 @[PositExtractor.scala 34:19]
    node _T_85 = cat(UInt<1>("h01"), frac) @[Cat.scala 30:58]
    io.out.fraction <= _T_85 @[PositExtractor.scala 38:19]
    
  module PositExtractor_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    node sign = bits(io.in, 31, 31) @[PositExtractor.scala 12:21]
    node _T = not(io.in) @[PositExtractor.scala 13:26]
    node _T_1 = add(_T, UInt<1>("h01")) @[PositExtractor.scala 13:33]
    node _T_2 = tail(_T_1, 1) @[PositExtractor.scala 13:33]
    node absIn = mux(sign, _T_2, io.in) @[PositExtractor.scala 13:19]
    node _T_3 = bits(absIn, 30, 30) @[PositExtractor.scala 14:22]
    node negExp = not(_T_3) @[PositExtractor.scala 14:16]
    node regExpFrac = bits(absIn, 30, 0) @[PositExtractor.scala 16:26]
    node _T_4 = not(regExpFrac) @[PositExtractor.scala 17:45]
    node zerosRegime = mux(negExp, regExpFrac, _T_4) @[PositExtractor.scala 17:24]
    node _T_5 = neq(zerosRegime, UInt<1>("h00")) @[common.scala 61:41]
    node _T_6 = not(_T_5) @[common.scala 61:33]
    node _T_7 = bits(zerosRegime, 0, 0) @[common.scala 19:50]
    node _T_8 = bits(zerosRegime, 1, 1) @[common.scala 19:50]
    node _T_9 = bits(zerosRegime, 2, 2) @[common.scala 19:50]
    node _T_10 = bits(zerosRegime, 3, 3) @[common.scala 19:50]
    node _T_11 = bits(zerosRegime, 4, 4) @[common.scala 19:50]
    node _T_12 = bits(zerosRegime, 5, 5) @[common.scala 19:50]
    node _T_13 = bits(zerosRegime, 6, 6) @[common.scala 19:50]
    node _T_14 = bits(zerosRegime, 7, 7) @[common.scala 19:50]
    node _T_15 = bits(zerosRegime, 8, 8) @[common.scala 19:50]
    node _T_16 = bits(zerosRegime, 9, 9) @[common.scala 19:50]
    node _T_17 = bits(zerosRegime, 10, 10) @[common.scala 19:50]
    node _T_18 = bits(zerosRegime, 11, 11) @[common.scala 19:50]
    node _T_19 = bits(zerosRegime, 12, 12) @[common.scala 19:50]
    node _T_20 = bits(zerosRegime, 13, 13) @[common.scala 19:50]
    node _T_21 = bits(zerosRegime, 14, 14) @[common.scala 19:50]
    node _T_22 = bits(zerosRegime, 15, 15) @[common.scala 19:50]
    node _T_23 = bits(zerosRegime, 16, 16) @[common.scala 19:50]
    node _T_24 = bits(zerosRegime, 17, 17) @[common.scala 19:50]
    node _T_25 = bits(zerosRegime, 18, 18) @[common.scala 19:50]
    node _T_26 = bits(zerosRegime, 19, 19) @[common.scala 19:50]
    node _T_27 = bits(zerosRegime, 20, 20) @[common.scala 19:50]
    node _T_28 = bits(zerosRegime, 21, 21) @[common.scala 19:50]
    node _T_29 = bits(zerosRegime, 22, 22) @[common.scala 19:50]
    node _T_30 = bits(zerosRegime, 23, 23) @[common.scala 19:50]
    node _T_31 = bits(zerosRegime, 24, 24) @[common.scala 19:50]
    node _T_32 = bits(zerosRegime, 25, 25) @[common.scala 19:50]
    node _T_33 = bits(zerosRegime, 26, 26) @[common.scala 19:50]
    node _T_34 = bits(zerosRegime, 27, 27) @[common.scala 19:50]
    node _T_35 = bits(zerosRegime, 28, 28) @[common.scala 19:50]
    node _T_36 = bits(zerosRegime, 29, 29) @[common.scala 19:50]
    node _T_37 = bits(zerosRegime, 30, 30) @[common.scala 19:50]
    node _T_38 = mux(_T_8, UInt<5>("h01d"), UInt<5>("h01e")) @[Mux.scala 47:69]
    node _T_39 = mux(_T_9, UInt<5>("h01c"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_10, UInt<5>("h01b"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_11, UInt<5>("h01a"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_12, UInt<5>("h019"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_13, UInt<5>("h018"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_14, UInt<5>("h017"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_15, UInt<5>("h016"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_16, UInt<5>("h015"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_17, UInt<5>("h014"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_18, UInt<5>("h013"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_19, UInt<5>("h012"), _T_48) @[Mux.scala 47:69]
    node _T_50 = mux(_T_20, UInt<5>("h011"), _T_49) @[Mux.scala 47:69]
    node _T_51 = mux(_T_21, UInt<5>("h010"), _T_50) @[Mux.scala 47:69]
    node _T_52 = mux(_T_22, UInt<4>("h0f"), _T_51) @[Mux.scala 47:69]
    node _T_53 = mux(_T_23, UInt<4>("h0e"), _T_52) @[Mux.scala 47:69]
    node _T_54 = mux(_T_24, UInt<4>("h0d"), _T_53) @[Mux.scala 47:69]
    node _T_55 = mux(_T_25, UInt<4>("h0c"), _T_54) @[Mux.scala 47:69]
    node _T_56 = mux(_T_26, UInt<4>("h0b"), _T_55) @[Mux.scala 47:69]
    node _T_57 = mux(_T_27, UInt<4>("h0a"), _T_56) @[Mux.scala 47:69]
    node _T_58 = mux(_T_28, UInt<4>("h09"), _T_57) @[Mux.scala 47:69]
    node _T_59 = mux(_T_29, UInt<4>("h08"), _T_58) @[Mux.scala 47:69]
    node _T_60 = mux(_T_30, UInt<3>("h07"), _T_59) @[Mux.scala 47:69]
    node _T_61 = mux(_T_31, UInt<3>("h06"), _T_60) @[Mux.scala 47:69]
    node _T_62 = mux(_T_32, UInt<3>("h05"), _T_61) @[Mux.scala 47:69]
    node _T_63 = mux(_T_33, UInt<3>("h04"), _T_62) @[Mux.scala 47:69]
    node _T_64 = mux(_T_34, UInt<2>("h03"), _T_63) @[Mux.scala 47:69]
    node _T_65 = mux(_T_35, UInt<2>("h02"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_36, UInt<1>("h01"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_37, UInt<1>("h00"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_6, UInt<5>("h01f"), _T_67) @[PositExtractor.scala 20:10]
    node regimeCount = cat(UInt<1>("h00"), _T_68) @[Cat.scala 30:58]
    node _T_69 = not(regimeCount) @[PositExtractor.scala 22:17]
    node _T_70 = add(_T_69, UInt<1>("h01")) @[PositExtractor.scala 22:30]
    node _T_71 = tail(_T_70, 1) @[PositExtractor.scala 22:30]
    node _T_72 = sub(regimeCount, UInt<1>("h01")) @[PositExtractor.scala 22:49]
    node _T_73 = tail(_T_72, 1) @[PositExtractor.scala 22:49]
    node regime = mux(negExp, _T_71, _T_73) @[PositExtractor.scala 22:8]
    node _T_74 = add(regimeCount, UInt<2>("h02")) @[PositExtractor.scala 24:39]
    node _T_75 = tail(_T_74, 1) @[PositExtractor.scala 24:39]
    node expFrac = dshl(absIn, _T_75) @[PositExtractor.scala 24:23]
    node extractedExp = bits(expFrac, 31, 30) @[PositExtractor.scala 26:24]
    node frac = bits(expFrac, 29, 3) @[PositExtractor.scala 28:21]
    node _T_76 = bits(io.in, 31, 31) @[common.scala 27:43]
    node _T_77 = bits(io.in, 30, 0) @[common.scala 27:57]
    node _T_78 = neq(_T_77, UInt<1>("h00")) @[common.scala 27:71]
    node _T_79 = not(_T_78) @[common.scala 27:53]
    node _T_80 = and(_T_76, _T_79) @[common.scala 27:51]
    io.out.isNaR <= _T_80 @[PositExtractor.scala 30:19]
    node _T_81 = neq(io.in, UInt<1>("h00")) @[common.scala 61:41]
    node _T_82 = not(_T_81) @[common.scala 61:33]
    io.out.isZero <= _T_82 @[PositExtractor.scala 31:19]
    io.out.sign <= sign @[PositExtractor.scala 33:19]
    node _T_83 = cat(regime, extractedExp) @[Cat.scala 30:58]
    node _T_84 = asSInt(_T_83) @[PositExtractor.scala 37:11]
    io.out.exponent <= _T_84 @[PositExtractor.scala 34:19]
    node _T_85 = cat(UInt<1>("h01"), frac) @[Cat.scala 30:58]
    io.out.fraction <= _T_85 @[PositExtractor.scala 38:19]
    
  module PositExtractor_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}}
    
    node sign = bits(io.in, 31, 31) @[PositExtractor.scala 12:21]
    node _T = not(io.in) @[PositExtractor.scala 13:26]
    node _T_1 = add(_T, UInt<1>("h01")) @[PositExtractor.scala 13:33]
    node _T_2 = tail(_T_1, 1) @[PositExtractor.scala 13:33]
    node absIn = mux(sign, _T_2, io.in) @[PositExtractor.scala 13:19]
    node _T_3 = bits(absIn, 30, 30) @[PositExtractor.scala 14:22]
    node negExp = not(_T_3) @[PositExtractor.scala 14:16]
    node regExpFrac = bits(absIn, 30, 0) @[PositExtractor.scala 16:26]
    node _T_4 = not(regExpFrac) @[PositExtractor.scala 17:45]
    node zerosRegime = mux(negExp, regExpFrac, _T_4) @[PositExtractor.scala 17:24]
    node _T_5 = neq(zerosRegime, UInt<1>("h00")) @[common.scala 61:41]
    node _T_6 = not(_T_5) @[common.scala 61:33]
    node _T_7 = bits(zerosRegime, 0, 0) @[common.scala 19:50]
    node _T_8 = bits(zerosRegime, 1, 1) @[common.scala 19:50]
    node _T_9 = bits(zerosRegime, 2, 2) @[common.scala 19:50]
    node _T_10 = bits(zerosRegime, 3, 3) @[common.scala 19:50]
    node _T_11 = bits(zerosRegime, 4, 4) @[common.scala 19:50]
    node _T_12 = bits(zerosRegime, 5, 5) @[common.scala 19:50]
    node _T_13 = bits(zerosRegime, 6, 6) @[common.scala 19:50]
    node _T_14 = bits(zerosRegime, 7, 7) @[common.scala 19:50]
    node _T_15 = bits(zerosRegime, 8, 8) @[common.scala 19:50]
    node _T_16 = bits(zerosRegime, 9, 9) @[common.scala 19:50]
    node _T_17 = bits(zerosRegime, 10, 10) @[common.scala 19:50]
    node _T_18 = bits(zerosRegime, 11, 11) @[common.scala 19:50]
    node _T_19 = bits(zerosRegime, 12, 12) @[common.scala 19:50]
    node _T_20 = bits(zerosRegime, 13, 13) @[common.scala 19:50]
    node _T_21 = bits(zerosRegime, 14, 14) @[common.scala 19:50]
    node _T_22 = bits(zerosRegime, 15, 15) @[common.scala 19:50]
    node _T_23 = bits(zerosRegime, 16, 16) @[common.scala 19:50]
    node _T_24 = bits(zerosRegime, 17, 17) @[common.scala 19:50]
    node _T_25 = bits(zerosRegime, 18, 18) @[common.scala 19:50]
    node _T_26 = bits(zerosRegime, 19, 19) @[common.scala 19:50]
    node _T_27 = bits(zerosRegime, 20, 20) @[common.scala 19:50]
    node _T_28 = bits(zerosRegime, 21, 21) @[common.scala 19:50]
    node _T_29 = bits(zerosRegime, 22, 22) @[common.scala 19:50]
    node _T_30 = bits(zerosRegime, 23, 23) @[common.scala 19:50]
    node _T_31 = bits(zerosRegime, 24, 24) @[common.scala 19:50]
    node _T_32 = bits(zerosRegime, 25, 25) @[common.scala 19:50]
    node _T_33 = bits(zerosRegime, 26, 26) @[common.scala 19:50]
    node _T_34 = bits(zerosRegime, 27, 27) @[common.scala 19:50]
    node _T_35 = bits(zerosRegime, 28, 28) @[common.scala 19:50]
    node _T_36 = bits(zerosRegime, 29, 29) @[common.scala 19:50]
    node _T_37 = bits(zerosRegime, 30, 30) @[common.scala 19:50]
    node _T_38 = mux(_T_8, UInt<5>("h01d"), UInt<5>("h01e")) @[Mux.scala 47:69]
    node _T_39 = mux(_T_9, UInt<5>("h01c"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_10, UInt<5>("h01b"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_11, UInt<5>("h01a"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_12, UInt<5>("h019"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_13, UInt<5>("h018"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_14, UInt<5>("h017"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_15, UInt<5>("h016"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_16, UInt<5>("h015"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_17, UInt<5>("h014"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_18, UInt<5>("h013"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_19, UInt<5>("h012"), _T_48) @[Mux.scala 47:69]
    node _T_50 = mux(_T_20, UInt<5>("h011"), _T_49) @[Mux.scala 47:69]
    node _T_51 = mux(_T_21, UInt<5>("h010"), _T_50) @[Mux.scala 47:69]
    node _T_52 = mux(_T_22, UInt<4>("h0f"), _T_51) @[Mux.scala 47:69]
    node _T_53 = mux(_T_23, UInt<4>("h0e"), _T_52) @[Mux.scala 47:69]
    node _T_54 = mux(_T_24, UInt<4>("h0d"), _T_53) @[Mux.scala 47:69]
    node _T_55 = mux(_T_25, UInt<4>("h0c"), _T_54) @[Mux.scala 47:69]
    node _T_56 = mux(_T_26, UInt<4>("h0b"), _T_55) @[Mux.scala 47:69]
    node _T_57 = mux(_T_27, UInt<4>("h0a"), _T_56) @[Mux.scala 47:69]
    node _T_58 = mux(_T_28, UInt<4>("h09"), _T_57) @[Mux.scala 47:69]
    node _T_59 = mux(_T_29, UInt<4>("h08"), _T_58) @[Mux.scala 47:69]
    node _T_60 = mux(_T_30, UInt<3>("h07"), _T_59) @[Mux.scala 47:69]
    node _T_61 = mux(_T_31, UInt<3>("h06"), _T_60) @[Mux.scala 47:69]
    node _T_62 = mux(_T_32, UInt<3>("h05"), _T_61) @[Mux.scala 47:69]
    node _T_63 = mux(_T_33, UInt<3>("h04"), _T_62) @[Mux.scala 47:69]
    node _T_64 = mux(_T_34, UInt<2>("h03"), _T_63) @[Mux.scala 47:69]
    node _T_65 = mux(_T_35, UInt<2>("h02"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_36, UInt<1>("h01"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_37, UInt<1>("h00"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_6, UInt<5>("h01f"), _T_67) @[PositExtractor.scala 20:10]
    node regimeCount = cat(UInt<1>("h00"), _T_68) @[Cat.scala 30:58]
    node _T_69 = not(regimeCount) @[PositExtractor.scala 22:17]
    node _T_70 = add(_T_69, UInt<1>("h01")) @[PositExtractor.scala 22:30]
    node _T_71 = tail(_T_70, 1) @[PositExtractor.scala 22:30]
    node _T_72 = sub(regimeCount, UInt<1>("h01")) @[PositExtractor.scala 22:49]
    node _T_73 = tail(_T_72, 1) @[PositExtractor.scala 22:49]
    node regime = mux(negExp, _T_71, _T_73) @[PositExtractor.scala 22:8]
    node _T_74 = add(regimeCount, UInt<2>("h02")) @[PositExtractor.scala 24:39]
    node _T_75 = tail(_T_74, 1) @[PositExtractor.scala 24:39]
    node expFrac = dshl(absIn, _T_75) @[PositExtractor.scala 24:23]
    node extractedExp = bits(expFrac, 31, 30) @[PositExtractor.scala 26:24]
    node frac = bits(expFrac, 29, 3) @[PositExtractor.scala 28:21]
    node _T_76 = bits(io.in, 31, 31) @[common.scala 27:43]
    node _T_77 = bits(io.in, 30, 0) @[common.scala 27:57]
    node _T_78 = neq(_T_77, UInt<1>("h00")) @[common.scala 27:71]
    node _T_79 = not(_T_78) @[common.scala 27:53]
    node _T_80 = and(_T_76, _T_79) @[common.scala 27:51]
    io.out.isNaR <= _T_80 @[PositExtractor.scala 30:19]
    node _T_81 = neq(io.in, UInt<1>("h00")) @[common.scala 61:41]
    node _T_82 = not(_T_81) @[common.scala 61:33]
    io.out.isZero <= _T_82 @[PositExtractor.scala 31:19]
    io.out.sign <= sign @[PositExtractor.scala 33:19]
    node _T_83 = cat(regime, extractedExp) @[Cat.scala 30:58]
    node _T_84 = asSInt(_T_83) @[PositExtractor.scala 37:11]
    io.out.exponent <= _T_84 @[PositExtractor.scala 34:19]
    node _T_85 = cat(UInt<1>("h01"), frac) @[Cat.scala 30:58]
    io.out.fraction <= _T_85 @[PositExtractor.scala 38:19]
    
  module PositGenerator : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module PositGenerator_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module PositGenerator_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module PositGenerator_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module PositGenerator_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, flip trailingBits : UInt<2>, flip stickyBit : UInt<1>, out : UInt<32>}
    
    node fraction = bits(io.in.fraction, 26, 0) @[PositGenerator.scala 15:32]
    node negExp = lt(io.in.exponent, asSInt(UInt<1>("h00"))) @[PositGenerator.scala 16:31]
    node _T = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:32]
    node _T_1 = sub(UInt<1>("h00"), _T) @[PositGenerator.scala 19:17]
    node _T_2 = tail(_T_1, 1) @[PositGenerator.scala 19:17]
    node _T_3 = bits(io.in.exponent, 8, 2) @[PositGenerator.scala 19:73]
    node regime = mux(negExp, _T_2, _T_3) @[PositGenerator.scala 19:8]
    node exponent = bits(io.in.exponent, 1, 0) @[PositGenerator.scala 20:32]
    node _T_4 = neq(regime, UInt<5>("h01f")) @[PositGenerator.scala 22:31]
    node _T_5 = and(negExp, _T_4) @[PositGenerator.scala 22:22]
    node _T_6 = sub(regime, _T_5) @[PositGenerator.scala 22:12]
    node offset = tail(_T_6, 1) @[PositGenerator.scala 22:12]
    node _T_7 = mux(negExp, UInt<2>("h01"), UInt<2>("h02")) @[PositGenerator.scala 26:14]
    node _T_8 = cat(fraction, io.trailingBits) @[Cat.scala 30:58]
    node _T_9 = cat(_T_7, exponent) @[Cat.scala 30:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 30:58]
    node expFrac = asSInt(_T_10) @[PositGenerator.scala 26:87]
    node _T_11 = dshr(expFrac, offset) @[PositGenerator.scala 31:30]
    node uT_uS_posit = bits(_T_11, 32, 0) @[PositGenerator.scala 31:40]
    node uR_uS_posit = bits(uT_uS_posit, 32, 2) @[PositGenerator.scala 32:32]
    node _T_12 = dshl(UInt<1>("h01"), offset) @[OneHot.scala 58:35]
    node _T_13 = sub(_T_12, UInt<1>("h01")) @[common.scala 23:44]
    node _T_14 = tail(_T_13, 1) @[common.scala 23:44]
    node stickyBitMask = bits(_T_14, 29, 0) @[PositGenerator.scala 34:43]
    node gr = bits(uT_uS_posit, 1, 0) @[PositGenerator.scala 36:16]
    node _T_15 = asUInt(expFrac) @[PositGenerator.scala 38:35]
    node _T_16 = and(_T_15, stickyBitMask) @[PositGenerator.scala 38:38]
    node _T_17 = neq(_T_16, UInt<1>("h00")) @[PositGenerator.scala 38:58]
    node _T_18 = or(io.stickyBit, _T_17) @[PositGenerator.scala 38:18]
    node stickyBit = or(_T_18, UInt<1>("h00")) @[PositGenerator.scala 38:61]
    node _T_19 = eq(uR_uS_posit, UInt<31>("h07fffffff")) @[PositGenerator.scala 43:25]
    node _T_20 = bits(gr, 1, 1) @[PositGenerator.scala 44:9]
    node _T_21 = bits(uR_uS_posit, 0, 0) @[PositGenerator.scala 44:29]
    node _T_22 = not(_T_21) @[PositGenerator.scala 44:17]
    node _T_23 = bits(gr, 1, 1) @[PositGenerator.scala 44:37]
    node _T_24 = and(_T_22, _T_23) @[PositGenerator.scala 44:33]
    node _T_25 = bits(gr, 0, 0) @[PositGenerator.scala 44:46]
    node _T_26 = not(_T_25) @[PositGenerator.scala 44:43]
    node _T_27 = and(_T_24, _T_26) @[PositGenerator.scala 44:41]
    node _T_28 = not(stickyBit) @[PositGenerator.scala 44:52]
    node _T_29 = and(_T_27, _T_28) @[PositGenerator.scala 44:50]
    node _T_30 = not(_T_29) @[PositGenerator.scala 44:15]
    node _T_31 = and(_T_20, _T_30) @[PositGenerator.scala 44:13]
    node roundingBit = mux(_T_19, UInt<1>("h00"), _T_31) @[PositGenerator.scala 43:8]
    node _T_32 = add(uR_uS_posit, roundingBit) @[PositGenerator.scala 45:32]
    node R_uS_posit = tail(_T_32, 1) @[PositGenerator.scala 45:32]
    node _T_33 = neq(R_uS_posit, UInt<1>("h00")) @[common.scala 61:41]
    node _T_34 = not(_T_33) @[common.scala 61:33]
    node _T_35 = or(R_uS_posit, _T_34) @[PositGenerator.scala 49:30]
    node uFC_R_uS_posit = cat(UInt<1>("h00"), _T_35) @[Cat.scala 30:58]
    node _T_36 = not(uFC_R_uS_posit) @[PositGenerator.scala 52:21]
    node _T_37 = add(_T_36, UInt<1>("h01")) @[PositGenerator.scala 52:37]
    node _T_38 = tail(_T_37, 1) @[PositGenerator.scala 52:37]
    node R_S_posit = mux(io.in.sign, _T_38, uFC_R_uS_posit) @[PositGenerator.scala 52:8]
    node _T_39 = shl(UInt<1>("h01"), 31) @[common.scala 55:24]
    node _T_40 = eq(io.in.fraction, UInt<1>("h00")) @[PositGenerator.scala 55:25]
    node _T_41 = or(_T_40, io.in.isZero) @[PositGenerator.scala 55:34]
    node _T_42 = mux(_T_41, UInt<32>("h00"), R_S_posit) @[PositGenerator.scala 55:8]
    node _T_43 = mux(io.in.isNaR, _T_39, _T_42) @[PositGenerator.scala 54:16]
    io.out <= _T_43 @[PositGenerator.scala 54:10]
    
  module Posit : 
    input clock : Clock
    input reset : Reset
    output io : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {num1 : UInt<32>, num2 : UInt<32>, num3 : UInt<32>, inst : UInt<3>, mode : UInt<2>}}, result : {flip ready : UInt<1>, valid : UInt<1>, bits : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}}, flip in_idx : UInt<3>, out_idx : UInt<3>}
    
    inst positAddCore of PositAddCore @[POSIT.scala 44:34]
    positAddCore.clock <= clock
    positAddCore.reset <= reset
    inst positCompare of PositCompare @[POSIT.scala 45:34]
    positCompare.clock <= clock
    positCompare.reset <= reset
    inst positFMACore of PositFMACore @[POSIT.scala 46:34]
    positFMACore.clock <= clock
    positFMACore.reset <= reset
    inst positDivSqrtCore of PositDivSqrtCore @[POSIT.scala 47:38]
    positDivSqrtCore.clock <= clock
    positDivSqrtCore.reset <= reset
    inst positMulCore of PositMulCore @[POSIT.scala 48:34]
    positMulCore.clock <= clock
    positMulCore.reset <= reset
    reg init_num1 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 51:32]
    reg init_num2 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 52:32]
    reg init_num3 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 53:32]
    reg init_input_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 54:39]
    reg init_inst : UInt<3>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 55:32]
    reg init_mode : UInt<2>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 56:32]
    reg init_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 57:33]
    reg init_idx : UInt<3>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 58:31]
    reg result_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 60:35]
    reg exec_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 61:33]
    node _T = and(io.request.valid, io.request.ready) @[POSIT.scala 63:31]
    when _T : @[POSIT.scala 63:51]
      init_num1 <= io.request.bits.num1 @[POSIT.scala 64:27]
      init_num2 <= io.request.bits.num2 @[POSIT.scala 65:27]
      init_num3 <= io.request.bits.num3 @[POSIT.scala 66:27]
      init_valid <= io.request.valid @[POSIT.scala 67:28]
      init_inst <= io.request.bits.inst @[POSIT.scala 68:27]
      init_mode <= io.request.bits.mode @[POSIT.scala 69:27]
      init_idx <= io.in_idx @[POSIT.scala 70:26]
      skip @[POSIT.scala 63:51]
    else : @[POSIT.scala 71:65]
      node _T_1 = eq(result_valid, UInt<1>("h00")) @[POSIT.scala 71:21]
      node _T_2 = eq(exec_valid, UInt<1>("h00")) @[POSIT.scala 71:39]
      node _T_3 = and(_T_1, _T_2) @[POSIT.scala 71:36]
      node _T_4 = and(_T_3, init_valid) @[POSIT.scala 71:51]
      when _T_4 : @[POSIT.scala 71:65]
        init_valid <= UInt<1>("h00") @[POSIT.scala 72:28]
        skip @[POSIT.scala 71:65]
    inst num1Extractor of PositExtractor @[POSIT.scala 74:35]
    num1Extractor.clock <= clock
    num1Extractor.reset <= reset
    inst num2Extractor of PositExtractor_1 @[POSIT.scala 75:35]
    num2Extractor.clock <= clock
    num2Extractor.reset <= reset
    inst num3Extractor of PositExtractor_2 @[POSIT.scala 76:35]
    num3Extractor.clock <= clock
    num3Extractor.reset <= reset
    num1Extractor.io.in <= init_num1 @[POSIT.scala 77:29]
    num2Extractor.io.in <= init_num2 @[POSIT.scala 78:29]
    num3Extractor.io.in <= init_num3 @[POSIT.scala 79:29]
    wire _T_5 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 81:75]
    _T_5.isNaR <= UInt<1>("h00") @[POSIT.scala 81:75]
    _T_5.isZero <= UInt<1>("h00") @[POSIT.scala 81:75]
    _T_5.fraction <= UInt<28>("h00") @[POSIT.scala 81:75]
    node _T_6 = asSInt(UInt<9>("h00")) @[POSIT.scala 81:75]
    _T_5.exponent <= _T_6 @[POSIT.scala 81:75]
    _T_5.sign <= UInt<1>("h00") @[POSIT.scala 81:75]
    reg exec_num1 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, clock with : (reset => (reset, _T_5)) @[POSIT.scala 81:32]
    wire _T_7 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 82:75]
    _T_7.isNaR <= UInt<1>("h00") @[POSIT.scala 82:75]
    _T_7.isZero <= UInt<1>("h00") @[POSIT.scala 82:75]
    _T_7.fraction <= UInt<28>("h00") @[POSIT.scala 82:75]
    node _T_8 = asSInt(UInt<9>("h00")) @[POSIT.scala 82:75]
    _T_7.exponent <= _T_8 @[POSIT.scala 82:75]
    _T_7.sign <= UInt<1>("h00") @[POSIT.scala 82:75]
    reg exec_num2 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, clock with : (reset => (reset, _T_7)) @[POSIT.scala 82:32]
    wire _T_9 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 83:75]
    _T_9.isNaR <= UInt<1>("h00") @[POSIT.scala 83:75]
    _T_9.isZero <= UInt<1>("h00") @[POSIT.scala 83:75]
    _T_9.fraction <= UInt<28>("h00") @[POSIT.scala 83:75]
    node _T_10 = asSInt(UInt<9>("h00")) @[POSIT.scala 83:75]
    _T_9.exponent <= _T_10 @[POSIT.scala 83:75]
    _T_9.sign <= UInt<1>("h00") @[POSIT.scala 83:75]
    reg exec_num3 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, clock with : (reset => (reset, _T_9)) @[POSIT.scala 83:32]
    reg comp_num1 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 84:32]
    reg comp_num2 : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 85:32]
    reg exec_input_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 86:39]
    reg exec_inst : UInt<3>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 87:32]
    reg exec_mode : UInt<2>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 88:32]
    reg exec_idx : UInt<3>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 89:31]
    reg dispatched : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 90:33]
    wire default_unpacked : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 92:36]
    wire _T_11 : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>} @[POSIT.scala 94:76]
    _T_11.isNaR <= UInt<1>("h00") @[POSIT.scala 94:76]
    _T_11.isZero <= UInt<1>("h00") @[POSIT.scala 94:76]
    _T_11.fraction <= UInt<28>("h00") @[POSIT.scala 94:76]
    node _T_12 = asSInt(UInt<9>("h00")) @[POSIT.scala 94:76]
    _T_11.exponent <= _T_12 @[POSIT.scala 94:76]
    _T_11.sign <= UInt<1>("h00") @[POSIT.scala 94:76]
    reg result_out : {sign : UInt<1>, exponent : SInt<9>, fraction : UInt<28>, isZero : UInt<1>, isNaR : UInt<1>}, clock with : (reset => (reset, _T_11)) @[POSIT.scala 94:33]
    reg result_stickyBit : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 95:39]
    reg result_trailingBits : UInt<2>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 96:42]
    reg result_lt : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 97:32]
    reg result_eq : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 98:32]
    reg result_gt : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 99:32]
    reg result_idx : UInt<3>, clock with : (reset => (reset, UInt<1>("h00"))) @[POSIT.scala 100:33]
    node _T_13 = not(init_valid) @[POSIT.scala 102:29]
    io.request.ready <= _T_13 @[POSIT.scala 102:26]
    default_unpacked.sign <= UInt<1>("h00") @[POSIT.scala 103:32]
    default_unpacked.exponent <= asSInt(UInt<1>("h00")) @[POSIT.scala 104:35]
    default_unpacked.fraction <= UInt<1>("h00") @[POSIT.scala 105:35]
    default_unpacked.isZero <= UInt<1>("h00") @[POSIT.scala 106:33]
    default_unpacked.isNaR <= UInt<1>("h00") @[POSIT.scala 107:32]
    wire new_result_valid : UInt<1> @[POSIT.scala 108:36]
    node _T_14 = eq(result_valid, UInt<1>("h00")) @[POSIT.scala 110:16]
    node _T_15 = eq(exec_valid, UInt<1>("h00")) @[POSIT.scala 110:34]
    node _T_16 = and(_T_14, _T_15) @[POSIT.scala 110:31]
    node _T_17 = and(_T_16, init_valid) @[POSIT.scala 110:46]
    when _T_17 : @[POSIT.scala 110:60]
      comp_num1 <= init_num1 @[POSIT.scala 111:27]
      comp_num2 <= init_num2 @[POSIT.scala 112:27]
      exec_num1.isNaR <= num1Extractor.io.out.isNaR @[POSIT.scala 113:27]
      exec_num1.isZero <= num1Extractor.io.out.isZero @[POSIT.scala 113:27]
      exec_num1.fraction <= num1Extractor.io.out.fraction @[POSIT.scala 113:27]
      exec_num1.exponent <= num1Extractor.io.out.exponent @[POSIT.scala 113:27]
      exec_num1.sign <= num1Extractor.io.out.sign @[POSIT.scala 113:27]
      exec_num2.isNaR <= num2Extractor.io.out.isNaR @[POSIT.scala 114:27]
      exec_num2.isZero <= num2Extractor.io.out.isZero @[POSIT.scala 114:27]
      exec_num2.fraction <= num2Extractor.io.out.fraction @[POSIT.scala 114:27]
      exec_num2.exponent <= num2Extractor.io.out.exponent @[POSIT.scala 114:27]
      exec_num2.sign <= num2Extractor.io.out.sign @[POSIT.scala 114:27]
      exec_num3.isNaR <= num3Extractor.io.out.isNaR @[POSIT.scala 115:27]
      exec_num3.isZero <= num3Extractor.io.out.isZero @[POSIT.scala 115:27]
      exec_num3.fraction <= num3Extractor.io.out.fraction @[POSIT.scala 115:27]
      exec_num3.exponent <= num3Extractor.io.out.exponent @[POSIT.scala 115:27]
      exec_num3.sign <= num3Extractor.io.out.sign @[POSIT.scala 115:27]
      exec_valid <= init_valid @[POSIT.scala 116:28]
      exec_inst <= init_inst @[POSIT.scala 117:27]
      exec_mode <= init_mode @[POSIT.scala 118:27]
      exec_idx <= init_idx @[POSIT.scala 119:26]
      skip @[POSIT.scala 110:60]
    else : @[POSIT.scala 120:37]
      when new_result_valid : @[POSIT.scala 120:37]
        exec_valid <= UInt<1>("h00") @[POSIT.scala 121:28]
        skip @[POSIT.scala 120:37]
    when new_result_valid : @[POSIT.scala 124:31]
      dispatched <= UInt<1>("h00") @[POSIT.scala 125:28]
      skip @[POSIT.scala 124:31]
    else : @[POSIT.scala 126:31]
      when exec_valid : @[POSIT.scala 126:31]
        dispatched <= UInt<1>("h01") @[POSIT.scala 127:28]
        skip @[POSIT.scala 126:31]
    positAddCore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 130:30]
    positAddCore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 130:30]
    positAddCore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 130:30]
    positAddCore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 130:30]
    positAddCore.io.num1.sign <= exec_num1.sign @[POSIT.scala 130:30]
    positAddCore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 131:30]
    positAddCore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 131:30]
    positAddCore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 131:30]
    positAddCore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 131:30]
    positAddCore.io.num2.sign <= exec_num2.sign @[POSIT.scala 131:30]
    node _T_18 = bits(exec_mode, 0, 0) @[POSIT.scala 132:41]
    positAddCore.io.sub <= _T_18 @[POSIT.scala 132:29]
    node _T_19 = eq(exec_inst, UInt<3>("h01")) @[POSIT.scala 133:64]
    node _T_20 = and(exec_valid, _T_19) @[POSIT.scala 133:51]
    node _T_21 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 133:91]
    node _T_22 = and(_T_20, _T_21) @[POSIT.scala 133:87]
    positAddCore.io.input_valid <= _T_22 @[POSIT.scala 133:37]
    node _T_23 = asSInt(comp_num1) @[POSIT.scala 135:43]
    positCompare.io.num1 <= _T_23 @[POSIT.scala 135:30]
    node _T_24 = asSInt(comp_num2) @[POSIT.scala 136:43]
    positCompare.io.num2 <= _T_24 @[POSIT.scala 136:30]
    node _T_25 = eq(exec_inst, UInt<3>("h02")) @[POSIT.scala 137:60]
    node _T_26 = and(exec_valid, _T_25) @[POSIT.scala 137:47]
    node _T_27 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 137:84]
    node _T_28 = and(_T_26, _T_27) @[POSIT.scala 137:80]
    positCompare.io.validIn <= _T_28 @[POSIT.scala 137:33]
    positFMACore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 139:30]
    positFMACore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 139:30]
    positFMACore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 139:30]
    positFMACore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 139:30]
    positFMACore.io.num1.sign <= exec_num1.sign @[POSIT.scala 139:30]
    positFMACore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 140:30]
    positFMACore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 140:30]
    positFMACore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 140:30]
    positFMACore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 140:30]
    positFMACore.io.num2.sign <= exec_num2.sign @[POSIT.scala 140:30]
    positFMACore.io.num3.isNaR <= exec_num3.isNaR @[POSIT.scala 141:30]
    positFMACore.io.num3.isZero <= exec_num3.isZero @[POSIT.scala 141:30]
    positFMACore.io.num3.fraction <= exec_num3.fraction @[POSIT.scala 141:30]
    positFMACore.io.num3.exponent <= exec_num3.exponent @[POSIT.scala 141:30]
    positFMACore.io.num3.sign <= exec_num3.sign @[POSIT.scala 141:30]
    node _T_29 = bits(exec_mode, 0, 0) @[POSIT.scala 142:41]
    positFMACore.io.sub <= _T_29 @[POSIT.scala 142:29]
    node _T_30 = bits(exec_mode, 1, 1) @[POSIT.scala 143:44]
    positFMACore.io.negate <= _T_30 @[POSIT.scala 143:32]
    node _T_31 = eq(exec_inst, UInt<3>("h03")) @[POSIT.scala 144:64]
    node _T_32 = and(exec_valid, _T_31) @[POSIT.scala 144:51]
    node _T_33 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 144:88]
    node _T_34 = and(_T_32, _T_33) @[POSIT.scala 144:84]
    positFMACore.io.input_valid <= _T_34 @[POSIT.scala 144:37]
    positDivSqrtCore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 147:34]
    positDivSqrtCore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 147:34]
    positDivSqrtCore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 147:34]
    positDivSqrtCore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 147:34]
    positDivSqrtCore.io.num1.sign <= exec_num1.sign @[POSIT.scala 147:34]
    positDivSqrtCore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 148:34]
    positDivSqrtCore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 148:34]
    positDivSqrtCore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 148:34]
    positDivSqrtCore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 148:34]
    positDivSqrtCore.io.num2.sign <= exec_num2.sign @[POSIT.scala 148:34]
    node _T_35 = bits(exec_mode, 0, 0) @[POSIT.scala 149:48]
    positDivSqrtCore.io.sqrtOp <= _T_35 @[POSIT.scala 149:36]
    node _T_36 = eq(exec_inst, UInt<3>("h05")) @[POSIT.scala 150:64]
    node _T_37 = and(exec_valid, _T_36) @[POSIT.scala 150:51]
    node _T_38 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 150:92]
    node _T_39 = and(_T_37, _T_38) @[POSIT.scala 150:88]
    positDivSqrtCore.io.validIn <= _T_39 @[POSIT.scala 150:37]
    positMulCore.io.num1.isNaR <= exec_num1.isNaR @[POSIT.scala 153:30]
    positMulCore.io.num1.isZero <= exec_num1.isZero @[POSIT.scala 153:30]
    positMulCore.io.num1.fraction <= exec_num1.fraction @[POSIT.scala 153:30]
    positMulCore.io.num1.exponent <= exec_num1.exponent @[POSIT.scala 153:30]
    positMulCore.io.num1.sign <= exec_num1.sign @[POSIT.scala 153:30]
    positMulCore.io.num2.isNaR <= exec_num2.isNaR @[POSIT.scala 154:30]
    positMulCore.io.num2.isZero <= exec_num2.isZero @[POSIT.scala 154:30]
    positMulCore.io.num2.fraction <= exec_num2.fraction @[POSIT.scala 154:30]
    positMulCore.io.num2.exponent <= exec_num2.exponent @[POSIT.scala 154:30]
    positMulCore.io.num2.sign <= exec_num2.sign @[POSIT.scala 154:30]
    node _T_40 = eq(exec_inst, UInt<3>("h04")) @[POSIT.scala 155:60]
    node _T_41 = and(exec_valid, _T_40) @[POSIT.scala 155:47]
    node _T_42 = eq(dispatched, UInt<1>("h00")) @[POSIT.scala 155:84]
    node _T_43 = and(_T_41, _T_42) @[POSIT.scala 155:80]
    positMulCore.io.validIn <= _T_43 @[POSIT.scala 155:33]
    node _T_44 = or(positCompare.io.validOut, positMulCore.io.validOut) @[POSIT.scala 158:54]
    node _T_45 = or(_T_44, positDivSqrtCore.io.validOut_div) @[POSIT.scala 158:80]
    node _T_46 = or(_T_45, positDivSqrtCore.io.validOut_sqrt) @[POSIT.scala 159:58]
    node _T_47 = or(_T_46, positFMACore.io.output_valid) @[POSIT.scala 160:59]
    node _T_48 = or(_T_47, positAddCore.io.output_valid) @[POSIT.scala 160:90]
    new_result_valid <= _T_48 @[POSIT.scala 158:26]
    when io.result.ready : @[POSIT.scala 162:30]
      result_valid <= new_result_valid @[POSIT.scala 166:30]
      node _T_49 = eq(UInt<3>("h05"), exec_inst) @[Mux.scala 68:19]
      node _T_50 = mux(_T_49, positDivSqrtCore.io.out, default_unpacked) @[Mux.scala 68:16]
      node _T_51 = eq(UInt<3>("h04"), exec_inst) @[Mux.scala 68:19]
      node _T_52 = mux(_T_51, positMulCore.io.out, _T_50) @[Mux.scala 68:16]
      node _T_53 = eq(UInt<3>("h03"), exec_inst) @[Mux.scala 68:19]
      node _T_54 = mux(_T_53, positFMACore.io.out, _T_52) @[Mux.scala 68:16]
      node _T_55 = eq(UInt<3>("h01"), exec_inst) @[Mux.scala 68:19]
      node _T_56 = mux(_T_55, positAddCore.io.out, _T_54) @[Mux.scala 68:16]
      result_out.isNaR <= _T_56.isNaR @[POSIT.scala 167:28]
      result_out.isZero <= _T_56.isZero @[POSIT.scala 167:28]
      result_out.fraction <= _T_56.fraction @[POSIT.scala 167:28]
      result_out.exponent <= _T_56.exponent @[POSIT.scala 167:28]
      result_out.sign <= _T_56.sign @[POSIT.scala 167:28]
      node _T_57 = eq(UInt<3>("h05"), exec_inst) @[Mux.scala 68:19]
      node _T_58 = mux(_T_57, positDivSqrtCore.io.stickyBit, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_59 = eq(UInt<3>("h04"), exec_inst) @[Mux.scala 68:19]
      node _T_60 = mux(_T_59, positMulCore.io.stickyBit, _T_58) @[Mux.scala 68:16]
      node _T_61 = eq(UInt<3>("h03"), exec_inst) @[Mux.scala 68:19]
      node _T_62 = mux(_T_61, positFMACore.io.stickyBit, _T_60) @[Mux.scala 68:16]
      node _T_63 = eq(UInt<3>("h01"), exec_inst) @[Mux.scala 68:19]
      node _T_64 = mux(_T_63, positAddCore.io.stickyBit, _T_62) @[Mux.scala 68:16]
      result_stickyBit <= _T_64 @[POSIT.scala 175:34]
      node _T_65 = eq(UInt<3>("h05"), exec_inst) @[Mux.scala 68:19]
      node _T_66 = mux(_T_65, positDivSqrtCore.io.trailingBits, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_67 = eq(UInt<3>("h04"), exec_inst) @[Mux.scala 68:19]
      node _T_68 = mux(_T_67, positMulCore.io.trailingBits, _T_66) @[Mux.scala 68:16]
      node _T_69 = eq(UInt<3>("h03"), exec_inst) @[Mux.scala 68:19]
      node _T_70 = mux(_T_69, positFMACore.io.trailingBits, _T_68) @[Mux.scala 68:16]
      node _T_71 = eq(UInt<3>("h01"), exec_inst) @[Mux.scala 68:19]
      node _T_72 = mux(_T_71, positAddCore.io.trailingBits, _T_70) @[Mux.scala 68:16]
      result_trailingBits <= _T_72 @[POSIT.scala 183:37]
      result_lt <= positCompare.io.lt @[POSIT.scala 190:27]
      result_eq <= positCompare.io.eq @[POSIT.scala 191:27]
      result_gt <= positCompare.io.gt @[POSIT.scala 192:27]
      result_idx <= exec_idx @[POSIT.scala 193:28]
      skip @[POSIT.scala 162:30]
    inst positGenerator of PositGenerator @[POSIT.scala 197:36]
    positGenerator.clock <= clock
    positGenerator.reset <= reset
    positGenerator.io.in.isNaR <= result_out.isNaR @[POSIT.scala 198:40]
    positGenerator.io.in.isZero <= result_out.isZero @[POSIT.scala 198:40]
    positGenerator.io.in.fraction <= result_out.fraction @[POSIT.scala 198:40]
    positGenerator.io.in.exponent <= result_out.exponent @[POSIT.scala 198:40]
    positGenerator.io.in.sign <= result_out.sign @[POSIT.scala 198:40]
    positGenerator.io.trailingBits <= result_trailingBits @[POSIT.scala 199:40]
    positGenerator.io.stickyBit <= result_stickyBit @[POSIT.scala 200:40]
    inst PositGenerator of PositGenerator_1 @[POSIT.scala 203:50]
    PositGenerator.clock <= clock
    PositGenerator.reset <= reset
    inst PositGenerator_1 of PositGenerator_2 @[POSIT.scala 204:47]
    PositGenerator_1.clock <= clock
    PositGenerator_1.reset <= reset
    inst PositGenerator_2 of PositGenerator_3 @[POSIT.scala 205:47]
    PositGenerator_2.clock <= clock
    PositGenerator_2.reset <= reset
    inst PositGenerator_3 of PositGenerator_4 @[POSIT.scala 206:51]
    PositGenerator_3.clock <= clock
    PositGenerator_3.reset <= reset
    PositGenerator.io.in.isNaR <= positAddCore.io.out.isNaR @[POSIT.scala 208:54]
    PositGenerator.io.in.isZero <= positAddCore.io.out.isZero @[POSIT.scala 208:54]
    PositGenerator.io.in.fraction <= positAddCore.io.out.fraction @[POSIT.scala 208:54]
    PositGenerator.io.in.exponent <= positAddCore.io.out.exponent @[POSIT.scala 208:54]
    PositGenerator.io.in.sign <= positAddCore.io.out.sign @[POSIT.scala 208:54]
    PositGenerator.io.trailingBits <= positAddCore.io.trailingBits @[POSIT.scala 209:54]
    PositGenerator.io.stickyBit <= positAddCore.io.stickyBit @[POSIT.scala 210:54]
    PositGenerator_1.io.in.isNaR <= positFMACore.io.out.isNaR @[POSIT.scala 212:51]
    PositGenerator_1.io.in.isZero <= positFMACore.io.out.isZero @[POSIT.scala 212:51]
    PositGenerator_1.io.in.fraction <= positFMACore.io.out.fraction @[POSIT.scala 212:51]
    PositGenerator_1.io.in.exponent <= positFMACore.io.out.exponent @[POSIT.scala 212:51]
    PositGenerator_1.io.in.sign <= positFMACore.io.out.sign @[POSIT.scala 212:51]
    PositGenerator_1.io.trailingBits <= positFMACore.io.trailingBits @[POSIT.scala 213:51]
    PositGenerator_1.io.stickyBit <= positFMACore.io.stickyBit @[POSIT.scala 214:51]
    PositGenerator_2.io.in.isNaR <= positMulCore.io.out.isNaR @[POSIT.scala 216:51]
    PositGenerator_2.io.in.isZero <= positMulCore.io.out.isZero @[POSIT.scala 216:51]
    PositGenerator_2.io.in.fraction <= positMulCore.io.out.fraction @[POSIT.scala 216:51]
    PositGenerator_2.io.in.exponent <= positMulCore.io.out.exponent @[POSIT.scala 216:51]
    PositGenerator_2.io.in.sign <= positMulCore.io.out.sign @[POSIT.scala 216:51]
    PositGenerator_2.io.trailingBits <= positMulCore.io.trailingBits @[POSIT.scala 217:51]
    PositGenerator_2.io.stickyBit <= positMulCore.io.stickyBit @[POSIT.scala 218:51]
    PositGenerator_3.io.in.isNaR <= positDivSqrtCore.io.out.isNaR @[POSIT.scala 220:55]
    PositGenerator_3.io.in.isZero <= positDivSqrtCore.io.out.isZero @[POSIT.scala 220:55]
    PositGenerator_3.io.in.fraction <= positDivSqrtCore.io.out.fraction @[POSIT.scala 220:55]
    PositGenerator_3.io.in.exponent <= positDivSqrtCore.io.out.exponent @[POSIT.scala 220:55]
    PositGenerator_3.io.in.sign <= positDivSqrtCore.io.out.sign @[POSIT.scala 220:55]
    PositGenerator_3.io.trailingBits <= positDivSqrtCore.io.trailingBits @[POSIT.scala 221:55]
    PositGenerator_3.io.stickyBit <= positDivSqrtCore.io.stickyBit @[POSIT.scala 222:55]
    node _T_73 = and(io.request.valid, io.request.ready) @[POSIT.scala 232:39]
    when _T_73 : @[POSIT.scala 232:59]
      node _T_74 = asUInt(reset) @[POSIT.scala 233:31]
      node _T_75 = eq(_T_74, UInt<1>("h00")) @[POSIT.scala 233:31]
      when _T_75 : @[POSIT.scala 233:31]
        printf(clock, UInt<1>(1), "Init:\n") @[POSIT.scala 233:31]
        skip @[POSIT.scala 233:31]
      node _T_76 = asUInt(reset) @[POSIT.scala 234:31]
      node _T_77 = eq(_T_76, UInt<1>("h00")) @[POSIT.scala 234:31]
      when _T_77 : @[POSIT.scala 234:31]
        printf(clock, UInt<1>(1), "\tinit_valid: %d\n", io.request.valid) @[POSIT.scala 234:31]
        skip @[POSIT.scala 234:31]
      node _T_78 = asUInt(reset) @[POSIT.scala 235:31]
      node _T_79 = eq(_T_78, UInt<1>("h00")) @[POSIT.scala 235:31]
      when _T_79 : @[POSIT.scala 235:31]
        printf(clock, UInt<1>(1), "\tinit_inst: %d\n", io.request.bits.inst) @[POSIT.scala 235:31]
        skip @[POSIT.scala 235:31]
      node _T_80 = asUInt(reset) @[POSIT.scala 236:31]
      node _T_81 = eq(_T_80, UInt<1>("h00")) @[POSIT.scala 236:31]
      when _T_81 : @[POSIT.scala 236:31]
        printf(clock, UInt<1>(1), "\tidx: %d\n", io.in_idx) @[POSIT.scala 236:31]
        skip @[POSIT.scala 236:31]
      skip @[POSIT.scala 232:59]
    else : @[POSIT.scala 238:73]
      node _T_82 = eq(result_valid, UInt<1>("h00")) @[POSIT.scala 238:29]
      node _T_83 = eq(exec_valid, UInt<1>("h00")) @[POSIT.scala 238:47]
      node _T_84 = and(_T_82, _T_83) @[POSIT.scala 238:44]
      node _T_85 = and(_T_84, init_valid) @[POSIT.scala 238:59]
      when _T_85 : @[POSIT.scala 238:73]
        node _T_86 = asUInt(reset) @[POSIT.scala 239:31]
        node _T_87 = eq(_T_86, UInt<1>("h00")) @[POSIT.scala 239:31]
        when _T_87 : @[POSIT.scala 239:31]
          printf(clock, UInt<1>(1), "\tinit_valid: %d\n", UInt<1>("h00")) @[POSIT.scala 239:31]
          skip @[POSIT.scala 239:31]
        skip @[POSIT.scala 238:73]
    when new_result_valid : @[POSIT.scala 241:39]
      node _T_88 = asUInt(reset) @[POSIT.scala 242:31]
      node _T_89 = eq(_T_88, UInt<1>("h00")) @[POSIT.scala 242:31]
      when _T_89 : @[POSIT.scala 242:31]
        printf(clock, UInt<1>(1), "new results!\n") @[POSIT.scala 242:31]
        skip @[POSIT.scala 242:31]
      skip @[POSIT.scala 241:39]
    node _T_90 = eq(result_valid, UInt<1>("h00")) @[POSIT.scala 244:24]
    node _T_91 = eq(exec_valid, UInt<1>("h00")) @[POSIT.scala 244:42]
    node _T_92 = and(_T_90, _T_91) @[POSIT.scala 244:39]
    node _T_93 = and(_T_92, init_valid) @[POSIT.scala 244:54]
    when _T_93 : @[POSIT.scala 244:68]
      node _T_94 = asUInt(reset) @[POSIT.scala 245:31]
      node _T_95 = eq(_T_94, UInt<1>("h00")) @[POSIT.scala 245:31]
      when _T_95 : @[POSIT.scala 245:31]
        printf(clock, UInt<1>(1), "Exec:\n") @[POSIT.scala 245:31]
        skip @[POSIT.scala 245:31]
      node _T_96 = asUInt(reset) @[POSIT.scala 246:31]
      node _T_97 = eq(_T_96, UInt<1>("h00")) @[POSIT.scala 246:31]
      when _T_97 : @[POSIT.scala 246:31]
        printf(clock, UInt<1>(1), "\t exec_valid: %d\n", init_valid) @[POSIT.scala 246:31]
        skip @[POSIT.scala 246:31]
      node _T_98 = asUInt(reset) @[POSIT.scala 247:31]
      node _T_99 = eq(_T_98, UInt<1>("h00")) @[POSIT.scala 247:31]
      when _T_99 : @[POSIT.scala 247:31]
        printf(clock, UInt<1>(1), "\t exec_inst: %d\n", init_inst) @[POSIT.scala 247:31]
        skip @[POSIT.scala 247:31]
      node _T_100 = asUInt(reset) @[POSIT.scala 248:31]
      node _T_101 = eq(_T_100, UInt<1>("h00")) @[POSIT.scala 248:31]
      when _T_101 : @[POSIT.scala 248:31]
        printf(clock, UInt<1>(1), "\t exec_idx: %d\n", init_idx) @[POSIT.scala 248:31]
        skip @[POSIT.scala 248:31]
      skip @[POSIT.scala 244:68]
    else : @[POSIT.scala 249:45]
      when new_result_valid : @[POSIT.scala 249:45]
        node _T_102 = asUInt(reset) @[POSIT.scala 250:31]
        node _T_103 = eq(_T_102, UInt<1>("h00")) @[POSIT.scala 250:31]
        when _T_103 : @[POSIT.scala 250:31]
          printf(clock, UInt<1>(1), "\t exec_valid: %d\n", UInt<1>("h00")) @[POSIT.scala 250:31]
          skip @[POSIT.scala 250:31]
        skip @[POSIT.scala 249:45]
    when new_result_valid : @[POSIT.scala 253:39]
      node _T_104 = asUInt(reset) @[POSIT.scala 254:31]
      node _T_105 = eq(_T_104, UInt<1>("h00")) @[POSIT.scala 254:31]
      when _T_105 : @[POSIT.scala 254:31]
        printf(clock, UInt<1>(1), "\tdispatched: %d\n", UInt<1>("h00")) @[POSIT.scala 254:31]
        skip @[POSIT.scala 254:31]
      skip @[POSIT.scala 253:39]
    else : @[POSIT.scala 255:39]
      when exec_valid : @[POSIT.scala 255:39]
        node _T_106 = asUInt(reset) @[POSIT.scala 256:31]
        node _T_107 = eq(_T_106, UInt<1>("h00")) @[POSIT.scala 256:31]
        when _T_107 : @[POSIT.scala 256:31]
          printf(clock, UInt<1>(1), "\tdispatched: %d\n", UInt<1>("h01")) @[POSIT.scala 256:31]
          skip @[POSIT.scala 256:31]
        skip @[POSIT.scala 255:39]
    when io.result.valid : @[POSIT.scala 259:38]
      node _T_108 = asUInt(reset) @[POSIT.scala 260:31]
      node _T_109 = eq(_T_108, UInt<1>("h00")) @[POSIT.scala 260:31]
      when _T_109 : @[POSIT.scala 260:31]
        printf(clock, UInt<1>(1), "valid idx: %d\n", io.out_idx) @[POSIT.scala 260:31]
        skip @[POSIT.scala 260:31]
      skip @[POSIT.scala 259:38]
    node _T_110 = neq(positGenerator.io.out, UInt<1>("h00")) @[common.scala 61:41]
    node _T_111 = not(_T_110) @[common.scala 61:33]
    node _T_112 = or(result_out.isZero, _T_111) @[POSIT.scala 265:52]
    io.result.bits.isZero <= _T_112 @[POSIT.scala 265:31]
    node _T_113 = bits(positGenerator.io.out, 31, 31) @[common.scala 27:43]
    node _T_114 = bits(positGenerator.io.out, 30, 0) @[common.scala 27:57]
    node _T_115 = neq(_T_114, UInt<1>("h00")) @[common.scala 27:71]
    node _T_116 = not(_T_115) @[common.scala 27:53]
    node _T_117 = and(_T_113, _T_116) @[common.scala 27:51]
    node _T_118 = or(result_out.isNaR, _T_117) @[POSIT.scala 266:52]
    io.result.bits.isNaR <= _T_118 @[POSIT.scala 266:31]
    io.result.bits.out <= positGenerator.io.out @[POSIT.scala 267:31]
    io.result.bits.lt <= result_lt @[POSIT.scala 268:27]
    io.result.bits.eq <= result_eq @[POSIT.scala 269:27]
    io.result.bits.gt <= result_gt @[POSIT.scala 270:27]
    io.result.bits.exceptions <= positDivSqrtCore.io.exceptions @[POSIT.scala 271:35]
    io.out_idx <= result_idx @[POSIT.scala 272:20]
    io.result.valid <= result_valid @[POSIT.scala 274:25]
    
  module DispatchArbiter : 
    input clock : Clock
    input reset : Reset
    output io : {flip validity : UInt<8>, flip priority : UInt<3>, chosen : UInt<3>, hasChosen : UInt<1>}
    
    wire afterPriority : UInt<1>[8] @[DispatchArbiter.scala 14:33]
    wire beforePriority : UInt<1>[8] @[DispatchArbiter.scala 15:34]
    node _T = geq(UInt<3>("h07"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_1 = bits(io.validity, 7, 7) @[DispatchArbiter.scala 19:64]
    node _T_2 = mux(_T, _T_1, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[7] <= _T_2 @[DispatchArbiter.scala 18:34]
    node _T_3 = lt(UInt<3>("h07"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_4 = bits(io.validity, 7, 7) @[DispatchArbiter.scala 21:63]
    node _T_5 = mux(_T_3, _T_4, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[7] <= _T_5 @[DispatchArbiter.scala 20:35]
    node _T_6 = geq(UInt<3>("h06"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_7 = bits(io.validity, 6, 6) @[DispatchArbiter.scala 19:64]
    node _T_8 = mux(_T_6, _T_7, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[6] <= _T_8 @[DispatchArbiter.scala 18:34]
    node _T_9 = lt(UInt<3>("h06"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_10 = bits(io.validity, 6, 6) @[DispatchArbiter.scala 21:63]
    node _T_11 = mux(_T_9, _T_10, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[6] <= _T_11 @[DispatchArbiter.scala 20:35]
    node _T_12 = geq(UInt<3>("h05"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_13 = bits(io.validity, 5, 5) @[DispatchArbiter.scala 19:64]
    node _T_14 = mux(_T_12, _T_13, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[5] <= _T_14 @[DispatchArbiter.scala 18:34]
    node _T_15 = lt(UInt<3>("h05"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_16 = bits(io.validity, 5, 5) @[DispatchArbiter.scala 21:63]
    node _T_17 = mux(_T_15, _T_16, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[5] <= _T_17 @[DispatchArbiter.scala 20:35]
    node _T_18 = geq(UInt<3>("h04"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_19 = bits(io.validity, 4, 4) @[DispatchArbiter.scala 19:64]
    node _T_20 = mux(_T_18, _T_19, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[4] <= _T_20 @[DispatchArbiter.scala 18:34]
    node _T_21 = lt(UInt<3>("h04"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_22 = bits(io.validity, 4, 4) @[DispatchArbiter.scala 21:63]
    node _T_23 = mux(_T_21, _T_22, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[4] <= _T_23 @[DispatchArbiter.scala 20:35]
    node _T_24 = geq(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_25 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 19:64]
    node _T_26 = mux(_T_24, _T_25, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[3] <= _T_26 @[DispatchArbiter.scala 18:34]
    node _T_27 = lt(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_28 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 21:63]
    node _T_29 = mux(_T_27, _T_28, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[3] <= _T_29 @[DispatchArbiter.scala 20:35]
    node _T_30 = geq(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_31 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 19:64]
    node _T_32 = mux(_T_30, _T_31, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[2] <= _T_32 @[DispatchArbiter.scala 18:34]
    node _T_33 = lt(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_34 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 21:63]
    node _T_35 = mux(_T_33, _T_34, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[2] <= _T_35 @[DispatchArbiter.scala 20:35]
    node _T_36 = geq(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_37 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 19:64]
    node _T_38 = mux(_T_36, _T_37, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[1] <= _T_38 @[DispatchArbiter.scala 18:34]
    node _T_39 = lt(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_40 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 21:63]
    node _T_41 = mux(_T_39, _T_40, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[1] <= _T_41 @[DispatchArbiter.scala 20:35]
    node _T_42 = geq(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_43 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 19:64]
    node _T_44 = mux(_T_42, _T_43, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[0] <= _T_44 @[DispatchArbiter.scala 18:34]
    node _T_45 = lt(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_46 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 21:63]
    node _T_47 = mux(_T_45, _T_46, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[0] <= _T_47 @[DispatchArbiter.scala 20:35]
    wire afterPriorityChosen : UInt<3> @[DispatchArbiter.scala 24:33]
    afterPriorityChosen <= UInt<3>("h07") @[DispatchArbiter.scala 25:23]
    wire beforePriorityChosen : UInt<3> @[DispatchArbiter.scala 26:34]
    beforePriorityChosen <= UInt<3>("h07") @[DispatchArbiter.scala 27:24]
    when afterPriority[6] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h06") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[6] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<3>("h06") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[5] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h05") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[5] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<3>("h05") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[4] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h04") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[4] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<3>("h04") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[3] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[3] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[2] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[2] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[1] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[1] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[0] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[0] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    node _T_48 = or(UInt<1>("h00"), afterPriority[0]) @[DispatchArbiter.scala 37:54]
    node _T_49 = or(_T_48, afterPriority[1]) @[DispatchArbiter.scala 37:54]
    node _T_50 = or(_T_49, afterPriority[2]) @[DispatchArbiter.scala 37:54]
    node _T_51 = or(_T_50, afterPriority[3]) @[DispatchArbiter.scala 37:54]
    node _T_52 = or(_T_51, afterPriority[4]) @[DispatchArbiter.scala 37:54]
    node _T_53 = or(_T_52, afterPriority[5]) @[DispatchArbiter.scala 37:54]
    node _T_54 = or(_T_53, afterPriority[6]) @[DispatchArbiter.scala 37:54]
    node afterPriorityExist = or(_T_54, afterPriority[7]) @[DispatchArbiter.scala 37:54]
    node _T_55 = or(UInt<1>("h00"), beforePriority[0]) @[DispatchArbiter.scala 38:56]
    node _T_56 = or(_T_55, beforePriority[1]) @[DispatchArbiter.scala 38:56]
    node _T_57 = or(_T_56, beforePriority[2]) @[DispatchArbiter.scala 38:56]
    node _T_58 = or(_T_57, beforePriority[3]) @[DispatchArbiter.scala 38:56]
    node _T_59 = or(_T_58, beforePriority[4]) @[DispatchArbiter.scala 38:56]
    node _T_60 = or(_T_59, beforePriority[5]) @[DispatchArbiter.scala 38:56]
    node _T_61 = or(_T_60, beforePriority[6]) @[DispatchArbiter.scala 38:56]
    node beforePriorityExist = or(_T_61, beforePriority[7]) @[DispatchArbiter.scala 38:56]
    node _T_62 = or(afterPriorityExist, beforePriorityExist) @[DispatchArbiter.scala 40:44]
    io.hasChosen <= _T_62 @[DispatchArbiter.scala 40:22]
    node _T_63 = mux(afterPriorityExist, afterPriorityChosen, beforePriorityChosen) @[DispatchArbiter.scala 41:25]
    io.chosen <= _T_63 @[DispatchArbiter.scala 41:19]
    
  module DispatchArbiter_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip validity : UInt<24>, flip priority : UInt<5>, chosen : UInt<5>, hasChosen : UInt<1>}
    
    wire afterPriority : UInt<1>[24] @[DispatchArbiter.scala 14:33]
    wire beforePriority : UInt<1>[24] @[DispatchArbiter.scala 15:34]
    node _T = geq(UInt<5>("h017"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_1 = bits(io.validity, 23, 23) @[DispatchArbiter.scala 19:64]
    node _T_2 = mux(_T, _T_1, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[23] <= _T_2 @[DispatchArbiter.scala 18:34]
    node _T_3 = lt(UInt<5>("h017"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_4 = bits(io.validity, 23, 23) @[DispatchArbiter.scala 21:63]
    node _T_5 = mux(_T_3, _T_4, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[23] <= _T_5 @[DispatchArbiter.scala 20:35]
    node _T_6 = geq(UInt<5>("h016"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_7 = bits(io.validity, 22, 22) @[DispatchArbiter.scala 19:64]
    node _T_8 = mux(_T_6, _T_7, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[22] <= _T_8 @[DispatchArbiter.scala 18:34]
    node _T_9 = lt(UInt<5>("h016"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_10 = bits(io.validity, 22, 22) @[DispatchArbiter.scala 21:63]
    node _T_11 = mux(_T_9, _T_10, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[22] <= _T_11 @[DispatchArbiter.scala 20:35]
    node _T_12 = geq(UInt<5>("h015"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_13 = bits(io.validity, 21, 21) @[DispatchArbiter.scala 19:64]
    node _T_14 = mux(_T_12, _T_13, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[21] <= _T_14 @[DispatchArbiter.scala 18:34]
    node _T_15 = lt(UInt<5>("h015"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_16 = bits(io.validity, 21, 21) @[DispatchArbiter.scala 21:63]
    node _T_17 = mux(_T_15, _T_16, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[21] <= _T_17 @[DispatchArbiter.scala 20:35]
    node _T_18 = geq(UInt<5>("h014"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_19 = bits(io.validity, 20, 20) @[DispatchArbiter.scala 19:64]
    node _T_20 = mux(_T_18, _T_19, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[20] <= _T_20 @[DispatchArbiter.scala 18:34]
    node _T_21 = lt(UInt<5>("h014"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_22 = bits(io.validity, 20, 20) @[DispatchArbiter.scala 21:63]
    node _T_23 = mux(_T_21, _T_22, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[20] <= _T_23 @[DispatchArbiter.scala 20:35]
    node _T_24 = geq(UInt<5>("h013"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_25 = bits(io.validity, 19, 19) @[DispatchArbiter.scala 19:64]
    node _T_26 = mux(_T_24, _T_25, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[19] <= _T_26 @[DispatchArbiter.scala 18:34]
    node _T_27 = lt(UInt<5>("h013"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_28 = bits(io.validity, 19, 19) @[DispatchArbiter.scala 21:63]
    node _T_29 = mux(_T_27, _T_28, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[19] <= _T_29 @[DispatchArbiter.scala 20:35]
    node _T_30 = geq(UInt<5>("h012"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_31 = bits(io.validity, 18, 18) @[DispatchArbiter.scala 19:64]
    node _T_32 = mux(_T_30, _T_31, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[18] <= _T_32 @[DispatchArbiter.scala 18:34]
    node _T_33 = lt(UInt<5>("h012"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_34 = bits(io.validity, 18, 18) @[DispatchArbiter.scala 21:63]
    node _T_35 = mux(_T_33, _T_34, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[18] <= _T_35 @[DispatchArbiter.scala 20:35]
    node _T_36 = geq(UInt<5>("h011"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_37 = bits(io.validity, 17, 17) @[DispatchArbiter.scala 19:64]
    node _T_38 = mux(_T_36, _T_37, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[17] <= _T_38 @[DispatchArbiter.scala 18:34]
    node _T_39 = lt(UInt<5>("h011"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_40 = bits(io.validity, 17, 17) @[DispatchArbiter.scala 21:63]
    node _T_41 = mux(_T_39, _T_40, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[17] <= _T_41 @[DispatchArbiter.scala 20:35]
    node _T_42 = geq(UInt<5>("h010"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_43 = bits(io.validity, 16, 16) @[DispatchArbiter.scala 19:64]
    node _T_44 = mux(_T_42, _T_43, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[16] <= _T_44 @[DispatchArbiter.scala 18:34]
    node _T_45 = lt(UInt<5>("h010"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_46 = bits(io.validity, 16, 16) @[DispatchArbiter.scala 21:63]
    node _T_47 = mux(_T_45, _T_46, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[16] <= _T_47 @[DispatchArbiter.scala 20:35]
    node _T_48 = geq(UInt<4>("h0f"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_49 = bits(io.validity, 15, 15) @[DispatchArbiter.scala 19:64]
    node _T_50 = mux(_T_48, _T_49, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[15] <= _T_50 @[DispatchArbiter.scala 18:34]
    node _T_51 = lt(UInt<4>("h0f"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_52 = bits(io.validity, 15, 15) @[DispatchArbiter.scala 21:63]
    node _T_53 = mux(_T_51, _T_52, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[15] <= _T_53 @[DispatchArbiter.scala 20:35]
    node _T_54 = geq(UInt<4>("h0e"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_55 = bits(io.validity, 14, 14) @[DispatchArbiter.scala 19:64]
    node _T_56 = mux(_T_54, _T_55, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[14] <= _T_56 @[DispatchArbiter.scala 18:34]
    node _T_57 = lt(UInt<4>("h0e"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_58 = bits(io.validity, 14, 14) @[DispatchArbiter.scala 21:63]
    node _T_59 = mux(_T_57, _T_58, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[14] <= _T_59 @[DispatchArbiter.scala 20:35]
    node _T_60 = geq(UInt<4>("h0d"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_61 = bits(io.validity, 13, 13) @[DispatchArbiter.scala 19:64]
    node _T_62 = mux(_T_60, _T_61, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[13] <= _T_62 @[DispatchArbiter.scala 18:34]
    node _T_63 = lt(UInt<4>("h0d"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_64 = bits(io.validity, 13, 13) @[DispatchArbiter.scala 21:63]
    node _T_65 = mux(_T_63, _T_64, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[13] <= _T_65 @[DispatchArbiter.scala 20:35]
    node _T_66 = geq(UInt<4>("h0c"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_67 = bits(io.validity, 12, 12) @[DispatchArbiter.scala 19:64]
    node _T_68 = mux(_T_66, _T_67, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[12] <= _T_68 @[DispatchArbiter.scala 18:34]
    node _T_69 = lt(UInt<4>("h0c"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_70 = bits(io.validity, 12, 12) @[DispatchArbiter.scala 21:63]
    node _T_71 = mux(_T_69, _T_70, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[12] <= _T_71 @[DispatchArbiter.scala 20:35]
    node _T_72 = geq(UInt<4>("h0b"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_73 = bits(io.validity, 11, 11) @[DispatchArbiter.scala 19:64]
    node _T_74 = mux(_T_72, _T_73, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[11] <= _T_74 @[DispatchArbiter.scala 18:34]
    node _T_75 = lt(UInt<4>("h0b"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_76 = bits(io.validity, 11, 11) @[DispatchArbiter.scala 21:63]
    node _T_77 = mux(_T_75, _T_76, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[11] <= _T_77 @[DispatchArbiter.scala 20:35]
    node _T_78 = geq(UInt<4>("h0a"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_79 = bits(io.validity, 10, 10) @[DispatchArbiter.scala 19:64]
    node _T_80 = mux(_T_78, _T_79, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[10] <= _T_80 @[DispatchArbiter.scala 18:34]
    node _T_81 = lt(UInt<4>("h0a"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_82 = bits(io.validity, 10, 10) @[DispatchArbiter.scala 21:63]
    node _T_83 = mux(_T_81, _T_82, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[10] <= _T_83 @[DispatchArbiter.scala 20:35]
    node _T_84 = geq(UInt<4>("h09"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_85 = bits(io.validity, 9, 9) @[DispatchArbiter.scala 19:64]
    node _T_86 = mux(_T_84, _T_85, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[9] <= _T_86 @[DispatchArbiter.scala 18:34]
    node _T_87 = lt(UInt<4>("h09"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_88 = bits(io.validity, 9, 9) @[DispatchArbiter.scala 21:63]
    node _T_89 = mux(_T_87, _T_88, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[9] <= _T_89 @[DispatchArbiter.scala 20:35]
    node _T_90 = geq(UInt<4>("h08"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_91 = bits(io.validity, 8, 8) @[DispatchArbiter.scala 19:64]
    node _T_92 = mux(_T_90, _T_91, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[8] <= _T_92 @[DispatchArbiter.scala 18:34]
    node _T_93 = lt(UInt<4>("h08"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_94 = bits(io.validity, 8, 8) @[DispatchArbiter.scala 21:63]
    node _T_95 = mux(_T_93, _T_94, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[8] <= _T_95 @[DispatchArbiter.scala 20:35]
    node _T_96 = geq(UInt<3>("h07"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_97 = bits(io.validity, 7, 7) @[DispatchArbiter.scala 19:64]
    node _T_98 = mux(_T_96, _T_97, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[7] <= _T_98 @[DispatchArbiter.scala 18:34]
    node _T_99 = lt(UInt<3>("h07"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_100 = bits(io.validity, 7, 7) @[DispatchArbiter.scala 21:63]
    node _T_101 = mux(_T_99, _T_100, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[7] <= _T_101 @[DispatchArbiter.scala 20:35]
    node _T_102 = geq(UInt<3>("h06"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_103 = bits(io.validity, 6, 6) @[DispatchArbiter.scala 19:64]
    node _T_104 = mux(_T_102, _T_103, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[6] <= _T_104 @[DispatchArbiter.scala 18:34]
    node _T_105 = lt(UInt<3>("h06"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_106 = bits(io.validity, 6, 6) @[DispatchArbiter.scala 21:63]
    node _T_107 = mux(_T_105, _T_106, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[6] <= _T_107 @[DispatchArbiter.scala 20:35]
    node _T_108 = geq(UInt<3>("h05"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_109 = bits(io.validity, 5, 5) @[DispatchArbiter.scala 19:64]
    node _T_110 = mux(_T_108, _T_109, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[5] <= _T_110 @[DispatchArbiter.scala 18:34]
    node _T_111 = lt(UInt<3>("h05"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_112 = bits(io.validity, 5, 5) @[DispatchArbiter.scala 21:63]
    node _T_113 = mux(_T_111, _T_112, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[5] <= _T_113 @[DispatchArbiter.scala 20:35]
    node _T_114 = geq(UInt<3>("h04"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_115 = bits(io.validity, 4, 4) @[DispatchArbiter.scala 19:64]
    node _T_116 = mux(_T_114, _T_115, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[4] <= _T_116 @[DispatchArbiter.scala 18:34]
    node _T_117 = lt(UInt<3>("h04"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_118 = bits(io.validity, 4, 4) @[DispatchArbiter.scala 21:63]
    node _T_119 = mux(_T_117, _T_118, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[4] <= _T_119 @[DispatchArbiter.scala 20:35]
    node _T_120 = geq(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_121 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 19:64]
    node _T_122 = mux(_T_120, _T_121, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[3] <= _T_122 @[DispatchArbiter.scala 18:34]
    node _T_123 = lt(UInt<2>("h03"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_124 = bits(io.validity, 3, 3) @[DispatchArbiter.scala 21:63]
    node _T_125 = mux(_T_123, _T_124, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[3] <= _T_125 @[DispatchArbiter.scala 20:35]
    node _T_126 = geq(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_127 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 19:64]
    node _T_128 = mux(_T_126, _T_127, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[2] <= _T_128 @[DispatchArbiter.scala 18:34]
    node _T_129 = lt(UInt<2>("h02"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_130 = bits(io.validity, 2, 2) @[DispatchArbiter.scala 21:63]
    node _T_131 = mux(_T_129, _T_130, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[2] <= _T_131 @[DispatchArbiter.scala 20:35]
    node _T_132 = geq(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_133 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 19:64]
    node _T_134 = mux(_T_132, _T_133, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[1] <= _T_134 @[DispatchArbiter.scala 18:34]
    node _T_135 = lt(UInt<1>("h01"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_136 = bits(io.validity, 1, 1) @[DispatchArbiter.scala 21:63]
    node _T_137 = mux(_T_135, _T_136, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[1] <= _T_137 @[DispatchArbiter.scala 20:35]
    node _T_138 = geq(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 19:37]
    node _T_139 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 19:64]
    node _T_140 = mux(_T_138, _T_139, UInt<1>("h00")) @[DispatchArbiter.scala 19:28]
    afterPriority[0] <= _T_140 @[DispatchArbiter.scala 18:34]
    node _T_141 = lt(UInt<1>("h00"), io.priority) @[DispatchArbiter.scala 21:37]
    node _T_142 = bits(io.validity, 0, 0) @[DispatchArbiter.scala 21:63]
    node _T_143 = mux(_T_141, _T_142, UInt<1>("h00")) @[DispatchArbiter.scala 21:28]
    beforePriority[0] <= _T_143 @[DispatchArbiter.scala 20:35]
    wire afterPriorityChosen : UInt<5> @[DispatchArbiter.scala 24:33]
    afterPriorityChosen <= UInt<5>("h017") @[DispatchArbiter.scala 25:23]
    wire beforePriorityChosen : UInt<5> @[DispatchArbiter.scala 26:34]
    beforePriorityChosen <= UInt<5>("h017") @[DispatchArbiter.scala 27:24]
    when afterPriority[22] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h016") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[22] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<5>("h016") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[21] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h015") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[21] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<5>("h015") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[20] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h014") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[20] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<5>("h014") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[19] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h013") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[19] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<5>("h013") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[18] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h012") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[18] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<5>("h012") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[17] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h011") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[17] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<5>("h011") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[16] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<5>("h010") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[16] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<5>("h010") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[15] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0f") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[15] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<4>("h0f") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[14] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0e") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[14] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<4>("h0e") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[13] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0d") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[13] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<4>("h0d") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[12] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0c") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[12] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<4>("h0c") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[11] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0b") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[11] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<4>("h0b") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[10] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h0a") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[10] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<4>("h0a") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[9] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h09") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[9] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<4>("h09") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[8] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<4>("h08") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[8] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<4>("h08") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[7] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h07") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[7] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<3>("h07") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[6] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h06") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[6] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<3>("h06") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[5] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h05") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[5] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<3>("h05") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[4] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<3>("h04") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[4] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<3>("h04") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[3] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[3] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<2>("h03") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[2] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[2] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<2>("h02") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[1] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[1] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<1>("h01") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    when afterPriority[0] : @[DispatchArbiter.scala 30:29]
      afterPriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 31:27]
      skip @[DispatchArbiter.scala 30:29]
    when beforePriority[0] : @[DispatchArbiter.scala 33:40]
      beforePriorityChosen <= UInt<1>("h00") @[DispatchArbiter.scala 34:46]
      skip @[DispatchArbiter.scala 33:40]
    node _T_144 = or(UInt<1>("h00"), afterPriority[0]) @[DispatchArbiter.scala 37:54]
    node _T_145 = or(_T_144, afterPriority[1]) @[DispatchArbiter.scala 37:54]
    node _T_146 = or(_T_145, afterPriority[2]) @[DispatchArbiter.scala 37:54]
    node _T_147 = or(_T_146, afterPriority[3]) @[DispatchArbiter.scala 37:54]
    node _T_148 = or(_T_147, afterPriority[4]) @[DispatchArbiter.scala 37:54]
    node _T_149 = or(_T_148, afterPriority[5]) @[DispatchArbiter.scala 37:54]
    node _T_150 = or(_T_149, afterPriority[6]) @[DispatchArbiter.scala 37:54]
    node _T_151 = or(_T_150, afterPriority[7]) @[DispatchArbiter.scala 37:54]
    node _T_152 = or(_T_151, afterPriority[8]) @[DispatchArbiter.scala 37:54]
    node _T_153 = or(_T_152, afterPriority[9]) @[DispatchArbiter.scala 37:54]
    node _T_154 = or(_T_153, afterPriority[10]) @[DispatchArbiter.scala 37:54]
    node _T_155 = or(_T_154, afterPriority[11]) @[DispatchArbiter.scala 37:54]
    node _T_156 = or(_T_155, afterPriority[12]) @[DispatchArbiter.scala 37:54]
    node _T_157 = or(_T_156, afterPriority[13]) @[DispatchArbiter.scala 37:54]
    node _T_158 = or(_T_157, afterPriority[14]) @[DispatchArbiter.scala 37:54]
    node _T_159 = or(_T_158, afterPriority[15]) @[DispatchArbiter.scala 37:54]
    node _T_160 = or(_T_159, afterPriority[16]) @[DispatchArbiter.scala 37:54]
    node _T_161 = or(_T_160, afterPriority[17]) @[DispatchArbiter.scala 37:54]
    node _T_162 = or(_T_161, afterPriority[18]) @[DispatchArbiter.scala 37:54]
    node _T_163 = or(_T_162, afterPriority[19]) @[DispatchArbiter.scala 37:54]
    node _T_164 = or(_T_163, afterPriority[20]) @[DispatchArbiter.scala 37:54]
    node _T_165 = or(_T_164, afterPriority[21]) @[DispatchArbiter.scala 37:54]
    node _T_166 = or(_T_165, afterPriority[22]) @[DispatchArbiter.scala 37:54]
    node afterPriorityExist = or(_T_166, afterPriority[23]) @[DispatchArbiter.scala 37:54]
    node _T_167 = or(UInt<1>("h00"), beforePriority[0]) @[DispatchArbiter.scala 38:56]
    node _T_168 = or(_T_167, beforePriority[1]) @[DispatchArbiter.scala 38:56]
    node _T_169 = or(_T_168, beforePriority[2]) @[DispatchArbiter.scala 38:56]
    node _T_170 = or(_T_169, beforePriority[3]) @[DispatchArbiter.scala 38:56]
    node _T_171 = or(_T_170, beforePriority[4]) @[DispatchArbiter.scala 38:56]
    node _T_172 = or(_T_171, beforePriority[5]) @[DispatchArbiter.scala 38:56]
    node _T_173 = or(_T_172, beforePriority[6]) @[DispatchArbiter.scala 38:56]
    node _T_174 = or(_T_173, beforePriority[7]) @[DispatchArbiter.scala 38:56]
    node _T_175 = or(_T_174, beforePriority[8]) @[DispatchArbiter.scala 38:56]
    node _T_176 = or(_T_175, beforePriority[9]) @[DispatchArbiter.scala 38:56]
    node _T_177 = or(_T_176, beforePriority[10]) @[DispatchArbiter.scala 38:56]
    node _T_178 = or(_T_177, beforePriority[11]) @[DispatchArbiter.scala 38:56]
    node _T_179 = or(_T_178, beforePriority[12]) @[DispatchArbiter.scala 38:56]
    node _T_180 = or(_T_179, beforePriority[13]) @[DispatchArbiter.scala 38:56]
    node _T_181 = or(_T_180, beforePriority[14]) @[DispatchArbiter.scala 38:56]
    node _T_182 = or(_T_181, beforePriority[15]) @[DispatchArbiter.scala 38:56]
    node _T_183 = or(_T_182, beforePriority[16]) @[DispatchArbiter.scala 38:56]
    node _T_184 = or(_T_183, beforePriority[17]) @[DispatchArbiter.scala 38:56]
    node _T_185 = or(_T_184, beforePriority[18]) @[DispatchArbiter.scala 38:56]
    node _T_186 = or(_T_185, beforePriority[19]) @[DispatchArbiter.scala 38:56]
    node _T_187 = or(_T_186, beforePriority[20]) @[DispatchArbiter.scala 38:56]
    node _T_188 = or(_T_187, beforePriority[21]) @[DispatchArbiter.scala 38:56]
    node _T_189 = or(_T_188, beforePriority[22]) @[DispatchArbiter.scala 38:56]
    node beforePriorityExist = or(_T_189, beforePriority[23]) @[DispatchArbiter.scala 38:56]
    node _T_190 = or(afterPriorityExist, beforePriorityExist) @[DispatchArbiter.scala 40:44]
    io.hasChosen <= _T_190 @[DispatchArbiter.scala 40:22]
    node _T_191 = mux(afterPriorityExist, afterPriorityChosen, beforePriorityChosen) @[DispatchArbiter.scala 41:25]
    io.chosen <= _T_191 @[DispatchArbiter.scala 41:19]
    
  module POSIT_Locality : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {operands : {value : UInt<32>, mode : UInt<2>}[3], inst : UInt<3>, mode : UInt<2>, wr_addr : UInt<8>}}, mem_write : {flip ready : UInt<1>, valid : UInt<1>, bits : {result : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}, wr_addr : UInt<8>}}, mem_read : {req_valid : UInt<1>, req_addr : UInt<42>, req_tag : UInt<16>, flip data : UInt<512>, flip resp_valid : UInt<1>, flip resp_tag : UInt<14>}}
    
    inst pe of Posit @[POSIT_Locality.scala 12:24]
    pe.clock <= clock
    pe.reset <= reset
    wire _T : {entries : {operands : {value : UInt<32>, mode : UInt<2>}[3], completed : UInt<1>, valid : UInt<1>, dispatched : UInt<1>, written : UInt<1>, wr_addr : UInt<8>, request : {operands : {value : UInt<32>, mode : UInt<2>}[3], inst : UInt<3>, mode : UInt<2>, wr_addr : UInt<8>, inFetch : UInt<1>[3]}, result : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}}[8]} @[POSIT_Locality.scala 16:57]
    _T.entries[0].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].written <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].valid <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].completed <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[0].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].written <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].valid <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].completed <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[1].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].written <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].valid <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].completed <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[2].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].written <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].valid <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].completed <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[3].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].written <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].valid <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].completed <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[4].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].written <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].valid <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].completed <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[5].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].written <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].valid <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].completed <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[6].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].result.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].result.gt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].result.eq <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].result.lt <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].result.out <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].result.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].result.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].request.inFetch[0] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].request.inFetch[1] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].request.inFetch[2] <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].request.wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].request.mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].request.inst <= UInt<3>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].request.operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].request.operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].request.operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].request.operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].request.operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].request.operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].wr_addr <= UInt<8>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].written <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].valid <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].completed <= UInt<1>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].operands[0].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].operands[0].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].operands[1].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].operands[1].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].operands[2].mode <= UInt<2>("h00") @[POSIT_Locality.scala 16:57]
    _T.entries[7].operands[2].value <= UInt<32>("h00") @[POSIT_Locality.scala 16:57]
    reg rb : {entries : {operands : {value : UInt<32>, mode : UInt<2>}[3], completed : UInt<1>, valid : UInt<1>, dispatched : UInt<1>, written : UInt<1>, wr_addr : UInt<8>, request : {operands : {value : UInt<32>, mode : UInt<2>}[3], inst : UInt<3>, mode : UInt<2>, wr_addr : UInt<8>, inFetch : UInt<1>[3]}, result : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>}}[8]}, clock with : (reset => (reset, _T)) @[POSIT_Locality.scala 16:25]
    wire new_input_log : UInt<1> @[POSIT_Locality.scala 19:33]
    node _T_1 = bits(io.request.bits.wr_addr, 2, 0)
    node _T_2 = bits(io.request.bits.wr_addr, 2, 0)
    node _T_3 = eq(rb.entries[_T_2].valid, UInt<1>("h00")) @[POSIT_Locality.scala 21:80]
    node _T_4 = or(rb.entries[_T_1].written, _T_3) @[POSIT_Locality.scala 21:77]
    node _T_5 = and(io.request.valid, _T_4) @[POSIT_Locality.scala 21:43]
    new_input_log <= _T_5 @[POSIT_Locality.scala 21:23]
    node _T_6 = bits(io.request.bits.wr_addr, 2, 0)
    node _T_7 = bits(io.request.bits.wr_addr, 2, 0)
    node _T_8 = eq(rb.entries[_T_7].valid, UInt<1>("h00")) @[POSIT_Locality.scala 24:63]
    node _T_9 = or(rb.entries[_T_6].written, _T_8) @[POSIT_Locality.scala 24:59]
    io.request.ready <= _T_9 @[POSIT_Locality.scala 24:26]
    when new_input_log : @[POSIT_Locality.scala 25:28]
      node _T_10 = bits(reset, 0, 0) @[POSIT_Locality.scala 26:23]
      node _T_11 = eq(_T_10, UInt<1>("h00")) @[POSIT_Locality.scala 26:23]
      when _T_11 : @[POSIT_Locality.scala 26:23]
        printf(clock, UInt<1>(1), "written new entry\n") @[POSIT_Locality.scala 26:23]
        skip @[POSIT_Locality.scala 26:23]
      node _T_12 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_12].completed <= UInt<1>("h00") @[POSIT_Locality.scala 27:49]
      node _T_13 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_13].valid <= UInt<1>("h01") @[POSIT_Locality.scala 28:45]
      node _T_14 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_14].written <= UInt<1>("h00") @[POSIT_Locality.scala 29:47]
      node _T_15 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_15].wr_addr <= io.request.bits.wr_addr @[POSIT_Locality.scala 30:47]
      node _T_16 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_16].request.inst <= io.request.bits.inst @[POSIT_Locality.scala 31:52]
      node _T_17 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_17].request.mode <= io.request.bits.mode @[POSIT_Locality.scala 32:52]
      node _T_18 = bits(reset, 0, 0) @[POSIT_Locality.scala 34:31]
      node _T_19 = eq(_T_18, UInt<1>("h00")) @[POSIT_Locality.scala 34:31]
      when _T_19 : @[POSIT_Locality.scala 34:31]
        printf(clock, UInt<1>(1), "op%d: mode: %d value: %d\n", UInt<1>("h00"), io.request.bits.operands[0].mode, io.request.bits.operands[0].value) @[POSIT_Locality.scala 34:31]
        skip @[POSIT_Locality.scala 34:31]
      node _T_20 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_20].request.operands[0].value <= io.request.bits.operands[0].value @[POSIT_Locality.scala 35:73]
      node _T_21 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_21].request.operands[0].mode <= io.request.bits.operands[0].mode @[POSIT_Locality.scala 36:72]
      node _T_22 = bits(reset, 0, 0) @[POSIT_Locality.scala 34:31]
      node _T_23 = eq(_T_22, UInt<1>("h00")) @[POSIT_Locality.scala 34:31]
      when _T_23 : @[POSIT_Locality.scala 34:31]
        printf(clock, UInt<1>(1), "op%d: mode: %d value: %d\n", UInt<1>("h01"), io.request.bits.operands[1].mode, io.request.bits.operands[1].value) @[POSIT_Locality.scala 34:31]
        skip @[POSIT_Locality.scala 34:31]
      node _T_24 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_24].request.operands[1].value <= io.request.bits.operands[1].value @[POSIT_Locality.scala 35:73]
      node _T_25 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_25].request.operands[1].mode <= io.request.bits.operands[1].mode @[POSIT_Locality.scala 36:72]
      node _T_26 = bits(reset, 0, 0) @[POSIT_Locality.scala 34:31]
      node _T_27 = eq(_T_26, UInt<1>("h00")) @[POSIT_Locality.scala 34:31]
      when _T_27 : @[POSIT_Locality.scala 34:31]
        printf(clock, UInt<1>(1), "op%d: mode: %d value: %d\n", UInt<2>("h02"), io.request.bits.operands[2].mode, io.request.bits.operands[2].value) @[POSIT_Locality.scala 34:31]
        skip @[POSIT_Locality.scala 34:31]
      node _T_28 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_28].request.operands[2].value <= io.request.bits.operands[2].value @[POSIT_Locality.scala 35:73]
      node _T_29 = bits(io.request.bits.wr_addr, 2, 0)
      rb.entries[_T_29].request.operands[2].mode <= io.request.bits.operands[2].mode @[POSIT_Locality.scala 36:72]
      node _T_30 = bits(io.request.bits.wr_addr, 2, 0)
      wire _T_31 : {isZero : UInt<1>, isNaR : UInt<1>, out : UInt<32>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptions : UInt<5>} @[POSIT_Locality.scala 38:61]
      _T_31.exceptions <= UInt<5>("h00") @[POSIT_Locality.scala 38:61]
      _T_31.gt <= UInt<1>("h00") @[POSIT_Locality.scala 38:61]
      _T_31.eq <= UInt<1>("h00") @[POSIT_Locality.scala 38:61]
      _T_31.lt <= UInt<1>("h00") @[POSIT_Locality.scala 38:61]
      _T_31.out <= UInt<32>("h00") @[POSIT_Locality.scala 38:61]
      _T_31.isNaR <= UInt<1>("h00") @[POSIT_Locality.scala 38:61]
      _T_31.isZero <= UInt<1>("h00") @[POSIT_Locality.scala 38:61]
      rb.entries[_T_30].result.exceptions <= _T_31.exceptions @[POSIT_Locality.scala 38:46]
      rb.entries[_T_30].result.gt <= _T_31.gt @[POSIT_Locality.scala 38:46]
      rb.entries[_T_30].result.eq <= _T_31.eq @[POSIT_Locality.scala 38:46]
      rb.entries[_T_30].result.lt <= _T_31.lt @[POSIT_Locality.scala 38:46]
      rb.entries[_T_30].result.out <= _T_31.out @[POSIT_Locality.scala 38:46]
      rb.entries[_T_30].result.isNaR <= _T_31.isNaR @[POSIT_Locality.scala 38:46]
      rb.entries[_T_30].result.isZero <= _T_31.isZero @[POSIT_Locality.scala 38:46]
      skip @[POSIT_Locality.scala 25:28]
    wire wbCountOn : UInt<1> @[POSIT_Locality.scala 43:29]
    reg value : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Counter.scala 29:33]
    wire _T_32 : UInt<1>
    _T_32 <= UInt<1>("h00")
    when wbCountOn : @[Counter.scala 67:17]
      node _T_33 = eq(value, UInt<3>("h07")) @[Counter.scala 38:24]
      node _T_34 = add(value, UInt<1>("h01")) @[Counter.scala 39:22]
      node _T_35 = tail(_T_34, 1) @[Counter.scala 39:22]
      value <= _T_35 @[Counter.scala 39:13]
      _T_32 <= _T_33 @[Counter.scala 67:24]
      skip @[Counter.scala 67:17]
    node _T_36 = and(io.mem_write.ready, rb.entries[value].completed) @[POSIT_Locality.scala 45:33]
    node _T_37 = not(rb.entries[value].written) @[POSIT_Locality.scala 45:72]
    node _T_38 = and(_T_36, _T_37) @[POSIT_Locality.scala 45:68]
    when _T_38 : @[POSIT_Locality.scala 45:104]
      wbCountOn <= UInt<1>("h01") @[POSIT_Locality.scala 46:27]
      rb.entries[value].written <= UInt<1>("h01") @[POSIT_Locality.scala 47:47]
      skip @[POSIT_Locality.scala 45:104]
    else : @[POSIT_Locality.scala 48:20]
      wbCountOn <= UInt<1>("h00") @[POSIT_Locality.scala 49:27]
      skip @[POSIT_Locality.scala 48:20]
    node _T_39 = not(rb.entries[value].written) @[POSIT_Locality.scala 53:67]
    node _T_40 = and(rb.entries[value].completed, _T_39) @[POSIT_Locality.scala 53:63]
    io.mem_write.valid <= _T_40 @[POSIT_Locality.scala 53:28]
    io.mem_write.bits.wr_addr <= rb.entries[value].wr_addr @[POSIT_Locality.scala 54:35]
    io.mem_write.bits.result.exceptions <= rb.entries[value].result.exceptions @[POSIT_Locality.scala 55:34]
    io.mem_write.bits.result.gt <= rb.entries[value].result.gt @[POSIT_Locality.scala 55:34]
    io.mem_write.bits.result.eq <= rb.entries[value].result.eq @[POSIT_Locality.scala 55:34]
    io.mem_write.bits.result.lt <= rb.entries[value].result.lt @[POSIT_Locality.scala 55:34]
    io.mem_write.bits.result.out <= rb.entries[value].result.out @[POSIT_Locality.scala 55:34]
    io.mem_write.bits.result.isNaR <= rb.entries[value].result.isNaR @[POSIT_Locality.scala 55:34]
    io.mem_write.bits.result.isZero <= rb.entries[value].result.isZero @[POSIT_Locality.scala 55:34]
    inst dispatchArb of DispatchArbiter @[POSIT_Locality.scala 59:33]
    dispatchArb.clock <= clock
    dispatchArb.reset <= reset
    wire opsValidVec : UInt<1>[8] @[POSIT_Locality.scala 64:31]
    wire singleOpValidVec : UInt<1>[24] @[POSIT_Locality.scala 65:36]
    node _T_41 = eq(rb.entries[0].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:52]
    singleOpValidVec[0] <= _T_41 @[POSIT_Locality.scala 68:49]
    node _T_42 = eq(rb.entries[0].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_43 = and(singleOpValidVec[0], _T_42) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[1] <= _T_43 @[POSIT_Locality.scala 70:58]
    node _T_44 = eq(rb.entries[0].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_45 = and(singleOpValidVec[1], _T_44) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[2] <= _T_45 @[POSIT_Locality.scala 70:58]
    opsValidVec[0] <= singleOpValidVec[2] @[POSIT_Locality.scala 72:32]
    node _T_46 = eq(rb.entries[1].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:52]
    singleOpValidVec[3] <= _T_46 @[POSIT_Locality.scala 68:49]
    node _T_47 = eq(rb.entries[1].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_48 = and(singleOpValidVec[3], _T_47) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[4] <= _T_48 @[POSIT_Locality.scala 70:58]
    node _T_49 = eq(rb.entries[1].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_50 = and(singleOpValidVec[4], _T_49) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[5] <= _T_50 @[POSIT_Locality.scala 70:58]
    opsValidVec[1] <= singleOpValidVec[5] @[POSIT_Locality.scala 72:32]
    node _T_51 = eq(rb.entries[2].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:52]
    singleOpValidVec[6] <= _T_51 @[POSIT_Locality.scala 68:49]
    node _T_52 = eq(rb.entries[2].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_53 = and(singleOpValidVec[6], _T_52) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[7] <= _T_53 @[POSIT_Locality.scala 70:58]
    node _T_54 = eq(rb.entries[2].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_55 = and(singleOpValidVec[7], _T_54) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[8] <= _T_55 @[POSIT_Locality.scala 70:58]
    opsValidVec[2] <= singleOpValidVec[8] @[POSIT_Locality.scala 72:32]
    node _T_56 = eq(rb.entries[3].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:52]
    singleOpValidVec[9] <= _T_56 @[POSIT_Locality.scala 68:49]
    node _T_57 = eq(rb.entries[3].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_58 = and(singleOpValidVec[9], _T_57) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[10] <= _T_58 @[POSIT_Locality.scala 70:58]
    node _T_59 = eq(rb.entries[3].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_60 = and(singleOpValidVec[10], _T_59) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[11] <= _T_60 @[POSIT_Locality.scala 70:58]
    opsValidVec[3] <= singleOpValidVec[11] @[POSIT_Locality.scala 72:32]
    node _T_61 = eq(rb.entries[4].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:52]
    singleOpValidVec[12] <= _T_61 @[POSIT_Locality.scala 68:49]
    node _T_62 = eq(rb.entries[4].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_63 = and(singleOpValidVec[12], _T_62) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[13] <= _T_63 @[POSIT_Locality.scala 70:58]
    node _T_64 = eq(rb.entries[4].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_65 = and(singleOpValidVec[13], _T_64) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[14] <= _T_65 @[POSIT_Locality.scala 70:58]
    opsValidVec[4] <= singleOpValidVec[14] @[POSIT_Locality.scala 72:32]
    node _T_66 = eq(rb.entries[5].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:52]
    singleOpValidVec[15] <= _T_66 @[POSIT_Locality.scala 68:49]
    node _T_67 = eq(rb.entries[5].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_68 = and(singleOpValidVec[15], _T_67) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[16] <= _T_68 @[POSIT_Locality.scala 70:58]
    node _T_69 = eq(rb.entries[5].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_70 = and(singleOpValidVec[16], _T_69) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[17] <= _T_70 @[POSIT_Locality.scala 70:58]
    opsValidVec[5] <= singleOpValidVec[17] @[POSIT_Locality.scala 72:32]
    node _T_71 = eq(rb.entries[6].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:52]
    singleOpValidVec[18] <= _T_71 @[POSIT_Locality.scala 68:49]
    node _T_72 = eq(rb.entries[6].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_73 = and(singleOpValidVec[18], _T_72) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[19] <= _T_73 @[POSIT_Locality.scala 70:58]
    node _T_74 = eq(rb.entries[6].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_75 = and(singleOpValidVec[19], _T_74) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[20] <= _T_75 @[POSIT_Locality.scala 70:58]
    opsValidVec[6] <= singleOpValidVec[20] @[POSIT_Locality.scala 72:32]
    node _T_76 = eq(rb.entries[7].request.operands[0].mode, UInt<1>("h00")) @[POSIT_Locality.scala 68:52]
    singleOpValidVec[21] <= _T_76 @[POSIT_Locality.scala 68:49]
    node _T_77 = eq(rb.entries[7].request.operands[1].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_78 = and(singleOpValidVec[21], _T_77) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[22] <= _T_78 @[POSIT_Locality.scala 70:58]
    node _T_79 = eq(rb.entries[7].request.operands[2].mode, UInt<1>("h00")) @[POSIT_Locality.scala 70:139]
    node _T_80 = and(singleOpValidVec[22], _T_79) @[POSIT_Locality.scala 70:96]
    singleOpValidVec[23] <= _T_80 @[POSIT_Locality.scala 70:58]
    opsValidVec[7] <= singleOpValidVec[23] @[POSIT_Locality.scala 72:32]
    wire waitingForDispatchVec : UInt<1>[8] @[POSIT_Locality.scala 74:41]
    node _T_81 = and(opsValidVec[0], rb.entries[0].valid) @[POSIT_Locality.scala 76:60]
    node _T_82 = eq(rb.entries[0].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 76:85]
    node _T_83 = and(_T_81, _T_82) @[POSIT_Locality.scala 76:82]
    waitingForDispatchVec[0] <= _T_83 @[POSIT_Locality.scala 76:42]
    node _T_84 = and(opsValidVec[1], rb.entries[1].valid) @[POSIT_Locality.scala 76:60]
    node _T_85 = eq(rb.entries[1].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 76:85]
    node _T_86 = and(_T_84, _T_85) @[POSIT_Locality.scala 76:82]
    waitingForDispatchVec[1] <= _T_86 @[POSIT_Locality.scala 76:42]
    node _T_87 = and(opsValidVec[2], rb.entries[2].valid) @[POSIT_Locality.scala 76:60]
    node _T_88 = eq(rb.entries[2].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 76:85]
    node _T_89 = and(_T_87, _T_88) @[POSIT_Locality.scala 76:82]
    waitingForDispatchVec[2] <= _T_89 @[POSIT_Locality.scala 76:42]
    node _T_90 = and(opsValidVec[3], rb.entries[3].valid) @[POSIT_Locality.scala 76:60]
    node _T_91 = eq(rb.entries[3].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 76:85]
    node _T_92 = and(_T_90, _T_91) @[POSIT_Locality.scala 76:82]
    waitingForDispatchVec[3] <= _T_92 @[POSIT_Locality.scala 76:42]
    node _T_93 = and(opsValidVec[4], rb.entries[4].valid) @[POSIT_Locality.scala 76:60]
    node _T_94 = eq(rb.entries[4].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 76:85]
    node _T_95 = and(_T_93, _T_94) @[POSIT_Locality.scala 76:82]
    waitingForDispatchVec[4] <= _T_95 @[POSIT_Locality.scala 76:42]
    node _T_96 = and(opsValidVec[5], rb.entries[5].valid) @[POSIT_Locality.scala 76:60]
    node _T_97 = eq(rb.entries[5].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 76:85]
    node _T_98 = and(_T_96, _T_97) @[POSIT_Locality.scala 76:82]
    waitingForDispatchVec[5] <= _T_98 @[POSIT_Locality.scala 76:42]
    node _T_99 = and(opsValidVec[6], rb.entries[6].valid) @[POSIT_Locality.scala 76:60]
    node _T_100 = eq(rb.entries[6].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 76:85]
    node _T_101 = and(_T_99, _T_100) @[POSIT_Locality.scala 76:82]
    waitingForDispatchVec[6] <= _T_101 @[POSIT_Locality.scala 76:42]
    node _T_102 = and(opsValidVec[7], rb.entries[7].valid) @[POSIT_Locality.scala 76:60]
    node _T_103 = eq(rb.entries[7].dispatched, UInt<1>("h00")) @[POSIT_Locality.scala 76:85]
    node _T_104 = and(_T_102, _T_103) @[POSIT_Locality.scala 76:82]
    waitingForDispatchVec[7] <= _T_104 @[POSIT_Locality.scala 76:42]
    node _T_105 = cat(waitingForDispatchVec[1], waitingForDispatchVec[0]) @[POSIT_Locality.scala 80:58]
    node _T_106 = cat(waitingForDispatchVec[3], waitingForDispatchVec[2]) @[POSIT_Locality.scala 80:58]
    node _T_107 = cat(_T_106, _T_105) @[POSIT_Locality.scala 80:58]
    node _T_108 = cat(waitingForDispatchVec[5], waitingForDispatchVec[4]) @[POSIT_Locality.scala 80:58]
    node _T_109 = cat(waitingForDispatchVec[7], waitingForDispatchVec[6]) @[POSIT_Locality.scala 80:58]
    node _T_110 = cat(_T_109, _T_108) @[POSIT_Locality.scala 80:58]
    node _T_111 = cat(_T_110, _T_107) @[POSIT_Locality.scala 80:58]
    dispatchArb.io.validity <= _T_111 @[POSIT_Locality.scala 80:33]
    dispatchArb.io.priority <= wbCountOn @[POSIT_Locality.scala 81:33]
    node _T_112 = eq(io.request.bits.wr_addr, UInt<1>("h00")) @[POSIT_Locality.scala 85:32]
    node _T_113 = and(_T_112, new_input_log) @[POSIT_Locality.scala 85:40]
    when _T_113 : @[POSIT_Locality.scala 85:57]
      rb.entries[0].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:57]
    else : @[POSIT_Locality.scala 87:28]
      node _T_114 = eq(dispatchArb.io.chosen, UInt<1>("h00")) @[POSIT_Locality.scala 88:89]
      node _T_115 = and(_T_114, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 88:102]
      node _T_116 = and(_T_115, pe.io.request.ready) @[POSIT_Locality.scala 88:130]
      node _T_117 = or(rb.entries[0].dispatched, _T_116) @[POSIT_Locality.scala 88:78]
      rb.entries[0].dispatched <= _T_117 @[POSIT_Locality.scala 88:50]
      skip @[POSIT_Locality.scala 87:28]
    node _T_118 = eq(io.request.bits.wr_addr, UInt<1>("h01")) @[POSIT_Locality.scala 85:32]
    node _T_119 = and(_T_118, new_input_log) @[POSIT_Locality.scala 85:40]
    when _T_119 : @[POSIT_Locality.scala 85:57]
      rb.entries[1].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:57]
    else : @[POSIT_Locality.scala 87:28]
      node _T_120 = eq(dispatchArb.io.chosen, UInt<1>("h01")) @[POSIT_Locality.scala 88:89]
      node _T_121 = and(_T_120, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 88:102]
      node _T_122 = and(_T_121, pe.io.request.ready) @[POSIT_Locality.scala 88:130]
      node _T_123 = or(rb.entries[1].dispatched, _T_122) @[POSIT_Locality.scala 88:78]
      rb.entries[1].dispatched <= _T_123 @[POSIT_Locality.scala 88:50]
      skip @[POSIT_Locality.scala 87:28]
    node _T_124 = eq(io.request.bits.wr_addr, UInt<2>("h02")) @[POSIT_Locality.scala 85:32]
    node _T_125 = and(_T_124, new_input_log) @[POSIT_Locality.scala 85:40]
    when _T_125 : @[POSIT_Locality.scala 85:57]
      rb.entries[2].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:57]
    else : @[POSIT_Locality.scala 87:28]
      node _T_126 = eq(dispatchArb.io.chosen, UInt<2>("h02")) @[POSIT_Locality.scala 88:89]
      node _T_127 = and(_T_126, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 88:102]
      node _T_128 = and(_T_127, pe.io.request.ready) @[POSIT_Locality.scala 88:130]
      node _T_129 = or(rb.entries[2].dispatched, _T_128) @[POSIT_Locality.scala 88:78]
      rb.entries[2].dispatched <= _T_129 @[POSIT_Locality.scala 88:50]
      skip @[POSIT_Locality.scala 87:28]
    node _T_130 = eq(io.request.bits.wr_addr, UInt<2>("h03")) @[POSIT_Locality.scala 85:32]
    node _T_131 = and(_T_130, new_input_log) @[POSIT_Locality.scala 85:40]
    when _T_131 : @[POSIT_Locality.scala 85:57]
      rb.entries[3].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:57]
    else : @[POSIT_Locality.scala 87:28]
      node _T_132 = eq(dispatchArb.io.chosen, UInt<2>("h03")) @[POSIT_Locality.scala 88:89]
      node _T_133 = and(_T_132, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 88:102]
      node _T_134 = and(_T_133, pe.io.request.ready) @[POSIT_Locality.scala 88:130]
      node _T_135 = or(rb.entries[3].dispatched, _T_134) @[POSIT_Locality.scala 88:78]
      rb.entries[3].dispatched <= _T_135 @[POSIT_Locality.scala 88:50]
      skip @[POSIT_Locality.scala 87:28]
    node _T_136 = eq(io.request.bits.wr_addr, UInt<3>("h04")) @[POSIT_Locality.scala 85:32]
    node _T_137 = and(_T_136, new_input_log) @[POSIT_Locality.scala 85:40]
    when _T_137 : @[POSIT_Locality.scala 85:57]
      rb.entries[4].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:57]
    else : @[POSIT_Locality.scala 87:28]
      node _T_138 = eq(dispatchArb.io.chosen, UInt<3>("h04")) @[POSIT_Locality.scala 88:89]
      node _T_139 = and(_T_138, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 88:102]
      node _T_140 = and(_T_139, pe.io.request.ready) @[POSIT_Locality.scala 88:130]
      node _T_141 = or(rb.entries[4].dispatched, _T_140) @[POSIT_Locality.scala 88:78]
      rb.entries[4].dispatched <= _T_141 @[POSIT_Locality.scala 88:50]
      skip @[POSIT_Locality.scala 87:28]
    node _T_142 = eq(io.request.bits.wr_addr, UInt<3>("h05")) @[POSIT_Locality.scala 85:32]
    node _T_143 = and(_T_142, new_input_log) @[POSIT_Locality.scala 85:40]
    when _T_143 : @[POSIT_Locality.scala 85:57]
      rb.entries[5].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:57]
    else : @[POSIT_Locality.scala 87:28]
      node _T_144 = eq(dispatchArb.io.chosen, UInt<3>("h05")) @[POSIT_Locality.scala 88:89]
      node _T_145 = and(_T_144, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 88:102]
      node _T_146 = and(_T_145, pe.io.request.ready) @[POSIT_Locality.scala 88:130]
      node _T_147 = or(rb.entries[5].dispatched, _T_146) @[POSIT_Locality.scala 88:78]
      rb.entries[5].dispatched <= _T_147 @[POSIT_Locality.scala 88:50]
      skip @[POSIT_Locality.scala 87:28]
    node _T_148 = eq(io.request.bits.wr_addr, UInt<3>("h06")) @[POSIT_Locality.scala 85:32]
    node _T_149 = and(_T_148, new_input_log) @[POSIT_Locality.scala 85:40]
    when _T_149 : @[POSIT_Locality.scala 85:57]
      rb.entries[6].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:57]
    else : @[POSIT_Locality.scala 87:28]
      node _T_150 = eq(dispatchArb.io.chosen, UInt<3>("h06")) @[POSIT_Locality.scala 88:89]
      node _T_151 = and(_T_150, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 88:102]
      node _T_152 = and(_T_151, pe.io.request.ready) @[POSIT_Locality.scala 88:130]
      node _T_153 = or(rb.entries[6].dispatched, _T_152) @[POSIT_Locality.scala 88:78]
      rb.entries[6].dispatched <= _T_153 @[POSIT_Locality.scala 88:50]
      skip @[POSIT_Locality.scala 87:28]
    node _T_154 = eq(io.request.bits.wr_addr, UInt<3>("h07")) @[POSIT_Locality.scala 85:32]
    node _T_155 = and(_T_154, new_input_log) @[POSIT_Locality.scala 85:40]
    when _T_155 : @[POSIT_Locality.scala 85:57]
      rb.entries[7].dispatched <= UInt<1>("h00") @[POSIT_Locality.scala 86:50]
      skip @[POSIT_Locality.scala 85:57]
    else : @[POSIT_Locality.scala 87:28]
      node _T_156 = eq(dispatchArb.io.chosen, UInt<3>("h07")) @[POSIT_Locality.scala 88:89]
      node _T_157 = and(_T_156, dispatchArb.io.hasChosen) @[POSIT_Locality.scala 88:102]
      node _T_158 = and(_T_157, pe.io.request.ready) @[POSIT_Locality.scala 88:130]
      node _T_159 = or(rb.entries[7].dispatched, _T_158) @[POSIT_Locality.scala 88:78]
      rb.entries[7].dispatched <= _T_159 @[POSIT_Locality.scala 88:50]
      skip @[POSIT_Locality.scala 87:28]
    node _T_160 = and(dispatchArb.io.hasChosen, pe.io.request.ready) @[POSIT_Locality.scala 92:39]
    when _T_160 : @[POSIT_Locality.scala 92:61]
      pe.io.request.valid <= UInt<1>("h01") @[POSIT_Locality.scala 93:37]
      skip @[POSIT_Locality.scala 92:61]
    else : @[POSIT_Locality.scala 94:20]
      pe.io.request.valid <= UInt<1>("h00") @[POSIT_Locality.scala 95:37]
      skip @[POSIT_Locality.scala 94:20]
    pe.io.in_idx <= dispatchArb.io.chosen @[POSIT_Locality.scala 97:22]
    pe.io.result.ready <= io.mem_write.ready @[POSIT_Locality.scala 99:28]
    node _T_161 = bits(rb.entries[dispatchArb.io.chosen].request.operands[0].value, 31, 0) @[POSIT_Locality.scala 100:80]
    pe.io.request.bits.num1 <= _T_161 @[POSIT_Locality.scala 100:33]
    node _T_162 = bits(rb.entries[dispatchArb.io.chosen].request.operands[1].value, 31, 0) @[POSIT_Locality.scala 101:80]
    pe.io.request.bits.num2 <= _T_162 @[POSIT_Locality.scala 101:33]
    node _T_163 = bits(rb.entries[dispatchArb.io.chosen].request.operands[2].value, 31, 0) @[POSIT_Locality.scala 102:80]
    pe.io.request.bits.num3 <= _T_163 @[POSIT_Locality.scala 102:33]
    pe.io.request.bits.mode <= rb.entries[dispatchArb.io.chosen].request.mode @[POSIT_Locality.scala 103:33]
    pe.io.request.bits.inst <= rb.entries[dispatchArb.io.chosen].request.inst @[POSIT_Locality.scala 104:33]
    wire result_idx : UInt<3> @[POSIT_Locality.scala 106:30]
    result_idx <= pe.io.out_idx @[POSIT_Locality.scala 107:20]
    node _T_164 = and(pe.io.result.ready, pe.io.result.valid) @[POSIT_Locality.scala 108:33]
    when _T_164 : @[POSIT_Locality.scala 108:55]
      rb.entries[result_idx].result.exceptions <= pe.io.result.bits.exceptions @[POSIT_Locality.scala 109:47]
      rb.entries[result_idx].result.gt <= pe.io.result.bits.gt @[POSIT_Locality.scala 109:47]
      rb.entries[result_idx].result.eq <= pe.io.result.bits.eq @[POSIT_Locality.scala 109:47]
      rb.entries[result_idx].result.lt <= pe.io.result.bits.lt @[POSIT_Locality.scala 109:47]
      rb.entries[result_idx].result.out <= pe.io.result.bits.out @[POSIT_Locality.scala 109:47]
      rb.entries[result_idx].result.isNaR <= pe.io.result.bits.isNaR @[POSIT_Locality.scala 109:47]
      rb.entries[result_idx].result.isZero <= pe.io.result.bits.isZero @[POSIT_Locality.scala 109:47]
      rb.entries[result_idx].completed <= UInt<1>("h01") @[POSIT_Locality.scala 110:50]
      skip @[POSIT_Locality.scala 108:55]
    node _T_165 = eq(rb.entries[0].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_165 : @[POSIT_Locality.scala 116:77]
      node _T_166 = bits(rb.entries[0].request.operands[0].value, 2, 0)
      when rb.entries[_T_166].completed : @[POSIT_Locality.scala 117:100]
        node _T_167 = bits(rb.entries[0].request.operands[0].value, 2, 0)
        rb.entries[0].request.operands[0].value <= rb.entries[_T_167].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[0].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_168 = eq(rb.entries[0].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_168 : @[POSIT_Locality.scala 116:77]
      node _T_169 = bits(rb.entries[0].request.operands[1].value, 2, 0)
      when rb.entries[_T_169].completed : @[POSIT_Locality.scala 117:100]
        node _T_170 = bits(rb.entries[0].request.operands[1].value, 2, 0)
        rb.entries[0].request.operands[1].value <= rb.entries[_T_170].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[0].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_171 = eq(rb.entries[0].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_171 : @[POSIT_Locality.scala 116:77]
      node _T_172 = bits(rb.entries[0].request.operands[2].value, 2, 0)
      when rb.entries[_T_172].completed : @[POSIT_Locality.scala 117:100]
        node _T_173 = bits(rb.entries[0].request.operands[2].value, 2, 0)
        rb.entries[0].request.operands[2].value <= rb.entries[_T_173].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[0].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_174 = eq(rb.entries[1].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_174 : @[POSIT_Locality.scala 116:77]
      node _T_175 = bits(rb.entries[1].request.operands[0].value, 2, 0)
      when rb.entries[_T_175].completed : @[POSIT_Locality.scala 117:100]
        node _T_176 = bits(rb.entries[1].request.operands[0].value, 2, 0)
        rb.entries[1].request.operands[0].value <= rb.entries[_T_176].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[1].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_177 = eq(rb.entries[1].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_177 : @[POSIT_Locality.scala 116:77]
      node _T_178 = bits(rb.entries[1].request.operands[1].value, 2, 0)
      when rb.entries[_T_178].completed : @[POSIT_Locality.scala 117:100]
        node _T_179 = bits(rb.entries[1].request.operands[1].value, 2, 0)
        rb.entries[1].request.operands[1].value <= rb.entries[_T_179].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[1].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_180 = eq(rb.entries[1].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_180 : @[POSIT_Locality.scala 116:77]
      node _T_181 = bits(rb.entries[1].request.operands[2].value, 2, 0)
      when rb.entries[_T_181].completed : @[POSIT_Locality.scala 117:100]
        node _T_182 = bits(rb.entries[1].request.operands[2].value, 2, 0)
        rb.entries[1].request.operands[2].value <= rb.entries[_T_182].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[1].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_183 = eq(rb.entries[2].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_183 : @[POSIT_Locality.scala 116:77]
      node _T_184 = bits(rb.entries[2].request.operands[0].value, 2, 0)
      when rb.entries[_T_184].completed : @[POSIT_Locality.scala 117:100]
        node _T_185 = bits(rb.entries[2].request.operands[0].value, 2, 0)
        rb.entries[2].request.operands[0].value <= rb.entries[_T_185].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[2].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_186 = eq(rb.entries[2].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_186 : @[POSIT_Locality.scala 116:77]
      node _T_187 = bits(rb.entries[2].request.operands[1].value, 2, 0)
      when rb.entries[_T_187].completed : @[POSIT_Locality.scala 117:100]
        node _T_188 = bits(rb.entries[2].request.operands[1].value, 2, 0)
        rb.entries[2].request.operands[1].value <= rb.entries[_T_188].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[2].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_189 = eq(rb.entries[2].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_189 : @[POSIT_Locality.scala 116:77]
      node _T_190 = bits(rb.entries[2].request.operands[2].value, 2, 0)
      when rb.entries[_T_190].completed : @[POSIT_Locality.scala 117:100]
        node _T_191 = bits(rb.entries[2].request.operands[2].value, 2, 0)
        rb.entries[2].request.operands[2].value <= rb.entries[_T_191].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[2].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_192 = eq(rb.entries[3].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_192 : @[POSIT_Locality.scala 116:77]
      node _T_193 = bits(rb.entries[3].request.operands[0].value, 2, 0)
      when rb.entries[_T_193].completed : @[POSIT_Locality.scala 117:100]
        node _T_194 = bits(rb.entries[3].request.operands[0].value, 2, 0)
        rb.entries[3].request.operands[0].value <= rb.entries[_T_194].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[3].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_195 = eq(rb.entries[3].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_195 : @[POSIT_Locality.scala 116:77]
      node _T_196 = bits(rb.entries[3].request.operands[1].value, 2, 0)
      when rb.entries[_T_196].completed : @[POSIT_Locality.scala 117:100]
        node _T_197 = bits(rb.entries[3].request.operands[1].value, 2, 0)
        rb.entries[3].request.operands[1].value <= rb.entries[_T_197].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[3].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_198 = eq(rb.entries[3].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_198 : @[POSIT_Locality.scala 116:77]
      node _T_199 = bits(rb.entries[3].request.operands[2].value, 2, 0)
      when rb.entries[_T_199].completed : @[POSIT_Locality.scala 117:100]
        node _T_200 = bits(rb.entries[3].request.operands[2].value, 2, 0)
        rb.entries[3].request.operands[2].value <= rb.entries[_T_200].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[3].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_201 = eq(rb.entries[4].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_201 : @[POSIT_Locality.scala 116:77]
      node _T_202 = bits(rb.entries[4].request.operands[0].value, 2, 0)
      when rb.entries[_T_202].completed : @[POSIT_Locality.scala 117:100]
        node _T_203 = bits(rb.entries[4].request.operands[0].value, 2, 0)
        rb.entries[4].request.operands[0].value <= rb.entries[_T_203].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[4].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_204 = eq(rb.entries[4].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_204 : @[POSIT_Locality.scala 116:77]
      node _T_205 = bits(rb.entries[4].request.operands[1].value, 2, 0)
      when rb.entries[_T_205].completed : @[POSIT_Locality.scala 117:100]
        node _T_206 = bits(rb.entries[4].request.operands[1].value, 2, 0)
        rb.entries[4].request.operands[1].value <= rb.entries[_T_206].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[4].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_207 = eq(rb.entries[4].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_207 : @[POSIT_Locality.scala 116:77]
      node _T_208 = bits(rb.entries[4].request.operands[2].value, 2, 0)
      when rb.entries[_T_208].completed : @[POSIT_Locality.scala 117:100]
        node _T_209 = bits(rb.entries[4].request.operands[2].value, 2, 0)
        rb.entries[4].request.operands[2].value <= rb.entries[_T_209].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[4].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_210 = eq(rb.entries[5].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_210 : @[POSIT_Locality.scala 116:77]
      node _T_211 = bits(rb.entries[5].request.operands[0].value, 2, 0)
      when rb.entries[_T_211].completed : @[POSIT_Locality.scala 117:100]
        node _T_212 = bits(rb.entries[5].request.operands[0].value, 2, 0)
        rb.entries[5].request.operands[0].value <= rb.entries[_T_212].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[5].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_213 = eq(rb.entries[5].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_213 : @[POSIT_Locality.scala 116:77]
      node _T_214 = bits(rb.entries[5].request.operands[1].value, 2, 0)
      when rb.entries[_T_214].completed : @[POSIT_Locality.scala 117:100]
        node _T_215 = bits(rb.entries[5].request.operands[1].value, 2, 0)
        rb.entries[5].request.operands[1].value <= rb.entries[_T_215].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[5].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_216 = eq(rb.entries[5].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_216 : @[POSIT_Locality.scala 116:77]
      node _T_217 = bits(rb.entries[5].request.operands[2].value, 2, 0)
      when rb.entries[_T_217].completed : @[POSIT_Locality.scala 117:100]
        node _T_218 = bits(rb.entries[5].request.operands[2].value, 2, 0)
        rb.entries[5].request.operands[2].value <= rb.entries[_T_218].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[5].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_219 = eq(rb.entries[6].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_219 : @[POSIT_Locality.scala 116:77]
      node _T_220 = bits(rb.entries[6].request.operands[0].value, 2, 0)
      when rb.entries[_T_220].completed : @[POSIT_Locality.scala 117:100]
        node _T_221 = bits(rb.entries[6].request.operands[0].value, 2, 0)
        rb.entries[6].request.operands[0].value <= rb.entries[_T_221].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[6].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_222 = eq(rb.entries[6].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_222 : @[POSIT_Locality.scala 116:77]
      node _T_223 = bits(rb.entries[6].request.operands[1].value, 2, 0)
      when rb.entries[_T_223].completed : @[POSIT_Locality.scala 117:100]
        node _T_224 = bits(rb.entries[6].request.operands[1].value, 2, 0)
        rb.entries[6].request.operands[1].value <= rb.entries[_T_224].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[6].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_225 = eq(rb.entries[6].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_225 : @[POSIT_Locality.scala 116:77]
      node _T_226 = bits(rb.entries[6].request.operands[2].value, 2, 0)
      when rb.entries[_T_226].completed : @[POSIT_Locality.scala 117:100]
        node _T_227 = bits(rb.entries[6].request.operands[2].value, 2, 0)
        rb.entries[6].request.operands[2].value <= rb.entries[_T_227].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[6].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_228 = eq(rb.entries[7].request.operands[0].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_228 : @[POSIT_Locality.scala 116:77]
      node _T_229 = bits(rb.entries[7].request.operands[0].value, 2, 0)
      when rb.entries[_T_229].completed : @[POSIT_Locality.scala 117:100]
        node _T_230 = bits(rb.entries[7].request.operands[0].value, 2, 0)
        rb.entries[7].request.operands[0].value <= rb.entries[_T_230].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[7].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_231 = eq(rb.entries[7].request.operands[1].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_231 : @[POSIT_Locality.scala 116:77]
      node _T_232 = bits(rb.entries[7].request.operands[1].value, 2, 0)
      when rb.entries[_T_232].completed : @[POSIT_Locality.scala 117:100]
        node _T_233 = bits(rb.entries[7].request.operands[1].value, 2, 0)
        rb.entries[7].request.operands[1].value <= rb.entries[_T_233].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[7].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    node _T_234 = eq(rb.entries[7].request.operands[2].mode, UInt<1>("h01")) @[POSIT_Locality.scala 116:69]
    when _T_234 : @[POSIT_Locality.scala 116:77]
      node _T_235 = bits(rb.entries[7].request.operands[2].value, 2, 0)
      when rb.entries[_T_235].completed : @[POSIT_Locality.scala 117:100]
        node _T_236 = bits(rb.entries[7].request.operands[2].value, 2, 0)
        rb.entries[7].request.operands[2].value <= rb.entries[_T_236].result.out @[POSIT_Locality.scala 118:81]
        rb.entries[7].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 120:80]
        skip @[POSIT_Locality.scala 117:100]
      skip @[POSIT_Locality.scala 116:77]
    reg reg_infetch_cacheline : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[POSIT_Locality.scala 127:45]
    when io.mem_read.resp_valid : @[POSIT_Locality.scala 128:37]
      node _T_237 = bits(rb.entries[0].request.operands[0].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_238 = bits(rb.entries[0].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_239 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_240 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_241 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_242 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_243 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_244 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_245 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_246 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_247 = eq(UInt<3>("h07"), _T_238) @[Mux.scala 68:19]
      node _T_248 = mux(_T_247, _T_246, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_249 = eq(UInt<3>("h06"), _T_238) @[Mux.scala 68:19]
      node _T_250 = mux(_T_249, _T_245, _T_248) @[Mux.scala 68:16]
      node _T_251 = eq(UInt<3>("h05"), _T_238) @[Mux.scala 68:19]
      node _T_252 = mux(_T_251, _T_244, _T_250) @[Mux.scala 68:16]
      node _T_253 = eq(UInt<3>("h04"), _T_238) @[Mux.scala 68:19]
      node _T_254 = mux(_T_253, _T_243, _T_252) @[Mux.scala 68:16]
      node _T_255 = eq(UInt<2>("h03"), _T_238) @[Mux.scala 68:19]
      node _T_256 = mux(_T_255, _T_242, _T_254) @[Mux.scala 68:16]
      node _T_257 = eq(UInt<2>("h02"), _T_238) @[Mux.scala 68:19]
      node _T_258 = mux(_T_257, _T_241, _T_256) @[Mux.scala 68:16]
      node _T_259 = eq(UInt<1>("h01"), _T_238) @[Mux.scala 68:19]
      node _T_260 = mux(_T_259, _T_240, _T_258) @[Mux.scala 68:16]
      node _T_261 = eq(UInt<1>("h00"), _T_238) @[Mux.scala 68:19]
      node _T_262 = mux(_T_261, _T_239, _T_260) @[Mux.scala 68:16]
      node _T_263 = bits(rb.entries[0].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_264 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_265 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_266 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_267 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_268 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_269 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_270 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_271 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_272 = eq(UInt<3>("h07"), _T_263) @[Mux.scala 68:19]
      node _T_273 = mux(_T_272, _T_271, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_274 = eq(UInt<3>("h06"), _T_263) @[Mux.scala 68:19]
      node _T_275 = mux(_T_274, _T_270, _T_273) @[Mux.scala 68:16]
      node _T_276 = eq(UInt<3>("h05"), _T_263) @[Mux.scala 68:19]
      node _T_277 = mux(_T_276, _T_269, _T_275) @[Mux.scala 68:16]
      node _T_278 = eq(UInt<3>("h04"), _T_263) @[Mux.scala 68:19]
      node _T_279 = mux(_T_278, _T_268, _T_277) @[Mux.scala 68:16]
      node _T_280 = eq(UInt<2>("h03"), _T_263) @[Mux.scala 68:19]
      node _T_281 = mux(_T_280, _T_267, _T_279) @[Mux.scala 68:16]
      node _T_282 = eq(UInt<2>("h02"), _T_263) @[Mux.scala 68:19]
      node _T_283 = mux(_T_282, _T_266, _T_281) @[Mux.scala 68:16]
      node _T_284 = eq(UInt<1>("h01"), _T_263) @[Mux.scala 68:19]
      node _T_285 = mux(_T_284, _T_265, _T_283) @[Mux.scala 68:16]
      node _T_286 = eq(UInt<1>("h00"), _T_263) @[Mux.scala 68:19]
      node _T_287 = mux(_T_286, _T_264, _T_285) @[Mux.scala 68:16]
      node _T_288 = bits(rb.entries[0].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_289 = eq(_T_288, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_289 : @[POSIT_Locality.scala 136:88]
        node _T_290 = eq(_T_237, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_291 = eq(_T_262, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_292 = and(_T_290, _T_291) @[POSIT_Locality.scala 138:49]
        node _T_293 = bits(rb.entries[0].request.operands[0].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_294 = eq(_T_287, _T_293) @[POSIT_Locality.scala 139:59]
        node _T_295 = and(_T_292, _T_294) @[POSIT_Locality.scala 139:49]
        when _T_295 : @[POSIT_Locality.scala 139:106]
          node _T_296 = bits(rb.entries[0].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_297 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_298 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_299 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_300 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_301 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_302 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_303 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_304 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_305 = eq(UInt<3>("h07"), _T_296) @[Mux.scala 68:19]
          node _T_306 = mux(_T_305, _T_304, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_307 = eq(UInt<3>("h06"), _T_296) @[Mux.scala 68:19]
          node _T_308 = mux(_T_307, _T_303, _T_306) @[Mux.scala 68:16]
          node _T_309 = eq(UInt<3>("h05"), _T_296) @[Mux.scala 68:19]
          node _T_310 = mux(_T_309, _T_302, _T_308) @[Mux.scala 68:16]
          node _T_311 = eq(UInt<3>("h04"), _T_296) @[Mux.scala 68:19]
          node _T_312 = mux(_T_311, _T_301, _T_310) @[Mux.scala 68:16]
          node _T_313 = eq(UInt<2>("h03"), _T_296) @[Mux.scala 68:19]
          node _T_314 = mux(_T_313, _T_300, _T_312) @[Mux.scala 68:16]
          node _T_315 = eq(UInt<2>("h02"), _T_296) @[Mux.scala 68:19]
          node _T_316 = mux(_T_315, _T_299, _T_314) @[Mux.scala 68:16]
          node _T_317 = eq(UInt<1>("h01"), _T_296) @[Mux.scala 68:19]
          node _T_318 = mux(_T_317, _T_298, _T_316) @[Mux.scala 68:16]
          node _T_319 = eq(UInt<1>("h00"), _T_296) @[Mux.scala 68:19]
          node _T_320 = mux(_T_319, _T_297, _T_318) @[Mux.scala 68:16]
          rb.entries[0].request.operands[0].value <= _T_320 @[POSIT_Locality.scala 140:89]
          rb.entries[0].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_321 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_322 = eq(_T_321, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_322 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h00"), UInt<8>("h00")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_323 = bits(rb.entries[0].request.operands[1].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_324 = bits(rb.entries[0].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_325 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_326 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_327 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_328 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_329 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_330 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_331 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_332 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_333 = eq(UInt<3>("h07"), _T_324) @[Mux.scala 68:19]
      node _T_334 = mux(_T_333, _T_332, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_335 = eq(UInt<3>("h06"), _T_324) @[Mux.scala 68:19]
      node _T_336 = mux(_T_335, _T_331, _T_334) @[Mux.scala 68:16]
      node _T_337 = eq(UInt<3>("h05"), _T_324) @[Mux.scala 68:19]
      node _T_338 = mux(_T_337, _T_330, _T_336) @[Mux.scala 68:16]
      node _T_339 = eq(UInt<3>("h04"), _T_324) @[Mux.scala 68:19]
      node _T_340 = mux(_T_339, _T_329, _T_338) @[Mux.scala 68:16]
      node _T_341 = eq(UInt<2>("h03"), _T_324) @[Mux.scala 68:19]
      node _T_342 = mux(_T_341, _T_328, _T_340) @[Mux.scala 68:16]
      node _T_343 = eq(UInt<2>("h02"), _T_324) @[Mux.scala 68:19]
      node _T_344 = mux(_T_343, _T_327, _T_342) @[Mux.scala 68:16]
      node _T_345 = eq(UInt<1>("h01"), _T_324) @[Mux.scala 68:19]
      node _T_346 = mux(_T_345, _T_326, _T_344) @[Mux.scala 68:16]
      node _T_347 = eq(UInt<1>("h00"), _T_324) @[Mux.scala 68:19]
      node _T_348 = mux(_T_347, _T_325, _T_346) @[Mux.scala 68:16]
      node _T_349 = bits(rb.entries[0].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_350 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_351 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_352 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_353 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_354 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_355 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_356 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_357 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_358 = eq(UInt<3>("h07"), _T_349) @[Mux.scala 68:19]
      node _T_359 = mux(_T_358, _T_357, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_360 = eq(UInt<3>("h06"), _T_349) @[Mux.scala 68:19]
      node _T_361 = mux(_T_360, _T_356, _T_359) @[Mux.scala 68:16]
      node _T_362 = eq(UInt<3>("h05"), _T_349) @[Mux.scala 68:19]
      node _T_363 = mux(_T_362, _T_355, _T_361) @[Mux.scala 68:16]
      node _T_364 = eq(UInt<3>("h04"), _T_349) @[Mux.scala 68:19]
      node _T_365 = mux(_T_364, _T_354, _T_363) @[Mux.scala 68:16]
      node _T_366 = eq(UInt<2>("h03"), _T_349) @[Mux.scala 68:19]
      node _T_367 = mux(_T_366, _T_353, _T_365) @[Mux.scala 68:16]
      node _T_368 = eq(UInt<2>("h02"), _T_349) @[Mux.scala 68:19]
      node _T_369 = mux(_T_368, _T_352, _T_367) @[Mux.scala 68:16]
      node _T_370 = eq(UInt<1>("h01"), _T_349) @[Mux.scala 68:19]
      node _T_371 = mux(_T_370, _T_351, _T_369) @[Mux.scala 68:16]
      node _T_372 = eq(UInt<1>("h00"), _T_349) @[Mux.scala 68:19]
      node _T_373 = mux(_T_372, _T_350, _T_371) @[Mux.scala 68:16]
      node _T_374 = bits(rb.entries[0].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_375 = eq(_T_374, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_375 : @[POSIT_Locality.scala 136:88]
        node _T_376 = eq(_T_323, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_377 = eq(_T_348, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_378 = and(_T_376, _T_377) @[POSIT_Locality.scala 138:49]
        node _T_379 = bits(rb.entries[0].request.operands[1].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_380 = eq(_T_373, _T_379) @[POSIT_Locality.scala 139:59]
        node _T_381 = and(_T_378, _T_380) @[POSIT_Locality.scala 139:49]
        when _T_381 : @[POSIT_Locality.scala 139:106]
          node _T_382 = bits(rb.entries[0].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_383 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_384 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_385 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_386 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_387 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_388 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_389 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_390 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_391 = eq(UInt<3>("h07"), _T_382) @[Mux.scala 68:19]
          node _T_392 = mux(_T_391, _T_390, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_393 = eq(UInt<3>("h06"), _T_382) @[Mux.scala 68:19]
          node _T_394 = mux(_T_393, _T_389, _T_392) @[Mux.scala 68:16]
          node _T_395 = eq(UInt<3>("h05"), _T_382) @[Mux.scala 68:19]
          node _T_396 = mux(_T_395, _T_388, _T_394) @[Mux.scala 68:16]
          node _T_397 = eq(UInt<3>("h04"), _T_382) @[Mux.scala 68:19]
          node _T_398 = mux(_T_397, _T_387, _T_396) @[Mux.scala 68:16]
          node _T_399 = eq(UInt<2>("h03"), _T_382) @[Mux.scala 68:19]
          node _T_400 = mux(_T_399, _T_386, _T_398) @[Mux.scala 68:16]
          node _T_401 = eq(UInt<2>("h02"), _T_382) @[Mux.scala 68:19]
          node _T_402 = mux(_T_401, _T_385, _T_400) @[Mux.scala 68:16]
          node _T_403 = eq(UInt<1>("h01"), _T_382) @[Mux.scala 68:19]
          node _T_404 = mux(_T_403, _T_384, _T_402) @[Mux.scala 68:16]
          node _T_405 = eq(UInt<1>("h00"), _T_382) @[Mux.scala 68:19]
          node _T_406 = mux(_T_405, _T_383, _T_404) @[Mux.scala 68:16]
          rb.entries[0].request.operands[1].value <= _T_406 @[POSIT_Locality.scala 140:89]
          rb.entries[0].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_407 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_408 = eq(_T_407, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_408 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h00"), UInt<8>("h01")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_409 = bits(rb.entries[0].request.operands[2].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_410 = bits(rb.entries[0].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_411 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_412 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_413 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_414 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_415 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_416 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_417 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_418 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_419 = eq(UInt<3>("h07"), _T_410) @[Mux.scala 68:19]
      node _T_420 = mux(_T_419, _T_418, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_421 = eq(UInt<3>("h06"), _T_410) @[Mux.scala 68:19]
      node _T_422 = mux(_T_421, _T_417, _T_420) @[Mux.scala 68:16]
      node _T_423 = eq(UInt<3>("h05"), _T_410) @[Mux.scala 68:19]
      node _T_424 = mux(_T_423, _T_416, _T_422) @[Mux.scala 68:16]
      node _T_425 = eq(UInt<3>("h04"), _T_410) @[Mux.scala 68:19]
      node _T_426 = mux(_T_425, _T_415, _T_424) @[Mux.scala 68:16]
      node _T_427 = eq(UInt<2>("h03"), _T_410) @[Mux.scala 68:19]
      node _T_428 = mux(_T_427, _T_414, _T_426) @[Mux.scala 68:16]
      node _T_429 = eq(UInt<2>("h02"), _T_410) @[Mux.scala 68:19]
      node _T_430 = mux(_T_429, _T_413, _T_428) @[Mux.scala 68:16]
      node _T_431 = eq(UInt<1>("h01"), _T_410) @[Mux.scala 68:19]
      node _T_432 = mux(_T_431, _T_412, _T_430) @[Mux.scala 68:16]
      node _T_433 = eq(UInt<1>("h00"), _T_410) @[Mux.scala 68:19]
      node _T_434 = mux(_T_433, _T_411, _T_432) @[Mux.scala 68:16]
      node _T_435 = bits(rb.entries[0].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_436 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_437 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_438 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_439 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_440 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_441 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_442 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_443 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_444 = eq(UInt<3>("h07"), _T_435) @[Mux.scala 68:19]
      node _T_445 = mux(_T_444, _T_443, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_446 = eq(UInt<3>("h06"), _T_435) @[Mux.scala 68:19]
      node _T_447 = mux(_T_446, _T_442, _T_445) @[Mux.scala 68:16]
      node _T_448 = eq(UInt<3>("h05"), _T_435) @[Mux.scala 68:19]
      node _T_449 = mux(_T_448, _T_441, _T_447) @[Mux.scala 68:16]
      node _T_450 = eq(UInt<3>("h04"), _T_435) @[Mux.scala 68:19]
      node _T_451 = mux(_T_450, _T_440, _T_449) @[Mux.scala 68:16]
      node _T_452 = eq(UInt<2>("h03"), _T_435) @[Mux.scala 68:19]
      node _T_453 = mux(_T_452, _T_439, _T_451) @[Mux.scala 68:16]
      node _T_454 = eq(UInt<2>("h02"), _T_435) @[Mux.scala 68:19]
      node _T_455 = mux(_T_454, _T_438, _T_453) @[Mux.scala 68:16]
      node _T_456 = eq(UInt<1>("h01"), _T_435) @[Mux.scala 68:19]
      node _T_457 = mux(_T_456, _T_437, _T_455) @[Mux.scala 68:16]
      node _T_458 = eq(UInt<1>("h00"), _T_435) @[Mux.scala 68:19]
      node _T_459 = mux(_T_458, _T_436, _T_457) @[Mux.scala 68:16]
      node _T_460 = bits(rb.entries[0].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_461 = eq(_T_460, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_461 : @[POSIT_Locality.scala 136:88]
        node _T_462 = eq(_T_409, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_463 = eq(_T_434, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_464 = and(_T_462, _T_463) @[POSIT_Locality.scala 138:49]
        node _T_465 = bits(rb.entries[0].request.operands[2].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_466 = eq(_T_459, _T_465) @[POSIT_Locality.scala 139:59]
        node _T_467 = and(_T_464, _T_466) @[POSIT_Locality.scala 139:49]
        when _T_467 : @[POSIT_Locality.scala 139:106]
          node _T_468 = bits(rb.entries[0].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_469 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_470 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_471 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_472 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_473 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_474 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_475 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_476 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_477 = eq(UInt<3>("h07"), _T_468) @[Mux.scala 68:19]
          node _T_478 = mux(_T_477, _T_476, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_479 = eq(UInt<3>("h06"), _T_468) @[Mux.scala 68:19]
          node _T_480 = mux(_T_479, _T_475, _T_478) @[Mux.scala 68:16]
          node _T_481 = eq(UInt<3>("h05"), _T_468) @[Mux.scala 68:19]
          node _T_482 = mux(_T_481, _T_474, _T_480) @[Mux.scala 68:16]
          node _T_483 = eq(UInt<3>("h04"), _T_468) @[Mux.scala 68:19]
          node _T_484 = mux(_T_483, _T_473, _T_482) @[Mux.scala 68:16]
          node _T_485 = eq(UInt<2>("h03"), _T_468) @[Mux.scala 68:19]
          node _T_486 = mux(_T_485, _T_472, _T_484) @[Mux.scala 68:16]
          node _T_487 = eq(UInt<2>("h02"), _T_468) @[Mux.scala 68:19]
          node _T_488 = mux(_T_487, _T_471, _T_486) @[Mux.scala 68:16]
          node _T_489 = eq(UInt<1>("h01"), _T_468) @[Mux.scala 68:19]
          node _T_490 = mux(_T_489, _T_470, _T_488) @[Mux.scala 68:16]
          node _T_491 = eq(UInt<1>("h00"), _T_468) @[Mux.scala 68:19]
          node _T_492 = mux(_T_491, _T_469, _T_490) @[Mux.scala 68:16]
          rb.entries[0].request.operands[2].value <= _T_492 @[POSIT_Locality.scala 140:89]
          rb.entries[0].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_493 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_494 = eq(_T_493, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_494 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h00"), UInt<8>("h02")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_495 = bits(rb.entries[1].request.operands[0].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_496 = bits(rb.entries[1].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_497 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_498 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_499 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_500 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_501 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_502 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_503 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_504 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_505 = eq(UInt<3>("h07"), _T_496) @[Mux.scala 68:19]
      node _T_506 = mux(_T_505, _T_504, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_507 = eq(UInt<3>("h06"), _T_496) @[Mux.scala 68:19]
      node _T_508 = mux(_T_507, _T_503, _T_506) @[Mux.scala 68:16]
      node _T_509 = eq(UInt<3>("h05"), _T_496) @[Mux.scala 68:19]
      node _T_510 = mux(_T_509, _T_502, _T_508) @[Mux.scala 68:16]
      node _T_511 = eq(UInt<3>("h04"), _T_496) @[Mux.scala 68:19]
      node _T_512 = mux(_T_511, _T_501, _T_510) @[Mux.scala 68:16]
      node _T_513 = eq(UInt<2>("h03"), _T_496) @[Mux.scala 68:19]
      node _T_514 = mux(_T_513, _T_500, _T_512) @[Mux.scala 68:16]
      node _T_515 = eq(UInt<2>("h02"), _T_496) @[Mux.scala 68:19]
      node _T_516 = mux(_T_515, _T_499, _T_514) @[Mux.scala 68:16]
      node _T_517 = eq(UInt<1>("h01"), _T_496) @[Mux.scala 68:19]
      node _T_518 = mux(_T_517, _T_498, _T_516) @[Mux.scala 68:16]
      node _T_519 = eq(UInt<1>("h00"), _T_496) @[Mux.scala 68:19]
      node _T_520 = mux(_T_519, _T_497, _T_518) @[Mux.scala 68:16]
      node _T_521 = bits(rb.entries[1].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_522 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_523 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_524 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_525 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_526 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_527 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_528 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_529 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_530 = eq(UInt<3>("h07"), _T_521) @[Mux.scala 68:19]
      node _T_531 = mux(_T_530, _T_529, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_532 = eq(UInt<3>("h06"), _T_521) @[Mux.scala 68:19]
      node _T_533 = mux(_T_532, _T_528, _T_531) @[Mux.scala 68:16]
      node _T_534 = eq(UInt<3>("h05"), _T_521) @[Mux.scala 68:19]
      node _T_535 = mux(_T_534, _T_527, _T_533) @[Mux.scala 68:16]
      node _T_536 = eq(UInt<3>("h04"), _T_521) @[Mux.scala 68:19]
      node _T_537 = mux(_T_536, _T_526, _T_535) @[Mux.scala 68:16]
      node _T_538 = eq(UInt<2>("h03"), _T_521) @[Mux.scala 68:19]
      node _T_539 = mux(_T_538, _T_525, _T_537) @[Mux.scala 68:16]
      node _T_540 = eq(UInt<2>("h02"), _T_521) @[Mux.scala 68:19]
      node _T_541 = mux(_T_540, _T_524, _T_539) @[Mux.scala 68:16]
      node _T_542 = eq(UInt<1>("h01"), _T_521) @[Mux.scala 68:19]
      node _T_543 = mux(_T_542, _T_523, _T_541) @[Mux.scala 68:16]
      node _T_544 = eq(UInt<1>("h00"), _T_521) @[Mux.scala 68:19]
      node _T_545 = mux(_T_544, _T_522, _T_543) @[Mux.scala 68:16]
      node _T_546 = bits(rb.entries[1].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_547 = eq(_T_546, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_547 : @[POSIT_Locality.scala 136:88]
        node _T_548 = eq(_T_495, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_549 = eq(_T_520, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_550 = and(_T_548, _T_549) @[POSIT_Locality.scala 138:49]
        node _T_551 = bits(rb.entries[1].request.operands[0].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_552 = eq(_T_545, _T_551) @[POSIT_Locality.scala 139:59]
        node _T_553 = and(_T_550, _T_552) @[POSIT_Locality.scala 139:49]
        when _T_553 : @[POSIT_Locality.scala 139:106]
          node _T_554 = bits(rb.entries[1].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_555 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_556 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_557 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_558 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_559 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_560 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_561 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_562 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_563 = eq(UInt<3>("h07"), _T_554) @[Mux.scala 68:19]
          node _T_564 = mux(_T_563, _T_562, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_565 = eq(UInt<3>("h06"), _T_554) @[Mux.scala 68:19]
          node _T_566 = mux(_T_565, _T_561, _T_564) @[Mux.scala 68:16]
          node _T_567 = eq(UInt<3>("h05"), _T_554) @[Mux.scala 68:19]
          node _T_568 = mux(_T_567, _T_560, _T_566) @[Mux.scala 68:16]
          node _T_569 = eq(UInt<3>("h04"), _T_554) @[Mux.scala 68:19]
          node _T_570 = mux(_T_569, _T_559, _T_568) @[Mux.scala 68:16]
          node _T_571 = eq(UInt<2>("h03"), _T_554) @[Mux.scala 68:19]
          node _T_572 = mux(_T_571, _T_558, _T_570) @[Mux.scala 68:16]
          node _T_573 = eq(UInt<2>("h02"), _T_554) @[Mux.scala 68:19]
          node _T_574 = mux(_T_573, _T_557, _T_572) @[Mux.scala 68:16]
          node _T_575 = eq(UInt<1>("h01"), _T_554) @[Mux.scala 68:19]
          node _T_576 = mux(_T_575, _T_556, _T_574) @[Mux.scala 68:16]
          node _T_577 = eq(UInt<1>("h00"), _T_554) @[Mux.scala 68:19]
          node _T_578 = mux(_T_577, _T_555, _T_576) @[Mux.scala 68:16]
          rb.entries[1].request.operands[0].value <= _T_578 @[POSIT_Locality.scala 140:89]
          rb.entries[1].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_579 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_580 = eq(_T_579, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_580 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h01"), UInt<8>("h00")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_581 = bits(rb.entries[1].request.operands[1].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_582 = bits(rb.entries[1].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_583 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_584 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_585 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_586 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_587 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_588 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_589 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_590 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_591 = eq(UInt<3>("h07"), _T_582) @[Mux.scala 68:19]
      node _T_592 = mux(_T_591, _T_590, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_593 = eq(UInt<3>("h06"), _T_582) @[Mux.scala 68:19]
      node _T_594 = mux(_T_593, _T_589, _T_592) @[Mux.scala 68:16]
      node _T_595 = eq(UInt<3>("h05"), _T_582) @[Mux.scala 68:19]
      node _T_596 = mux(_T_595, _T_588, _T_594) @[Mux.scala 68:16]
      node _T_597 = eq(UInt<3>("h04"), _T_582) @[Mux.scala 68:19]
      node _T_598 = mux(_T_597, _T_587, _T_596) @[Mux.scala 68:16]
      node _T_599 = eq(UInt<2>("h03"), _T_582) @[Mux.scala 68:19]
      node _T_600 = mux(_T_599, _T_586, _T_598) @[Mux.scala 68:16]
      node _T_601 = eq(UInt<2>("h02"), _T_582) @[Mux.scala 68:19]
      node _T_602 = mux(_T_601, _T_585, _T_600) @[Mux.scala 68:16]
      node _T_603 = eq(UInt<1>("h01"), _T_582) @[Mux.scala 68:19]
      node _T_604 = mux(_T_603, _T_584, _T_602) @[Mux.scala 68:16]
      node _T_605 = eq(UInt<1>("h00"), _T_582) @[Mux.scala 68:19]
      node _T_606 = mux(_T_605, _T_583, _T_604) @[Mux.scala 68:16]
      node _T_607 = bits(rb.entries[1].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_608 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_609 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_610 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_611 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_612 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_613 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_614 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_615 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_616 = eq(UInt<3>("h07"), _T_607) @[Mux.scala 68:19]
      node _T_617 = mux(_T_616, _T_615, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_618 = eq(UInt<3>("h06"), _T_607) @[Mux.scala 68:19]
      node _T_619 = mux(_T_618, _T_614, _T_617) @[Mux.scala 68:16]
      node _T_620 = eq(UInt<3>("h05"), _T_607) @[Mux.scala 68:19]
      node _T_621 = mux(_T_620, _T_613, _T_619) @[Mux.scala 68:16]
      node _T_622 = eq(UInt<3>("h04"), _T_607) @[Mux.scala 68:19]
      node _T_623 = mux(_T_622, _T_612, _T_621) @[Mux.scala 68:16]
      node _T_624 = eq(UInt<2>("h03"), _T_607) @[Mux.scala 68:19]
      node _T_625 = mux(_T_624, _T_611, _T_623) @[Mux.scala 68:16]
      node _T_626 = eq(UInt<2>("h02"), _T_607) @[Mux.scala 68:19]
      node _T_627 = mux(_T_626, _T_610, _T_625) @[Mux.scala 68:16]
      node _T_628 = eq(UInt<1>("h01"), _T_607) @[Mux.scala 68:19]
      node _T_629 = mux(_T_628, _T_609, _T_627) @[Mux.scala 68:16]
      node _T_630 = eq(UInt<1>("h00"), _T_607) @[Mux.scala 68:19]
      node _T_631 = mux(_T_630, _T_608, _T_629) @[Mux.scala 68:16]
      node _T_632 = bits(rb.entries[1].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_633 = eq(_T_632, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_633 : @[POSIT_Locality.scala 136:88]
        node _T_634 = eq(_T_581, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_635 = eq(_T_606, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_636 = and(_T_634, _T_635) @[POSIT_Locality.scala 138:49]
        node _T_637 = bits(rb.entries[1].request.operands[1].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_638 = eq(_T_631, _T_637) @[POSIT_Locality.scala 139:59]
        node _T_639 = and(_T_636, _T_638) @[POSIT_Locality.scala 139:49]
        when _T_639 : @[POSIT_Locality.scala 139:106]
          node _T_640 = bits(rb.entries[1].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_641 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_642 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_643 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_644 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_645 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_646 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_647 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_648 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_649 = eq(UInt<3>("h07"), _T_640) @[Mux.scala 68:19]
          node _T_650 = mux(_T_649, _T_648, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_651 = eq(UInt<3>("h06"), _T_640) @[Mux.scala 68:19]
          node _T_652 = mux(_T_651, _T_647, _T_650) @[Mux.scala 68:16]
          node _T_653 = eq(UInt<3>("h05"), _T_640) @[Mux.scala 68:19]
          node _T_654 = mux(_T_653, _T_646, _T_652) @[Mux.scala 68:16]
          node _T_655 = eq(UInt<3>("h04"), _T_640) @[Mux.scala 68:19]
          node _T_656 = mux(_T_655, _T_645, _T_654) @[Mux.scala 68:16]
          node _T_657 = eq(UInt<2>("h03"), _T_640) @[Mux.scala 68:19]
          node _T_658 = mux(_T_657, _T_644, _T_656) @[Mux.scala 68:16]
          node _T_659 = eq(UInt<2>("h02"), _T_640) @[Mux.scala 68:19]
          node _T_660 = mux(_T_659, _T_643, _T_658) @[Mux.scala 68:16]
          node _T_661 = eq(UInt<1>("h01"), _T_640) @[Mux.scala 68:19]
          node _T_662 = mux(_T_661, _T_642, _T_660) @[Mux.scala 68:16]
          node _T_663 = eq(UInt<1>("h00"), _T_640) @[Mux.scala 68:19]
          node _T_664 = mux(_T_663, _T_641, _T_662) @[Mux.scala 68:16]
          rb.entries[1].request.operands[1].value <= _T_664 @[POSIT_Locality.scala 140:89]
          rb.entries[1].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_665 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_666 = eq(_T_665, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_666 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h01"), UInt<8>("h01")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_667 = bits(rb.entries[1].request.operands[2].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_668 = bits(rb.entries[1].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_669 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_670 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_671 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_672 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_673 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_674 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_675 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_676 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_677 = eq(UInt<3>("h07"), _T_668) @[Mux.scala 68:19]
      node _T_678 = mux(_T_677, _T_676, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_679 = eq(UInt<3>("h06"), _T_668) @[Mux.scala 68:19]
      node _T_680 = mux(_T_679, _T_675, _T_678) @[Mux.scala 68:16]
      node _T_681 = eq(UInt<3>("h05"), _T_668) @[Mux.scala 68:19]
      node _T_682 = mux(_T_681, _T_674, _T_680) @[Mux.scala 68:16]
      node _T_683 = eq(UInt<3>("h04"), _T_668) @[Mux.scala 68:19]
      node _T_684 = mux(_T_683, _T_673, _T_682) @[Mux.scala 68:16]
      node _T_685 = eq(UInt<2>("h03"), _T_668) @[Mux.scala 68:19]
      node _T_686 = mux(_T_685, _T_672, _T_684) @[Mux.scala 68:16]
      node _T_687 = eq(UInt<2>("h02"), _T_668) @[Mux.scala 68:19]
      node _T_688 = mux(_T_687, _T_671, _T_686) @[Mux.scala 68:16]
      node _T_689 = eq(UInt<1>("h01"), _T_668) @[Mux.scala 68:19]
      node _T_690 = mux(_T_689, _T_670, _T_688) @[Mux.scala 68:16]
      node _T_691 = eq(UInt<1>("h00"), _T_668) @[Mux.scala 68:19]
      node _T_692 = mux(_T_691, _T_669, _T_690) @[Mux.scala 68:16]
      node _T_693 = bits(rb.entries[1].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_694 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_695 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_696 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_697 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_698 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_699 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_700 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_701 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_702 = eq(UInt<3>("h07"), _T_693) @[Mux.scala 68:19]
      node _T_703 = mux(_T_702, _T_701, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_704 = eq(UInt<3>("h06"), _T_693) @[Mux.scala 68:19]
      node _T_705 = mux(_T_704, _T_700, _T_703) @[Mux.scala 68:16]
      node _T_706 = eq(UInt<3>("h05"), _T_693) @[Mux.scala 68:19]
      node _T_707 = mux(_T_706, _T_699, _T_705) @[Mux.scala 68:16]
      node _T_708 = eq(UInt<3>("h04"), _T_693) @[Mux.scala 68:19]
      node _T_709 = mux(_T_708, _T_698, _T_707) @[Mux.scala 68:16]
      node _T_710 = eq(UInt<2>("h03"), _T_693) @[Mux.scala 68:19]
      node _T_711 = mux(_T_710, _T_697, _T_709) @[Mux.scala 68:16]
      node _T_712 = eq(UInt<2>("h02"), _T_693) @[Mux.scala 68:19]
      node _T_713 = mux(_T_712, _T_696, _T_711) @[Mux.scala 68:16]
      node _T_714 = eq(UInt<1>("h01"), _T_693) @[Mux.scala 68:19]
      node _T_715 = mux(_T_714, _T_695, _T_713) @[Mux.scala 68:16]
      node _T_716 = eq(UInt<1>("h00"), _T_693) @[Mux.scala 68:19]
      node _T_717 = mux(_T_716, _T_694, _T_715) @[Mux.scala 68:16]
      node _T_718 = bits(rb.entries[1].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_719 = eq(_T_718, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_719 : @[POSIT_Locality.scala 136:88]
        node _T_720 = eq(_T_667, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_721 = eq(_T_692, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_722 = and(_T_720, _T_721) @[POSIT_Locality.scala 138:49]
        node _T_723 = bits(rb.entries[1].request.operands[2].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_724 = eq(_T_717, _T_723) @[POSIT_Locality.scala 139:59]
        node _T_725 = and(_T_722, _T_724) @[POSIT_Locality.scala 139:49]
        when _T_725 : @[POSIT_Locality.scala 139:106]
          node _T_726 = bits(rb.entries[1].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_727 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_728 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_729 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_730 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_731 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_732 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_733 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_734 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_735 = eq(UInt<3>("h07"), _T_726) @[Mux.scala 68:19]
          node _T_736 = mux(_T_735, _T_734, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_737 = eq(UInt<3>("h06"), _T_726) @[Mux.scala 68:19]
          node _T_738 = mux(_T_737, _T_733, _T_736) @[Mux.scala 68:16]
          node _T_739 = eq(UInt<3>("h05"), _T_726) @[Mux.scala 68:19]
          node _T_740 = mux(_T_739, _T_732, _T_738) @[Mux.scala 68:16]
          node _T_741 = eq(UInt<3>("h04"), _T_726) @[Mux.scala 68:19]
          node _T_742 = mux(_T_741, _T_731, _T_740) @[Mux.scala 68:16]
          node _T_743 = eq(UInt<2>("h03"), _T_726) @[Mux.scala 68:19]
          node _T_744 = mux(_T_743, _T_730, _T_742) @[Mux.scala 68:16]
          node _T_745 = eq(UInt<2>("h02"), _T_726) @[Mux.scala 68:19]
          node _T_746 = mux(_T_745, _T_729, _T_744) @[Mux.scala 68:16]
          node _T_747 = eq(UInt<1>("h01"), _T_726) @[Mux.scala 68:19]
          node _T_748 = mux(_T_747, _T_728, _T_746) @[Mux.scala 68:16]
          node _T_749 = eq(UInt<1>("h00"), _T_726) @[Mux.scala 68:19]
          node _T_750 = mux(_T_749, _T_727, _T_748) @[Mux.scala 68:16]
          rb.entries[1].request.operands[2].value <= _T_750 @[POSIT_Locality.scala 140:89]
          rb.entries[1].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_751 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_752 = eq(_T_751, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_752 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h01"), UInt<8>("h02")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_753 = bits(rb.entries[2].request.operands[0].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_754 = bits(rb.entries[2].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_755 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_756 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_757 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_758 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_759 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_760 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_761 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_762 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_763 = eq(UInt<3>("h07"), _T_754) @[Mux.scala 68:19]
      node _T_764 = mux(_T_763, _T_762, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_765 = eq(UInt<3>("h06"), _T_754) @[Mux.scala 68:19]
      node _T_766 = mux(_T_765, _T_761, _T_764) @[Mux.scala 68:16]
      node _T_767 = eq(UInt<3>("h05"), _T_754) @[Mux.scala 68:19]
      node _T_768 = mux(_T_767, _T_760, _T_766) @[Mux.scala 68:16]
      node _T_769 = eq(UInt<3>("h04"), _T_754) @[Mux.scala 68:19]
      node _T_770 = mux(_T_769, _T_759, _T_768) @[Mux.scala 68:16]
      node _T_771 = eq(UInt<2>("h03"), _T_754) @[Mux.scala 68:19]
      node _T_772 = mux(_T_771, _T_758, _T_770) @[Mux.scala 68:16]
      node _T_773 = eq(UInt<2>("h02"), _T_754) @[Mux.scala 68:19]
      node _T_774 = mux(_T_773, _T_757, _T_772) @[Mux.scala 68:16]
      node _T_775 = eq(UInt<1>("h01"), _T_754) @[Mux.scala 68:19]
      node _T_776 = mux(_T_775, _T_756, _T_774) @[Mux.scala 68:16]
      node _T_777 = eq(UInt<1>("h00"), _T_754) @[Mux.scala 68:19]
      node _T_778 = mux(_T_777, _T_755, _T_776) @[Mux.scala 68:16]
      node _T_779 = bits(rb.entries[2].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_780 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_781 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_782 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_783 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_784 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_785 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_786 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_787 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_788 = eq(UInt<3>("h07"), _T_779) @[Mux.scala 68:19]
      node _T_789 = mux(_T_788, _T_787, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_790 = eq(UInt<3>("h06"), _T_779) @[Mux.scala 68:19]
      node _T_791 = mux(_T_790, _T_786, _T_789) @[Mux.scala 68:16]
      node _T_792 = eq(UInt<3>("h05"), _T_779) @[Mux.scala 68:19]
      node _T_793 = mux(_T_792, _T_785, _T_791) @[Mux.scala 68:16]
      node _T_794 = eq(UInt<3>("h04"), _T_779) @[Mux.scala 68:19]
      node _T_795 = mux(_T_794, _T_784, _T_793) @[Mux.scala 68:16]
      node _T_796 = eq(UInt<2>("h03"), _T_779) @[Mux.scala 68:19]
      node _T_797 = mux(_T_796, _T_783, _T_795) @[Mux.scala 68:16]
      node _T_798 = eq(UInt<2>("h02"), _T_779) @[Mux.scala 68:19]
      node _T_799 = mux(_T_798, _T_782, _T_797) @[Mux.scala 68:16]
      node _T_800 = eq(UInt<1>("h01"), _T_779) @[Mux.scala 68:19]
      node _T_801 = mux(_T_800, _T_781, _T_799) @[Mux.scala 68:16]
      node _T_802 = eq(UInt<1>("h00"), _T_779) @[Mux.scala 68:19]
      node _T_803 = mux(_T_802, _T_780, _T_801) @[Mux.scala 68:16]
      node _T_804 = bits(rb.entries[2].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_805 = eq(_T_804, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_805 : @[POSIT_Locality.scala 136:88]
        node _T_806 = eq(_T_753, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_807 = eq(_T_778, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_808 = and(_T_806, _T_807) @[POSIT_Locality.scala 138:49]
        node _T_809 = bits(rb.entries[2].request.operands[0].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_810 = eq(_T_803, _T_809) @[POSIT_Locality.scala 139:59]
        node _T_811 = and(_T_808, _T_810) @[POSIT_Locality.scala 139:49]
        when _T_811 : @[POSIT_Locality.scala 139:106]
          node _T_812 = bits(rb.entries[2].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_813 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_814 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_815 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_816 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_817 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_818 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_819 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_820 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_821 = eq(UInt<3>("h07"), _T_812) @[Mux.scala 68:19]
          node _T_822 = mux(_T_821, _T_820, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_823 = eq(UInt<3>("h06"), _T_812) @[Mux.scala 68:19]
          node _T_824 = mux(_T_823, _T_819, _T_822) @[Mux.scala 68:16]
          node _T_825 = eq(UInt<3>("h05"), _T_812) @[Mux.scala 68:19]
          node _T_826 = mux(_T_825, _T_818, _T_824) @[Mux.scala 68:16]
          node _T_827 = eq(UInt<3>("h04"), _T_812) @[Mux.scala 68:19]
          node _T_828 = mux(_T_827, _T_817, _T_826) @[Mux.scala 68:16]
          node _T_829 = eq(UInt<2>("h03"), _T_812) @[Mux.scala 68:19]
          node _T_830 = mux(_T_829, _T_816, _T_828) @[Mux.scala 68:16]
          node _T_831 = eq(UInt<2>("h02"), _T_812) @[Mux.scala 68:19]
          node _T_832 = mux(_T_831, _T_815, _T_830) @[Mux.scala 68:16]
          node _T_833 = eq(UInt<1>("h01"), _T_812) @[Mux.scala 68:19]
          node _T_834 = mux(_T_833, _T_814, _T_832) @[Mux.scala 68:16]
          node _T_835 = eq(UInt<1>("h00"), _T_812) @[Mux.scala 68:19]
          node _T_836 = mux(_T_835, _T_813, _T_834) @[Mux.scala 68:16]
          rb.entries[2].request.operands[0].value <= _T_836 @[POSIT_Locality.scala 140:89]
          rb.entries[2].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_837 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_838 = eq(_T_837, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_838 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h02"), UInt<8>("h00")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_839 = bits(rb.entries[2].request.operands[1].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_840 = bits(rb.entries[2].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_841 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_842 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_843 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_844 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_845 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_846 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_847 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_848 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_849 = eq(UInt<3>("h07"), _T_840) @[Mux.scala 68:19]
      node _T_850 = mux(_T_849, _T_848, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_851 = eq(UInt<3>("h06"), _T_840) @[Mux.scala 68:19]
      node _T_852 = mux(_T_851, _T_847, _T_850) @[Mux.scala 68:16]
      node _T_853 = eq(UInt<3>("h05"), _T_840) @[Mux.scala 68:19]
      node _T_854 = mux(_T_853, _T_846, _T_852) @[Mux.scala 68:16]
      node _T_855 = eq(UInt<3>("h04"), _T_840) @[Mux.scala 68:19]
      node _T_856 = mux(_T_855, _T_845, _T_854) @[Mux.scala 68:16]
      node _T_857 = eq(UInt<2>("h03"), _T_840) @[Mux.scala 68:19]
      node _T_858 = mux(_T_857, _T_844, _T_856) @[Mux.scala 68:16]
      node _T_859 = eq(UInt<2>("h02"), _T_840) @[Mux.scala 68:19]
      node _T_860 = mux(_T_859, _T_843, _T_858) @[Mux.scala 68:16]
      node _T_861 = eq(UInt<1>("h01"), _T_840) @[Mux.scala 68:19]
      node _T_862 = mux(_T_861, _T_842, _T_860) @[Mux.scala 68:16]
      node _T_863 = eq(UInt<1>("h00"), _T_840) @[Mux.scala 68:19]
      node _T_864 = mux(_T_863, _T_841, _T_862) @[Mux.scala 68:16]
      node _T_865 = bits(rb.entries[2].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_866 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_867 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_868 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_869 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_870 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_871 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_872 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_873 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_874 = eq(UInt<3>("h07"), _T_865) @[Mux.scala 68:19]
      node _T_875 = mux(_T_874, _T_873, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_876 = eq(UInt<3>("h06"), _T_865) @[Mux.scala 68:19]
      node _T_877 = mux(_T_876, _T_872, _T_875) @[Mux.scala 68:16]
      node _T_878 = eq(UInt<3>("h05"), _T_865) @[Mux.scala 68:19]
      node _T_879 = mux(_T_878, _T_871, _T_877) @[Mux.scala 68:16]
      node _T_880 = eq(UInt<3>("h04"), _T_865) @[Mux.scala 68:19]
      node _T_881 = mux(_T_880, _T_870, _T_879) @[Mux.scala 68:16]
      node _T_882 = eq(UInt<2>("h03"), _T_865) @[Mux.scala 68:19]
      node _T_883 = mux(_T_882, _T_869, _T_881) @[Mux.scala 68:16]
      node _T_884 = eq(UInt<2>("h02"), _T_865) @[Mux.scala 68:19]
      node _T_885 = mux(_T_884, _T_868, _T_883) @[Mux.scala 68:16]
      node _T_886 = eq(UInt<1>("h01"), _T_865) @[Mux.scala 68:19]
      node _T_887 = mux(_T_886, _T_867, _T_885) @[Mux.scala 68:16]
      node _T_888 = eq(UInt<1>("h00"), _T_865) @[Mux.scala 68:19]
      node _T_889 = mux(_T_888, _T_866, _T_887) @[Mux.scala 68:16]
      node _T_890 = bits(rb.entries[2].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_891 = eq(_T_890, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_891 : @[POSIT_Locality.scala 136:88]
        node _T_892 = eq(_T_839, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_893 = eq(_T_864, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_894 = and(_T_892, _T_893) @[POSIT_Locality.scala 138:49]
        node _T_895 = bits(rb.entries[2].request.operands[1].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_896 = eq(_T_889, _T_895) @[POSIT_Locality.scala 139:59]
        node _T_897 = and(_T_894, _T_896) @[POSIT_Locality.scala 139:49]
        when _T_897 : @[POSIT_Locality.scala 139:106]
          node _T_898 = bits(rb.entries[2].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_899 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_900 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_901 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_902 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_903 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_904 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_905 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_906 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_907 = eq(UInt<3>("h07"), _T_898) @[Mux.scala 68:19]
          node _T_908 = mux(_T_907, _T_906, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_909 = eq(UInt<3>("h06"), _T_898) @[Mux.scala 68:19]
          node _T_910 = mux(_T_909, _T_905, _T_908) @[Mux.scala 68:16]
          node _T_911 = eq(UInt<3>("h05"), _T_898) @[Mux.scala 68:19]
          node _T_912 = mux(_T_911, _T_904, _T_910) @[Mux.scala 68:16]
          node _T_913 = eq(UInt<3>("h04"), _T_898) @[Mux.scala 68:19]
          node _T_914 = mux(_T_913, _T_903, _T_912) @[Mux.scala 68:16]
          node _T_915 = eq(UInt<2>("h03"), _T_898) @[Mux.scala 68:19]
          node _T_916 = mux(_T_915, _T_902, _T_914) @[Mux.scala 68:16]
          node _T_917 = eq(UInt<2>("h02"), _T_898) @[Mux.scala 68:19]
          node _T_918 = mux(_T_917, _T_901, _T_916) @[Mux.scala 68:16]
          node _T_919 = eq(UInt<1>("h01"), _T_898) @[Mux.scala 68:19]
          node _T_920 = mux(_T_919, _T_900, _T_918) @[Mux.scala 68:16]
          node _T_921 = eq(UInt<1>("h00"), _T_898) @[Mux.scala 68:19]
          node _T_922 = mux(_T_921, _T_899, _T_920) @[Mux.scala 68:16]
          rb.entries[2].request.operands[1].value <= _T_922 @[POSIT_Locality.scala 140:89]
          rb.entries[2].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_923 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_924 = eq(_T_923, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_924 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h02"), UInt<8>("h01")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_925 = bits(rb.entries[2].request.operands[2].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_926 = bits(rb.entries[2].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_927 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_928 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_929 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_930 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_931 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_932 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_933 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_934 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_935 = eq(UInt<3>("h07"), _T_926) @[Mux.scala 68:19]
      node _T_936 = mux(_T_935, _T_934, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_937 = eq(UInt<3>("h06"), _T_926) @[Mux.scala 68:19]
      node _T_938 = mux(_T_937, _T_933, _T_936) @[Mux.scala 68:16]
      node _T_939 = eq(UInt<3>("h05"), _T_926) @[Mux.scala 68:19]
      node _T_940 = mux(_T_939, _T_932, _T_938) @[Mux.scala 68:16]
      node _T_941 = eq(UInt<3>("h04"), _T_926) @[Mux.scala 68:19]
      node _T_942 = mux(_T_941, _T_931, _T_940) @[Mux.scala 68:16]
      node _T_943 = eq(UInt<2>("h03"), _T_926) @[Mux.scala 68:19]
      node _T_944 = mux(_T_943, _T_930, _T_942) @[Mux.scala 68:16]
      node _T_945 = eq(UInt<2>("h02"), _T_926) @[Mux.scala 68:19]
      node _T_946 = mux(_T_945, _T_929, _T_944) @[Mux.scala 68:16]
      node _T_947 = eq(UInt<1>("h01"), _T_926) @[Mux.scala 68:19]
      node _T_948 = mux(_T_947, _T_928, _T_946) @[Mux.scala 68:16]
      node _T_949 = eq(UInt<1>("h00"), _T_926) @[Mux.scala 68:19]
      node _T_950 = mux(_T_949, _T_927, _T_948) @[Mux.scala 68:16]
      node _T_951 = bits(rb.entries[2].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_952 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_953 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_954 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_955 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_956 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_957 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_958 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_959 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_960 = eq(UInt<3>("h07"), _T_951) @[Mux.scala 68:19]
      node _T_961 = mux(_T_960, _T_959, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_962 = eq(UInt<3>("h06"), _T_951) @[Mux.scala 68:19]
      node _T_963 = mux(_T_962, _T_958, _T_961) @[Mux.scala 68:16]
      node _T_964 = eq(UInt<3>("h05"), _T_951) @[Mux.scala 68:19]
      node _T_965 = mux(_T_964, _T_957, _T_963) @[Mux.scala 68:16]
      node _T_966 = eq(UInt<3>("h04"), _T_951) @[Mux.scala 68:19]
      node _T_967 = mux(_T_966, _T_956, _T_965) @[Mux.scala 68:16]
      node _T_968 = eq(UInt<2>("h03"), _T_951) @[Mux.scala 68:19]
      node _T_969 = mux(_T_968, _T_955, _T_967) @[Mux.scala 68:16]
      node _T_970 = eq(UInt<2>("h02"), _T_951) @[Mux.scala 68:19]
      node _T_971 = mux(_T_970, _T_954, _T_969) @[Mux.scala 68:16]
      node _T_972 = eq(UInt<1>("h01"), _T_951) @[Mux.scala 68:19]
      node _T_973 = mux(_T_972, _T_953, _T_971) @[Mux.scala 68:16]
      node _T_974 = eq(UInt<1>("h00"), _T_951) @[Mux.scala 68:19]
      node _T_975 = mux(_T_974, _T_952, _T_973) @[Mux.scala 68:16]
      node _T_976 = bits(rb.entries[2].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_977 = eq(_T_976, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_977 : @[POSIT_Locality.scala 136:88]
        node _T_978 = eq(_T_925, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_979 = eq(_T_950, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_980 = and(_T_978, _T_979) @[POSIT_Locality.scala 138:49]
        node _T_981 = bits(rb.entries[2].request.operands[2].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_982 = eq(_T_975, _T_981) @[POSIT_Locality.scala 139:59]
        node _T_983 = and(_T_980, _T_982) @[POSIT_Locality.scala 139:49]
        when _T_983 : @[POSIT_Locality.scala 139:106]
          node _T_984 = bits(rb.entries[2].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_985 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_986 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_987 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_988 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_989 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_990 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_991 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_992 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_993 = eq(UInt<3>("h07"), _T_984) @[Mux.scala 68:19]
          node _T_994 = mux(_T_993, _T_992, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_995 = eq(UInt<3>("h06"), _T_984) @[Mux.scala 68:19]
          node _T_996 = mux(_T_995, _T_991, _T_994) @[Mux.scala 68:16]
          node _T_997 = eq(UInt<3>("h05"), _T_984) @[Mux.scala 68:19]
          node _T_998 = mux(_T_997, _T_990, _T_996) @[Mux.scala 68:16]
          node _T_999 = eq(UInt<3>("h04"), _T_984) @[Mux.scala 68:19]
          node _T_1000 = mux(_T_999, _T_989, _T_998) @[Mux.scala 68:16]
          node _T_1001 = eq(UInt<2>("h03"), _T_984) @[Mux.scala 68:19]
          node _T_1002 = mux(_T_1001, _T_988, _T_1000) @[Mux.scala 68:16]
          node _T_1003 = eq(UInt<2>("h02"), _T_984) @[Mux.scala 68:19]
          node _T_1004 = mux(_T_1003, _T_987, _T_1002) @[Mux.scala 68:16]
          node _T_1005 = eq(UInt<1>("h01"), _T_984) @[Mux.scala 68:19]
          node _T_1006 = mux(_T_1005, _T_986, _T_1004) @[Mux.scala 68:16]
          node _T_1007 = eq(UInt<1>("h00"), _T_984) @[Mux.scala 68:19]
          node _T_1008 = mux(_T_1007, _T_985, _T_1006) @[Mux.scala 68:16]
          rb.entries[2].request.operands[2].value <= _T_1008 @[POSIT_Locality.scala 140:89]
          rb.entries[2].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_1009 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1010 = eq(_T_1009, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1010 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h02"), UInt<8>("h02")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_1011 = bits(rb.entries[3].request.operands[0].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_1012 = bits(rb.entries[3].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_1013 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_1014 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_1015 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_1016 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_1017 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_1018 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_1019 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_1020 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_1021 = eq(UInt<3>("h07"), _T_1012) @[Mux.scala 68:19]
      node _T_1022 = mux(_T_1021, _T_1020, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1023 = eq(UInt<3>("h06"), _T_1012) @[Mux.scala 68:19]
      node _T_1024 = mux(_T_1023, _T_1019, _T_1022) @[Mux.scala 68:16]
      node _T_1025 = eq(UInt<3>("h05"), _T_1012) @[Mux.scala 68:19]
      node _T_1026 = mux(_T_1025, _T_1018, _T_1024) @[Mux.scala 68:16]
      node _T_1027 = eq(UInt<3>("h04"), _T_1012) @[Mux.scala 68:19]
      node _T_1028 = mux(_T_1027, _T_1017, _T_1026) @[Mux.scala 68:16]
      node _T_1029 = eq(UInt<2>("h03"), _T_1012) @[Mux.scala 68:19]
      node _T_1030 = mux(_T_1029, _T_1016, _T_1028) @[Mux.scala 68:16]
      node _T_1031 = eq(UInt<2>("h02"), _T_1012) @[Mux.scala 68:19]
      node _T_1032 = mux(_T_1031, _T_1015, _T_1030) @[Mux.scala 68:16]
      node _T_1033 = eq(UInt<1>("h01"), _T_1012) @[Mux.scala 68:19]
      node _T_1034 = mux(_T_1033, _T_1014, _T_1032) @[Mux.scala 68:16]
      node _T_1035 = eq(UInt<1>("h00"), _T_1012) @[Mux.scala 68:19]
      node _T_1036 = mux(_T_1035, _T_1013, _T_1034) @[Mux.scala 68:16]
      node _T_1037 = bits(rb.entries[3].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_1038 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_1039 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_1040 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_1041 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_1042 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_1043 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_1044 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_1045 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_1046 = eq(UInt<3>("h07"), _T_1037) @[Mux.scala 68:19]
      node _T_1047 = mux(_T_1046, _T_1045, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1048 = eq(UInt<3>("h06"), _T_1037) @[Mux.scala 68:19]
      node _T_1049 = mux(_T_1048, _T_1044, _T_1047) @[Mux.scala 68:16]
      node _T_1050 = eq(UInt<3>("h05"), _T_1037) @[Mux.scala 68:19]
      node _T_1051 = mux(_T_1050, _T_1043, _T_1049) @[Mux.scala 68:16]
      node _T_1052 = eq(UInt<3>("h04"), _T_1037) @[Mux.scala 68:19]
      node _T_1053 = mux(_T_1052, _T_1042, _T_1051) @[Mux.scala 68:16]
      node _T_1054 = eq(UInt<2>("h03"), _T_1037) @[Mux.scala 68:19]
      node _T_1055 = mux(_T_1054, _T_1041, _T_1053) @[Mux.scala 68:16]
      node _T_1056 = eq(UInt<2>("h02"), _T_1037) @[Mux.scala 68:19]
      node _T_1057 = mux(_T_1056, _T_1040, _T_1055) @[Mux.scala 68:16]
      node _T_1058 = eq(UInt<1>("h01"), _T_1037) @[Mux.scala 68:19]
      node _T_1059 = mux(_T_1058, _T_1039, _T_1057) @[Mux.scala 68:16]
      node _T_1060 = eq(UInt<1>("h00"), _T_1037) @[Mux.scala 68:19]
      node _T_1061 = mux(_T_1060, _T_1038, _T_1059) @[Mux.scala 68:16]
      node _T_1062 = bits(rb.entries[3].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_1063 = eq(_T_1062, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_1063 : @[POSIT_Locality.scala 136:88]
        node _T_1064 = eq(_T_1011, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_1065 = eq(_T_1036, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_1066 = and(_T_1064, _T_1065) @[POSIT_Locality.scala 138:49]
        node _T_1067 = bits(rb.entries[3].request.operands[0].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_1068 = eq(_T_1061, _T_1067) @[POSIT_Locality.scala 139:59]
        node _T_1069 = and(_T_1066, _T_1068) @[POSIT_Locality.scala 139:49]
        when _T_1069 : @[POSIT_Locality.scala 139:106]
          node _T_1070 = bits(rb.entries[3].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_1071 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_1072 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_1073 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_1074 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_1075 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_1076 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_1077 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_1078 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_1079 = eq(UInt<3>("h07"), _T_1070) @[Mux.scala 68:19]
          node _T_1080 = mux(_T_1079, _T_1078, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_1081 = eq(UInt<3>("h06"), _T_1070) @[Mux.scala 68:19]
          node _T_1082 = mux(_T_1081, _T_1077, _T_1080) @[Mux.scala 68:16]
          node _T_1083 = eq(UInt<3>("h05"), _T_1070) @[Mux.scala 68:19]
          node _T_1084 = mux(_T_1083, _T_1076, _T_1082) @[Mux.scala 68:16]
          node _T_1085 = eq(UInt<3>("h04"), _T_1070) @[Mux.scala 68:19]
          node _T_1086 = mux(_T_1085, _T_1075, _T_1084) @[Mux.scala 68:16]
          node _T_1087 = eq(UInt<2>("h03"), _T_1070) @[Mux.scala 68:19]
          node _T_1088 = mux(_T_1087, _T_1074, _T_1086) @[Mux.scala 68:16]
          node _T_1089 = eq(UInt<2>("h02"), _T_1070) @[Mux.scala 68:19]
          node _T_1090 = mux(_T_1089, _T_1073, _T_1088) @[Mux.scala 68:16]
          node _T_1091 = eq(UInt<1>("h01"), _T_1070) @[Mux.scala 68:19]
          node _T_1092 = mux(_T_1091, _T_1072, _T_1090) @[Mux.scala 68:16]
          node _T_1093 = eq(UInt<1>("h00"), _T_1070) @[Mux.scala 68:19]
          node _T_1094 = mux(_T_1093, _T_1071, _T_1092) @[Mux.scala 68:16]
          rb.entries[3].request.operands[0].value <= _T_1094 @[POSIT_Locality.scala 140:89]
          rb.entries[3].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_1095 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1096 = eq(_T_1095, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1096 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h03"), UInt<8>("h00")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_1097 = bits(rb.entries[3].request.operands[1].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_1098 = bits(rb.entries[3].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_1099 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_1100 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_1101 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_1102 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_1103 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_1104 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_1105 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_1106 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_1107 = eq(UInt<3>("h07"), _T_1098) @[Mux.scala 68:19]
      node _T_1108 = mux(_T_1107, _T_1106, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1109 = eq(UInt<3>("h06"), _T_1098) @[Mux.scala 68:19]
      node _T_1110 = mux(_T_1109, _T_1105, _T_1108) @[Mux.scala 68:16]
      node _T_1111 = eq(UInt<3>("h05"), _T_1098) @[Mux.scala 68:19]
      node _T_1112 = mux(_T_1111, _T_1104, _T_1110) @[Mux.scala 68:16]
      node _T_1113 = eq(UInt<3>("h04"), _T_1098) @[Mux.scala 68:19]
      node _T_1114 = mux(_T_1113, _T_1103, _T_1112) @[Mux.scala 68:16]
      node _T_1115 = eq(UInt<2>("h03"), _T_1098) @[Mux.scala 68:19]
      node _T_1116 = mux(_T_1115, _T_1102, _T_1114) @[Mux.scala 68:16]
      node _T_1117 = eq(UInt<2>("h02"), _T_1098) @[Mux.scala 68:19]
      node _T_1118 = mux(_T_1117, _T_1101, _T_1116) @[Mux.scala 68:16]
      node _T_1119 = eq(UInt<1>("h01"), _T_1098) @[Mux.scala 68:19]
      node _T_1120 = mux(_T_1119, _T_1100, _T_1118) @[Mux.scala 68:16]
      node _T_1121 = eq(UInt<1>("h00"), _T_1098) @[Mux.scala 68:19]
      node _T_1122 = mux(_T_1121, _T_1099, _T_1120) @[Mux.scala 68:16]
      node _T_1123 = bits(rb.entries[3].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_1124 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_1125 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_1126 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_1127 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_1128 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_1129 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_1130 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_1131 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_1132 = eq(UInt<3>("h07"), _T_1123) @[Mux.scala 68:19]
      node _T_1133 = mux(_T_1132, _T_1131, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1134 = eq(UInt<3>("h06"), _T_1123) @[Mux.scala 68:19]
      node _T_1135 = mux(_T_1134, _T_1130, _T_1133) @[Mux.scala 68:16]
      node _T_1136 = eq(UInt<3>("h05"), _T_1123) @[Mux.scala 68:19]
      node _T_1137 = mux(_T_1136, _T_1129, _T_1135) @[Mux.scala 68:16]
      node _T_1138 = eq(UInt<3>("h04"), _T_1123) @[Mux.scala 68:19]
      node _T_1139 = mux(_T_1138, _T_1128, _T_1137) @[Mux.scala 68:16]
      node _T_1140 = eq(UInt<2>("h03"), _T_1123) @[Mux.scala 68:19]
      node _T_1141 = mux(_T_1140, _T_1127, _T_1139) @[Mux.scala 68:16]
      node _T_1142 = eq(UInt<2>("h02"), _T_1123) @[Mux.scala 68:19]
      node _T_1143 = mux(_T_1142, _T_1126, _T_1141) @[Mux.scala 68:16]
      node _T_1144 = eq(UInt<1>("h01"), _T_1123) @[Mux.scala 68:19]
      node _T_1145 = mux(_T_1144, _T_1125, _T_1143) @[Mux.scala 68:16]
      node _T_1146 = eq(UInt<1>("h00"), _T_1123) @[Mux.scala 68:19]
      node _T_1147 = mux(_T_1146, _T_1124, _T_1145) @[Mux.scala 68:16]
      node _T_1148 = bits(rb.entries[3].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_1149 = eq(_T_1148, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_1149 : @[POSIT_Locality.scala 136:88]
        node _T_1150 = eq(_T_1097, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_1151 = eq(_T_1122, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_1152 = and(_T_1150, _T_1151) @[POSIT_Locality.scala 138:49]
        node _T_1153 = bits(rb.entries[3].request.operands[1].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_1154 = eq(_T_1147, _T_1153) @[POSIT_Locality.scala 139:59]
        node _T_1155 = and(_T_1152, _T_1154) @[POSIT_Locality.scala 139:49]
        when _T_1155 : @[POSIT_Locality.scala 139:106]
          node _T_1156 = bits(rb.entries[3].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_1157 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_1158 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_1159 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_1160 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_1161 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_1162 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_1163 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_1164 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_1165 = eq(UInt<3>("h07"), _T_1156) @[Mux.scala 68:19]
          node _T_1166 = mux(_T_1165, _T_1164, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_1167 = eq(UInt<3>("h06"), _T_1156) @[Mux.scala 68:19]
          node _T_1168 = mux(_T_1167, _T_1163, _T_1166) @[Mux.scala 68:16]
          node _T_1169 = eq(UInt<3>("h05"), _T_1156) @[Mux.scala 68:19]
          node _T_1170 = mux(_T_1169, _T_1162, _T_1168) @[Mux.scala 68:16]
          node _T_1171 = eq(UInt<3>("h04"), _T_1156) @[Mux.scala 68:19]
          node _T_1172 = mux(_T_1171, _T_1161, _T_1170) @[Mux.scala 68:16]
          node _T_1173 = eq(UInt<2>("h03"), _T_1156) @[Mux.scala 68:19]
          node _T_1174 = mux(_T_1173, _T_1160, _T_1172) @[Mux.scala 68:16]
          node _T_1175 = eq(UInt<2>("h02"), _T_1156) @[Mux.scala 68:19]
          node _T_1176 = mux(_T_1175, _T_1159, _T_1174) @[Mux.scala 68:16]
          node _T_1177 = eq(UInt<1>("h01"), _T_1156) @[Mux.scala 68:19]
          node _T_1178 = mux(_T_1177, _T_1158, _T_1176) @[Mux.scala 68:16]
          node _T_1179 = eq(UInt<1>("h00"), _T_1156) @[Mux.scala 68:19]
          node _T_1180 = mux(_T_1179, _T_1157, _T_1178) @[Mux.scala 68:16]
          rb.entries[3].request.operands[1].value <= _T_1180 @[POSIT_Locality.scala 140:89]
          rb.entries[3].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_1181 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1182 = eq(_T_1181, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1182 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h03"), UInt<8>("h01")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_1183 = bits(rb.entries[3].request.operands[2].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_1184 = bits(rb.entries[3].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_1185 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_1186 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_1187 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_1188 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_1189 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_1190 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_1191 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_1192 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_1193 = eq(UInt<3>("h07"), _T_1184) @[Mux.scala 68:19]
      node _T_1194 = mux(_T_1193, _T_1192, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1195 = eq(UInt<3>("h06"), _T_1184) @[Mux.scala 68:19]
      node _T_1196 = mux(_T_1195, _T_1191, _T_1194) @[Mux.scala 68:16]
      node _T_1197 = eq(UInt<3>("h05"), _T_1184) @[Mux.scala 68:19]
      node _T_1198 = mux(_T_1197, _T_1190, _T_1196) @[Mux.scala 68:16]
      node _T_1199 = eq(UInt<3>("h04"), _T_1184) @[Mux.scala 68:19]
      node _T_1200 = mux(_T_1199, _T_1189, _T_1198) @[Mux.scala 68:16]
      node _T_1201 = eq(UInt<2>("h03"), _T_1184) @[Mux.scala 68:19]
      node _T_1202 = mux(_T_1201, _T_1188, _T_1200) @[Mux.scala 68:16]
      node _T_1203 = eq(UInt<2>("h02"), _T_1184) @[Mux.scala 68:19]
      node _T_1204 = mux(_T_1203, _T_1187, _T_1202) @[Mux.scala 68:16]
      node _T_1205 = eq(UInt<1>("h01"), _T_1184) @[Mux.scala 68:19]
      node _T_1206 = mux(_T_1205, _T_1186, _T_1204) @[Mux.scala 68:16]
      node _T_1207 = eq(UInt<1>("h00"), _T_1184) @[Mux.scala 68:19]
      node _T_1208 = mux(_T_1207, _T_1185, _T_1206) @[Mux.scala 68:16]
      node _T_1209 = bits(rb.entries[3].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_1210 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_1211 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_1212 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_1213 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_1214 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_1215 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_1216 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_1217 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_1218 = eq(UInt<3>("h07"), _T_1209) @[Mux.scala 68:19]
      node _T_1219 = mux(_T_1218, _T_1217, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1220 = eq(UInt<3>("h06"), _T_1209) @[Mux.scala 68:19]
      node _T_1221 = mux(_T_1220, _T_1216, _T_1219) @[Mux.scala 68:16]
      node _T_1222 = eq(UInt<3>("h05"), _T_1209) @[Mux.scala 68:19]
      node _T_1223 = mux(_T_1222, _T_1215, _T_1221) @[Mux.scala 68:16]
      node _T_1224 = eq(UInt<3>("h04"), _T_1209) @[Mux.scala 68:19]
      node _T_1225 = mux(_T_1224, _T_1214, _T_1223) @[Mux.scala 68:16]
      node _T_1226 = eq(UInt<2>("h03"), _T_1209) @[Mux.scala 68:19]
      node _T_1227 = mux(_T_1226, _T_1213, _T_1225) @[Mux.scala 68:16]
      node _T_1228 = eq(UInt<2>("h02"), _T_1209) @[Mux.scala 68:19]
      node _T_1229 = mux(_T_1228, _T_1212, _T_1227) @[Mux.scala 68:16]
      node _T_1230 = eq(UInt<1>("h01"), _T_1209) @[Mux.scala 68:19]
      node _T_1231 = mux(_T_1230, _T_1211, _T_1229) @[Mux.scala 68:16]
      node _T_1232 = eq(UInt<1>("h00"), _T_1209) @[Mux.scala 68:19]
      node _T_1233 = mux(_T_1232, _T_1210, _T_1231) @[Mux.scala 68:16]
      node _T_1234 = bits(rb.entries[3].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_1235 = eq(_T_1234, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_1235 : @[POSIT_Locality.scala 136:88]
        node _T_1236 = eq(_T_1183, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_1237 = eq(_T_1208, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_1238 = and(_T_1236, _T_1237) @[POSIT_Locality.scala 138:49]
        node _T_1239 = bits(rb.entries[3].request.operands[2].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_1240 = eq(_T_1233, _T_1239) @[POSIT_Locality.scala 139:59]
        node _T_1241 = and(_T_1238, _T_1240) @[POSIT_Locality.scala 139:49]
        when _T_1241 : @[POSIT_Locality.scala 139:106]
          node _T_1242 = bits(rb.entries[3].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_1243 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_1244 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_1245 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_1246 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_1247 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_1248 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_1249 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_1250 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_1251 = eq(UInt<3>("h07"), _T_1242) @[Mux.scala 68:19]
          node _T_1252 = mux(_T_1251, _T_1250, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_1253 = eq(UInt<3>("h06"), _T_1242) @[Mux.scala 68:19]
          node _T_1254 = mux(_T_1253, _T_1249, _T_1252) @[Mux.scala 68:16]
          node _T_1255 = eq(UInt<3>("h05"), _T_1242) @[Mux.scala 68:19]
          node _T_1256 = mux(_T_1255, _T_1248, _T_1254) @[Mux.scala 68:16]
          node _T_1257 = eq(UInt<3>("h04"), _T_1242) @[Mux.scala 68:19]
          node _T_1258 = mux(_T_1257, _T_1247, _T_1256) @[Mux.scala 68:16]
          node _T_1259 = eq(UInt<2>("h03"), _T_1242) @[Mux.scala 68:19]
          node _T_1260 = mux(_T_1259, _T_1246, _T_1258) @[Mux.scala 68:16]
          node _T_1261 = eq(UInt<2>("h02"), _T_1242) @[Mux.scala 68:19]
          node _T_1262 = mux(_T_1261, _T_1245, _T_1260) @[Mux.scala 68:16]
          node _T_1263 = eq(UInt<1>("h01"), _T_1242) @[Mux.scala 68:19]
          node _T_1264 = mux(_T_1263, _T_1244, _T_1262) @[Mux.scala 68:16]
          node _T_1265 = eq(UInt<1>("h00"), _T_1242) @[Mux.scala 68:19]
          node _T_1266 = mux(_T_1265, _T_1243, _T_1264) @[Mux.scala 68:16]
          rb.entries[3].request.operands[2].value <= _T_1266 @[POSIT_Locality.scala 140:89]
          rb.entries[3].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_1267 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1268 = eq(_T_1267, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1268 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h03"), UInt<8>("h02")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_1269 = bits(rb.entries[4].request.operands[0].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_1270 = bits(rb.entries[4].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_1271 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_1272 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_1273 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_1274 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_1275 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_1276 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_1277 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_1278 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_1279 = eq(UInt<3>("h07"), _T_1270) @[Mux.scala 68:19]
      node _T_1280 = mux(_T_1279, _T_1278, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1281 = eq(UInt<3>("h06"), _T_1270) @[Mux.scala 68:19]
      node _T_1282 = mux(_T_1281, _T_1277, _T_1280) @[Mux.scala 68:16]
      node _T_1283 = eq(UInt<3>("h05"), _T_1270) @[Mux.scala 68:19]
      node _T_1284 = mux(_T_1283, _T_1276, _T_1282) @[Mux.scala 68:16]
      node _T_1285 = eq(UInt<3>("h04"), _T_1270) @[Mux.scala 68:19]
      node _T_1286 = mux(_T_1285, _T_1275, _T_1284) @[Mux.scala 68:16]
      node _T_1287 = eq(UInt<2>("h03"), _T_1270) @[Mux.scala 68:19]
      node _T_1288 = mux(_T_1287, _T_1274, _T_1286) @[Mux.scala 68:16]
      node _T_1289 = eq(UInt<2>("h02"), _T_1270) @[Mux.scala 68:19]
      node _T_1290 = mux(_T_1289, _T_1273, _T_1288) @[Mux.scala 68:16]
      node _T_1291 = eq(UInt<1>("h01"), _T_1270) @[Mux.scala 68:19]
      node _T_1292 = mux(_T_1291, _T_1272, _T_1290) @[Mux.scala 68:16]
      node _T_1293 = eq(UInt<1>("h00"), _T_1270) @[Mux.scala 68:19]
      node _T_1294 = mux(_T_1293, _T_1271, _T_1292) @[Mux.scala 68:16]
      node _T_1295 = bits(rb.entries[4].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_1296 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_1297 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_1298 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_1299 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_1300 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_1301 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_1302 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_1303 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_1304 = eq(UInt<3>("h07"), _T_1295) @[Mux.scala 68:19]
      node _T_1305 = mux(_T_1304, _T_1303, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1306 = eq(UInt<3>("h06"), _T_1295) @[Mux.scala 68:19]
      node _T_1307 = mux(_T_1306, _T_1302, _T_1305) @[Mux.scala 68:16]
      node _T_1308 = eq(UInt<3>("h05"), _T_1295) @[Mux.scala 68:19]
      node _T_1309 = mux(_T_1308, _T_1301, _T_1307) @[Mux.scala 68:16]
      node _T_1310 = eq(UInt<3>("h04"), _T_1295) @[Mux.scala 68:19]
      node _T_1311 = mux(_T_1310, _T_1300, _T_1309) @[Mux.scala 68:16]
      node _T_1312 = eq(UInt<2>("h03"), _T_1295) @[Mux.scala 68:19]
      node _T_1313 = mux(_T_1312, _T_1299, _T_1311) @[Mux.scala 68:16]
      node _T_1314 = eq(UInt<2>("h02"), _T_1295) @[Mux.scala 68:19]
      node _T_1315 = mux(_T_1314, _T_1298, _T_1313) @[Mux.scala 68:16]
      node _T_1316 = eq(UInt<1>("h01"), _T_1295) @[Mux.scala 68:19]
      node _T_1317 = mux(_T_1316, _T_1297, _T_1315) @[Mux.scala 68:16]
      node _T_1318 = eq(UInt<1>("h00"), _T_1295) @[Mux.scala 68:19]
      node _T_1319 = mux(_T_1318, _T_1296, _T_1317) @[Mux.scala 68:16]
      node _T_1320 = bits(rb.entries[4].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_1321 = eq(_T_1320, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_1321 : @[POSIT_Locality.scala 136:88]
        node _T_1322 = eq(_T_1269, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_1323 = eq(_T_1294, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_1324 = and(_T_1322, _T_1323) @[POSIT_Locality.scala 138:49]
        node _T_1325 = bits(rb.entries[4].request.operands[0].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_1326 = eq(_T_1319, _T_1325) @[POSIT_Locality.scala 139:59]
        node _T_1327 = and(_T_1324, _T_1326) @[POSIT_Locality.scala 139:49]
        when _T_1327 : @[POSIT_Locality.scala 139:106]
          node _T_1328 = bits(rb.entries[4].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_1329 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_1330 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_1331 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_1332 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_1333 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_1334 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_1335 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_1336 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_1337 = eq(UInt<3>("h07"), _T_1328) @[Mux.scala 68:19]
          node _T_1338 = mux(_T_1337, _T_1336, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_1339 = eq(UInt<3>("h06"), _T_1328) @[Mux.scala 68:19]
          node _T_1340 = mux(_T_1339, _T_1335, _T_1338) @[Mux.scala 68:16]
          node _T_1341 = eq(UInt<3>("h05"), _T_1328) @[Mux.scala 68:19]
          node _T_1342 = mux(_T_1341, _T_1334, _T_1340) @[Mux.scala 68:16]
          node _T_1343 = eq(UInt<3>("h04"), _T_1328) @[Mux.scala 68:19]
          node _T_1344 = mux(_T_1343, _T_1333, _T_1342) @[Mux.scala 68:16]
          node _T_1345 = eq(UInt<2>("h03"), _T_1328) @[Mux.scala 68:19]
          node _T_1346 = mux(_T_1345, _T_1332, _T_1344) @[Mux.scala 68:16]
          node _T_1347 = eq(UInt<2>("h02"), _T_1328) @[Mux.scala 68:19]
          node _T_1348 = mux(_T_1347, _T_1331, _T_1346) @[Mux.scala 68:16]
          node _T_1349 = eq(UInt<1>("h01"), _T_1328) @[Mux.scala 68:19]
          node _T_1350 = mux(_T_1349, _T_1330, _T_1348) @[Mux.scala 68:16]
          node _T_1351 = eq(UInt<1>("h00"), _T_1328) @[Mux.scala 68:19]
          node _T_1352 = mux(_T_1351, _T_1329, _T_1350) @[Mux.scala 68:16]
          rb.entries[4].request.operands[0].value <= _T_1352 @[POSIT_Locality.scala 140:89]
          rb.entries[4].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_1353 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1354 = eq(_T_1353, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1354 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h04"), UInt<8>("h00")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_1355 = bits(rb.entries[4].request.operands[1].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_1356 = bits(rb.entries[4].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_1357 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_1358 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_1359 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_1360 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_1361 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_1362 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_1363 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_1364 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_1365 = eq(UInt<3>("h07"), _T_1356) @[Mux.scala 68:19]
      node _T_1366 = mux(_T_1365, _T_1364, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1367 = eq(UInt<3>("h06"), _T_1356) @[Mux.scala 68:19]
      node _T_1368 = mux(_T_1367, _T_1363, _T_1366) @[Mux.scala 68:16]
      node _T_1369 = eq(UInt<3>("h05"), _T_1356) @[Mux.scala 68:19]
      node _T_1370 = mux(_T_1369, _T_1362, _T_1368) @[Mux.scala 68:16]
      node _T_1371 = eq(UInt<3>("h04"), _T_1356) @[Mux.scala 68:19]
      node _T_1372 = mux(_T_1371, _T_1361, _T_1370) @[Mux.scala 68:16]
      node _T_1373 = eq(UInt<2>("h03"), _T_1356) @[Mux.scala 68:19]
      node _T_1374 = mux(_T_1373, _T_1360, _T_1372) @[Mux.scala 68:16]
      node _T_1375 = eq(UInt<2>("h02"), _T_1356) @[Mux.scala 68:19]
      node _T_1376 = mux(_T_1375, _T_1359, _T_1374) @[Mux.scala 68:16]
      node _T_1377 = eq(UInt<1>("h01"), _T_1356) @[Mux.scala 68:19]
      node _T_1378 = mux(_T_1377, _T_1358, _T_1376) @[Mux.scala 68:16]
      node _T_1379 = eq(UInt<1>("h00"), _T_1356) @[Mux.scala 68:19]
      node _T_1380 = mux(_T_1379, _T_1357, _T_1378) @[Mux.scala 68:16]
      node _T_1381 = bits(rb.entries[4].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_1382 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_1383 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_1384 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_1385 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_1386 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_1387 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_1388 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_1389 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_1390 = eq(UInt<3>("h07"), _T_1381) @[Mux.scala 68:19]
      node _T_1391 = mux(_T_1390, _T_1389, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1392 = eq(UInt<3>("h06"), _T_1381) @[Mux.scala 68:19]
      node _T_1393 = mux(_T_1392, _T_1388, _T_1391) @[Mux.scala 68:16]
      node _T_1394 = eq(UInt<3>("h05"), _T_1381) @[Mux.scala 68:19]
      node _T_1395 = mux(_T_1394, _T_1387, _T_1393) @[Mux.scala 68:16]
      node _T_1396 = eq(UInt<3>("h04"), _T_1381) @[Mux.scala 68:19]
      node _T_1397 = mux(_T_1396, _T_1386, _T_1395) @[Mux.scala 68:16]
      node _T_1398 = eq(UInt<2>("h03"), _T_1381) @[Mux.scala 68:19]
      node _T_1399 = mux(_T_1398, _T_1385, _T_1397) @[Mux.scala 68:16]
      node _T_1400 = eq(UInt<2>("h02"), _T_1381) @[Mux.scala 68:19]
      node _T_1401 = mux(_T_1400, _T_1384, _T_1399) @[Mux.scala 68:16]
      node _T_1402 = eq(UInt<1>("h01"), _T_1381) @[Mux.scala 68:19]
      node _T_1403 = mux(_T_1402, _T_1383, _T_1401) @[Mux.scala 68:16]
      node _T_1404 = eq(UInt<1>("h00"), _T_1381) @[Mux.scala 68:19]
      node _T_1405 = mux(_T_1404, _T_1382, _T_1403) @[Mux.scala 68:16]
      node _T_1406 = bits(rb.entries[4].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_1407 = eq(_T_1406, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_1407 : @[POSIT_Locality.scala 136:88]
        node _T_1408 = eq(_T_1355, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_1409 = eq(_T_1380, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_1410 = and(_T_1408, _T_1409) @[POSIT_Locality.scala 138:49]
        node _T_1411 = bits(rb.entries[4].request.operands[1].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_1412 = eq(_T_1405, _T_1411) @[POSIT_Locality.scala 139:59]
        node _T_1413 = and(_T_1410, _T_1412) @[POSIT_Locality.scala 139:49]
        when _T_1413 : @[POSIT_Locality.scala 139:106]
          node _T_1414 = bits(rb.entries[4].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_1415 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_1416 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_1417 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_1418 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_1419 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_1420 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_1421 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_1422 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_1423 = eq(UInt<3>("h07"), _T_1414) @[Mux.scala 68:19]
          node _T_1424 = mux(_T_1423, _T_1422, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_1425 = eq(UInt<3>("h06"), _T_1414) @[Mux.scala 68:19]
          node _T_1426 = mux(_T_1425, _T_1421, _T_1424) @[Mux.scala 68:16]
          node _T_1427 = eq(UInt<3>("h05"), _T_1414) @[Mux.scala 68:19]
          node _T_1428 = mux(_T_1427, _T_1420, _T_1426) @[Mux.scala 68:16]
          node _T_1429 = eq(UInt<3>("h04"), _T_1414) @[Mux.scala 68:19]
          node _T_1430 = mux(_T_1429, _T_1419, _T_1428) @[Mux.scala 68:16]
          node _T_1431 = eq(UInt<2>("h03"), _T_1414) @[Mux.scala 68:19]
          node _T_1432 = mux(_T_1431, _T_1418, _T_1430) @[Mux.scala 68:16]
          node _T_1433 = eq(UInt<2>("h02"), _T_1414) @[Mux.scala 68:19]
          node _T_1434 = mux(_T_1433, _T_1417, _T_1432) @[Mux.scala 68:16]
          node _T_1435 = eq(UInt<1>("h01"), _T_1414) @[Mux.scala 68:19]
          node _T_1436 = mux(_T_1435, _T_1416, _T_1434) @[Mux.scala 68:16]
          node _T_1437 = eq(UInt<1>("h00"), _T_1414) @[Mux.scala 68:19]
          node _T_1438 = mux(_T_1437, _T_1415, _T_1436) @[Mux.scala 68:16]
          rb.entries[4].request.operands[1].value <= _T_1438 @[POSIT_Locality.scala 140:89]
          rb.entries[4].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_1439 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1440 = eq(_T_1439, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1440 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h04"), UInt<8>("h01")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_1441 = bits(rb.entries[4].request.operands[2].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_1442 = bits(rb.entries[4].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_1443 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_1444 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_1445 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_1446 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_1447 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_1448 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_1449 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_1450 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_1451 = eq(UInt<3>("h07"), _T_1442) @[Mux.scala 68:19]
      node _T_1452 = mux(_T_1451, _T_1450, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1453 = eq(UInt<3>("h06"), _T_1442) @[Mux.scala 68:19]
      node _T_1454 = mux(_T_1453, _T_1449, _T_1452) @[Mux.scala 68:16]
      node _T_1455 = eq(UInt<3>("h05"), _T_1442) @[Mux.scala 68:19]
      node _T_1456 = mux(_T_1455, _T_1448, _T_1454) @[Mux.scala 68:16]
      node _T_1457 = eq(UInt<3>("h04"), _T_1442) @[Mux.scala 68:19]
      node _T_1458 = mux(_T_1457, _T_1447, _T_1456) @[Mux.scala 68:16]
      node _T_1459 = eq(UInt<2>("h03"), _T_1442) @[Mux.scala 68:19]
      node _T_1460 = mux(_T_1459, _T_1446, _T_1458) @[Mux.scala 68:16]
      node _T_1461 = eq(UInt<2>("h02"), _T_1442) @[Mux.scala 68:19]
      node _T_1462 = mux(_T_1461, _T_1445, _T_1460) @[Mux.scala 68:16]
      node _T_1463 = eq(UInt<1>("h01"), _T_1442) @[Mux.scala 68:19]
      node _T_1464 = mux(_T_1463, _T_1444, _T_1462) @[Mux.scala 68:16]
      node _T_1465 = eq(UInt<1>("h00"), _T_1442) @[Mux.scala 68:19]
      node _T_1466 = mux(_T_1465, _T_1443, _T_1464) @[Mux.scala 68:16]
      node _T_1467 = bits(rb.entries[4].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_1468 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_1469 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_1470 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_1471 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_1472 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_1473 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_1474 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_1475 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_1476 = eq(UInt<3>("h07"), _T_1467) @[Mux.scala 68:19]
      node _T_1477 = mux(_T_1476, _T_1475, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1478 = eq(UInt<3>("h06"), _T_1467) @[Mux.scala 68:19]
      node _T_1479 = mux(_T_1478, _T_1474, _T_1477) @[Mux.scala 68:16]
      node _T_1480 = eq(UInt<3>("h05"), _T_1467) @[Mux.scala 68:19]
      node _T_1481 = mux(_T_1480, _T_1473, _T_1479) @[Mux.scala 68:16]
      node _T_1482 = eq(UInt<3>("h04"), _T_1467) @[Mux.scala 68:19]
      node _T_1483 = mux(_T_1482, _T_1472, _T_1481) @[Mux.scala 68:16]
      node _T_1484 = eq(UInt<2>("h03"), _T_1467) @[Mux.scala 68:19]
      node _T_1485 = mux(_T_1484, _T_1471, _T_1483) @[Mux.scala 68:16]
      node _T_1486 = eq(UInt<2>("h02"), _T_1467) @[Mux.scala 68:19]
      node _T_1487 = mux(_T_1486, _T_1470, _T_1485) @[Mux.scala 68:16]
      node _T_1488 = eq(UInt<1>("h01"), _T_1467) @[Mux.scala 68:19]
      node _T_1489 = mux(_T_1488, _T_1469, _T_1487) @[Mux.scala 68:16]
      node _T_1490 = eq(UInt<1>("h00"), _T_1467) @[Mux.scala 68:19]
      node _T_1491 = mux(_T_1490, _T_1468, _T_1489) @[Mux.scala 68:16]
      node _T_1492 = bits(rb.entries[4].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_1493 = eq(_T_1492, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_1493 : @[POSIT_Locality.scala 136:88]
        node _T_1494 = eq(_T_1441, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_1495 = eq(_T_1466, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_1496 = and(_T_1494, _T_1495) @[POSIT_Locality.scala 138:49]
        node _T_1497 = bits(rb.entries[4].request.operands[2].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_1498 = eq(_T_1491, _T_1497) @[POSIT_Locality.scala 139:59]
        node _T_1499 = and(_T_1496, _T_1498) @[POSIT_Locality.scala 139:49]
        when _T_1499 : @[POSIT_Locality.scala 139:106]
          node _T_1500 = bits(rb.entries[4].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_1501 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_1502 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_1503 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_1504 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_1505 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_1506 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_1507 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_1508 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_1509 = eq(UInt<3>("h07"), _T_1500) @[Mux.scala 68:19]
          node _T_1510 = mux(_T_1509, _T_1508, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_1511 = eq(UInt<3>("h06"), _T_1500) @[Mux.scala 68:19]
          node _T_1512 = mux(_T_1511, _T_1507, _T_1510) @[Mux.scala 68:16]
          node _T_1513 = eq(UInt<3>("h05"), _T_1500) @[Mux.scala 68:19]
          node _T_1514 = mux(_T_1513, _T_1506, _T_1512) @[Mux.scala 68:16]
          node _T_1515 = eq(UInt<3>("h04"), _T_1500) @[Mux.scala 68:19]
          node _T_1516 = mux(_T_1515, _T_1505, _T_1514) @[Mux.scala 68:16]
          node _T_1517 = eq(UInt<2>("h03"), _T_1500) @[Mux.scala 68:19]
          node _T_1518 = mux(_T_1517, _T_1504, _T_1516) @[Mux.scala 68:16]
          node _T_1519 = eq(UInt<2>("h02"), _T_1500) @[Mux.scala 68:19]
          node _T_1520 = mux(_T_1519, _T_1503, _T_1518) @[Mux.scala 68:16]
          node _T_1521 = eq(UInt<1>("h01"), _T_1500) @[Mux.scala 68:19]
          node _T_1522 = mux(_T_1521, _T_1502, _T_1520) @[Mux.scala 68:16]
          node _T_1523 = eq(UInt<1>("h00"), _T_1500) @[Mux.scala 68:19]
          node _T_1524 = mux(_T_1523, _T_1501, _T_1522) @[Mux.scala 68:16]
          rb.entries[4].request.operands[2].value <= _T_1524 @[POSIT_Locality.scala 140:89]
          rb.entries[4].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_1525 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1526 = eq(_T_1525, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1526 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h04"), UInt<8>("h02")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_1527 = bits(rb.entries[5].request.operands[0].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_1528 = bits(rb.entries[5].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_1529 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_1530 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_1531 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_1532 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_1533 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_1534 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_1535 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_1536 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_1537 = eq(UInt<3>("h07"), _T_1528) @[Mux.scala 68:19]
      node _T_1538 = mux(_T_1537, _T_1536, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1539 = eq(UInt<3>("h06"), _T_1528) @[Mux.scala 68:19]
      node _T_1540 = mux(_T_1539, _T_1535, _T_1538) @[Mux.scala 68:16]
      node _T_1541 = eq(UInt<3>("h05"), _T_1528) @[Mux.scala 68:19]
      node _T_1542 = mux(_T_1541, _T_1534, _T_1540) @[Mux.scala 68:16]
      node _T_1543 = eq(UInt<3>("h04"), _T_1528) @[Mux.scala 68:19]
      node _T_1544 = mux(_T_1543, _T_1533, _T_1542) @[Mux.scala 68:16]
      node _T_1545 = eq(UInt<2>("h03"), _T_1528) @[Mux.scala 68:19]
      node _T_1546 = mux(_T_1545, _T_1532, _T_1544) @[Mux.scala 68:16]
      node _T_1547 = eq(UInt<2>("h02"), _T_1528) @[Mux.scala 68:19]
      node _T_1548 = mux(_T_1547, _T_1531, _T_1546) @[Mux.scala 68:16]
      node _T_1549 = eq(UInt<1>("h01"), _T_1528) @[Mux.scala 68:19]
      node _T_1550 = mux(_T_1549, _T_1530, _T_1548) @[Mux.scala 68:16]
      node _T_1551 = eq(UInt<1>("h00"), _T_1528) @[Mux.scala 68:19]
      node _T_1552 = mux(_T_1551, _T_1529, _T_1550) @[Mux.scala 68:16]
      node _T_1553 = bits(rb.entries[5].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_1554 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_1555 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_1556 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_1557 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_1558 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_1559 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_1560 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_1561 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_1562 = eq(UInt<3>("h07"), _T_1553) @[Mux.scala 68:19]
      node _T_1563 = mux(_T_1562, _T_1561, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1564 = eq(UInt<3>("h06"), _T_1553) @[Mux.scala 68:19]
      node _T_1565 = mux(_T_1564, _T_1560, _T_1563) @[Mux.scala 68:16]
      node _T_1566 = eq(UInt<3>("h05"), _T_1553) @[Mux.scala 68:19]
      node _T_1567 = mux(_T_1566, _T_1559, _T_1565) @[Mux.scala 68:16]
      node _T_1568 = eq(UInt<3>("h04"), _T_1553) @[Mux.scala 68:19]
      node _T_1569 = mux(_T_1568, _T_1558, _T_1567) @[Mux.scala 68:16]
      node _T_1570 = eq(UInt<2>("h03"), _T_1553) @[Mux.scala 68:19]
      node _T_1571 = mux(_T_1570, _T_1557, _T_1569) @[Mux.scala 68:16]
      node _T_1572 = eq(UInt<2>("h02"), _T_1553) @[Mux.scala 68:19]
      node _T_1573 = mux(_T_1572, _T_1556, _T_1571) @[Mux.scala 68:16]
      node _T_1574 = eq(UInt<1>("h01"), _T_1553) @[Mux.scala 68:19]
      node _T_1575 = mux(_T_1574, _T_1555, _T_1573) @[Mux.scala 68:16]
      node _T_1576 = eq(UInt<1>("h00"), _T_1553) @[Mux.scala 68:19]
      node _T_1577 = mux(_T_1576, _T_1554, _T_1575) @[Mux.scala 68:16]
      node _T_1578 = bits(rb.entries[5].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_1579 = eq(_T_1578, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_1579 : @[POSIT_Locality.scala 136:88]
        node _T_1580 = eq(_T_1527, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_1581 = eq(_T_1552, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_1582 = and(_T_1580, _T_1581) @[POSIT_Locality.scala 138:49]
        node _T_1583 = bits(rb.entries[5].request.operands[0].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_1584 = eq(_T_1577, _T_1583) @[POSIT_Locality.scala 139:59]
        node _T_1585 = and(_T_1582, _T_1584) @[POSIT_Locality.scala 139:49]
        when _T_1585 : @[POSIT_Locality.scala 139:106]
          node _T_1586 = bits(rb.entries[5].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_1587 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_1588 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_1589 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_1590 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_1591 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_1592 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_1593 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_1594 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_1595 = eq(UInt<3>("h07"), _T_1586) @[Mux.scala 68:19]
          node _T_1596 = mux(_T_1595, _T_1594, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_1597 = eq(UInt<3>("h06"), _T_1586) @[Mux.scala 68:19]
          node _T_1598 = mux(_T_1597, _T_1593, _T_1596) @[Mux.scala 68:16]
          node _T_1599 = eq(UInt<3>("h05"), _T_1586) @[Mux.scala 68:19]
          node _T_1600 = mux(_T_1599, _T_1592, _T_1598) @[Mux.scala 68:16]
          node _T_1601 = eq(UInt<3>("h04"), _T_1586) @[Mux.scala 68:19]
          node _T_1602 = mux(_T_1601, _T_1591, _T_1600) @[Mux.scala 68:16]
          node _T_1603 = eq(UInt<2>("h03"), _T_1586) @[Mux.scala 68:19]
          node _T_1604 = mux(_T_1603, _T_1590, _T_1602) @[Mux.scala 68:16]
          node _T_1605 = eq(UInt<2>("h02"), _T_1586) @[Mux.scala 68:19]
          node _T_1606 = mux(_T_1605, _T_1589, _T_1604) @[Mux.scala 68:16]
          node _T_1607 = eq(UInt<1>("h01"), _T_1586) @[Mux.scala 68:19]
          node _T_1608 = mux(_T_1607, _T_1588, _T_1606) @[Mux.scala 68:16]
          node _T_1609 = eq(UInt<1>("h00"), _T_1586) @[Mux.scala 68:19]
          node _T_1610 = mux(_T_1609, _T_1587, _T_1608) @[Mux.scala 68:16]
          rb.entries[5].request.operands[0].value <= _T_1610 @[POSIT_Locality.scala 140:89]
          rb.entries[5].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_1611 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1612 = eq(_T_1611, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1612 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h05"), UInt<8>("h00")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_1613 = bits(rb.entries[5].request.operands[1].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_1614 = bits(rb.entries[5].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_1615 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_1616 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_1617 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_1618 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_1619 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_1620 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_1621 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_1622 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_1623 = eq(UInt<3>("h07"), _T_1614) @[Mux.scala 68:19]
      node _T_1624 = mux(_T_1623, _T_1622, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1625 = eq(UInt<3>("h06"), _T_1614) @[Mux.scala 68:19]
      node _T_1626 = mux(_T_1625, _T_1621, _T_1624) @[Mux.scala 68:16]
      node _T_1627 = eq(UInt<3>("h05"), _T_1614) @[Mux.scala 68:19]
      node _T_1628 = mux(_T_1627, _T_1620, _T_1626) @[Mux.scala 68:16]
      node _T_1629 = eq(UInt<3>("h04"), _T_1614) @[Mux.scala 68:19]
      node _T_1630 = mux(_T_1629, _T_1619, _T_1628) @[Mux.scala 68:16]
      node _T_1631 = eq(UInt<2>("h03"), _T_1614) @[Mux.scala 68:19]
      node _T_1632 = mux(_T_1631, _T_1618, _T_1630) @[Mux.scala 68:16]
      node _T_1633 = eq(UInt<2>("h02"), _T_1614) @[Mux.scala 68:19]
      node _T_1634 = mux(_T_1633, _T_1617, _T_1632) @[Mux.scala 68:16]
      node _T_1635 = eq(UInt<1>("h01"), _T_1614) @[Mux.scala 68:19]
      node _T_1636 = mux(_T_1635, _T_1616, _T_1634) @[Mux.scala 68:16]
      node _T_1637 = eq(UInt<1>("h00"), _T_1614) @[Mux.scala 68:19]
      node _T_1638 = mux(_T_1637, _T_1615, _T_1636) @[Mux.scala 68:16]
      node _T_1639 = bits(rb.entries[5].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_1640 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_1641 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_1642 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_1643 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_1644 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_1645 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_1646 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_1647 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_1648 = eq(UInt<3>("h07"), _T_1639) @[Mux.scala 68:19]
      node _T_1649 = mux(_T_1648, _T_1647, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1650 = eq(UInt<3>("h06"), _T_1639) @[Mux.scala 68:19]
      node _T_1651 = mux(_T_1650, _T_1646, _T_1649) @[Mux.scala 68:16]
      node _T_1652 = eq(UInt<3>("h05"), _T_1639) @[Mux.scala 68:19]
      node _T_1653 = mux(_T_1652, _T_1645, _T_1651) @[Mux.scala 68:16]
      node _T_1654 = eq(UInt<3>("h04"), _T_1639) @[Mux.scala 68:19]
      node _T_1655 = mux(_T_1654, _T_1644, _T_1653) @[Mux.scala 68:16]
      node _T_1656 = eq(UInt<2>("h03"), _T_1639) @[Mux.scala 68:19]
      node _T_1657 = mux(_T_1656, _T_1643, _T_1655) @[Mux.scala 68:16]
      node _T_1658 = eq(UInt<2>("h02"), _T_1639) @[Mux.scala 68:19]
      node _T_1659 = mux(_T_1658, _T_1642, _T_1657) @[Mux.scala 68:16]
      node _T_1660 = eq(UInt<1>("h01"), _T_1639) @[Mux.scala 68:19]
      node _T_1661 = mux(_T_1660, _T_1641, _T_1659) @[Mux.scala 68:16]
      node _T_1662 = eq(UInt<1>("h00"), _T_1639) @[Mux.scala 68:19]
      node _T_1663 = mux(_T_1662, _T_1640, _T_1661) @[Mux.scala 68:16]
      node _T_1664 = bits(rb.entries[5].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_1665 = eq(_T_1664, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_1665 : @[POSIT_Locality.scala 136:88]
        node _T_1666 = eq(_T_1613, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_1667 = eq(_T_1638, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_1668 = and(_T_1666, _T_1667) @[POSIT_Locality.scala 138:49]
        node _T_1669 = bits(rb.entries[5].request.operands[1].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_1670 = eq(_T_1663, _T_1669) @[POSIT_Locality.scala 139:59]
        node _T_1671 = and(_T_1668, _T_1670) @[POSIT_Locality.scala 139:49]
        when _T_1671 : @[POSIT_Locality.scala 139:106]
          node _T_1672 = bits(rb.entries[5].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_1673 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_1674 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_1675 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_1676 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_1677 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_1678 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_1679 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_1680 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_1681 = eq(UInt<3>("h07"), _T_1672) @[Mux.scala 68:19]
          node _T_1682 = mux(_T_1681, _T_1680, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_1683 = eq(UInt<3>("h06"), _T_1672) @[Mux.scala 68:19]
          node _T_1684 = mux(_T_1683, _T_1679, _T_1682) @[Mux.scala 68:16]
          node _T_1685 = eq(UInt<3>("h05"), _T_1672) @[Mux.scala 68:19]
          node _T_1686 = mux(_T_1685, _T_1678, _T_1684) @[Mux.scala 68:16]
          node _T_1687 = eq(UInt<3>("h04"), _T_1672) @[Mux.scala 68:19]
          node _T_1688 = mux(_T_1687, _T_1677, _T_1686) @[Mux.scala 68:16]
          node _T_1689 = eq(UInt<2>("h03"), _T_1672) @[Mux.scala 68:19]
          node _T_1690 = mux(_T_1689, _T_1676, _T_1688) @[Mux.scala 68:16]
          node _T_1691 = eq(UInt<2>("h02"), _T_1672) @[Mux.scala 68:19]
          node _T_1692 = mux(_T_1691, _T_1675, _T_1690) @[Mux.scala 68:16]
          node _T_1693 = eq(UInt<1>("h01"), _T_1672) @[Mux.scala 68:19]
          node _T_1694 = mux(_T_1693, _T_1674, _T_1692) @[Mux.scala 68:16]
          node _T_1695 = eq(UInt<1>("h00"), _T_1672) @[Mux.scala 68:19]
          node _T_1696 = mux(_T_1695, _T_1673, _T_1694) @[Mux.scala 68:16]
          rb.entries[5].request.operands[1].value <= _T_1696 @[POSIT_Locality.scala 140:89]
          rb.entries[5].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_1697 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1698 = eq(_T_1697, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1698 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h05"), UInt<8>("h01")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_1699 = bits(rb.entries[5].request.operands[2].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_1700 = bits(rb.entries[5].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_1701 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_1702 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_1703 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_1704 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_1705 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_1706 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_1707 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_1708 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_1709 = eq(UInt<3>("h07"), _T_1700) @[Mux.scala 68:19]
      node _T_1710 = mux(_T_1709, _T_1708, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1711 = eq(UInt<3>("h06"), _T_1700) @[Mux.scala 68:19]
      node _T_1712 = mux(_T_1711, _T_1707, _T_1710) @[Mux.scala 68:16]
      node _T_1713 = eq(UInt<3>("h05"), _T_1700) @[Mux.scala 68:19]
      node _T_1714 = mux(_T_1713, _T_1706, _T_1712) @[Mux.scala 68:16]
      node _T_1715 = eq(UInt<3>("h04"), _T_1700) @[Mux.scala 68:19]
      node _T_1716 = mux(_T_1715, _T_1705, _T_1714) @[Mux.scala 68:16]
      node _T_1717 = eq(UInt<2>("h03"), _T_1700) @[Mux.scala 68:19]
      node _T_1718 = mux(_T_1717, _T_1704, _T_1716) @[Mux.scala 68:16]
      node _T_1719 = eq(UInt<2>("h02"), _T_1700) @[Mux.scala 68:19]
      node _T_1720 = mux(_T_1719, _T_1703, _T_1718) @[Mux.scala 68:16]
      node _T_1721 = eq(UInt<1>("h01"), _T_1700) @[Mux.scala 68:19]
      node _T_1722 = mux(_T_1721, _T_1702, _T_1720) @[Mux.scala 68:16]
      node _T_1723 = eq(UInt<1>("h00"), _T_1700) @[Mux.scala 68:19]
      node _T_1724 = mux(_T_1723, _T_1701, _T_1722) @[Mux.scala 68:16]
      node _T_1725 = bits(rb.entries[5].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_1726 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_1727 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_1728 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_1729 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_1730 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_1731 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_1732 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_1733 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_1734 = eq(UInt<3>("h07"), _T_1725) @[Mux.scala 68:19]
      node _T_1735 = mux(_T_1734, _T_1733, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1736 = eq(UInt<3>("h06"), _T_1725) @[Mux.scala 68:19]
      node _T_1737 = mux(_T_1736, _T_1732, _T_1735) @[Mux.scala 68:16]
      node _T_1738 = eq(UInt<3>("h05"), _T_1725) @[Mux.scala 68:19]
      node _T_1739 = mux(_T_1738, _T_1731, _T_1737) @[Mux.scala 68:16]
      node _T_1740 = eq(UInt<3>("h04"), _T_1725) @[Mux.scala 68:19]
      node _T_1741 = mux(_T_1740, _T_1730, _T_1739) @[Mux.scala 68:16]
      node _T_1742 = eq(UInt<2>("h03"), _T_1725) @[Mux.scala 68:19]
      node _T_1743 = mux(_T_1742, _T_1729, _T_1741) @[Mux.scala 68:16]
      node _T_1744 = eq(UInt<2>("h02"), _T_1725) @[Mux.scala 68:19]
      node _T_1745 = mux(_T_1744, _T_1728, _T_1743) @[Mux.scala 68:16]
      node _T_1746 = eq(UInt<1>("h01"), _T_1725) @[Mux.scala 68:19]
      node _T_1747 = mux(_T_1746, _T_1727, _T_1745) @[Mux.scala 68:16]
      node _T_1748 = eq(UInt<1>("h00"), _T_1725) @[Mux.scala 68:19]
      node _T_1749 = mux(_T_1748, _T_1726, _T_1747) @[Mux.scala 68:16]
      node _T_1750 = bits(rb.entries[5].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_1751 = eq(_T_1750, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_1751 : @[POSIT_Locality.scala 136:88]
        node _T_1752 = eq(_T_1699, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_1753 = eq(_T_1724, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_1754 = and(_T_1752, _T_1753) @[POSIT_Locality.scala 138:49]
        node _T_1755 = bits(rb.entries[5].request.operands[2].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_1756 = eq(_T_1749, _T_1755) @[POSIT_Locality.scala 139:59]
        node _T_1757 = and(_T_1754, _T_1756) @[POSIT_Locality.scala 139:49]
        when _T_1757 : @[POSIT_Locality.scala 139:106]
          node _T_1758 = bits(rb.entries[5].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_1759 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_1760 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_1761 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_1762 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_1763 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_1764 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_1765 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_1766 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_1767 = eq(UInt<3>("h07"), _T_1758) @[Mux.scala 68:19]
          node _T_1768 = mux(_T_1767, _T_1766, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_1769 = eq(UInt<3>("h06"), _T_1758) @[Mux.scala 68:19]
          node _T_1770 = mux(_T_1769, _T_1765, _T_1768) @[Mux.scala 68:16]
          node _T_1771 = eq(UInt<3>("h05"), _T_1758) @[Mux.scala 68:19]
          node _T_1772 = mux(_T_1771, _T_1764, _T_1770) @[Mux.scala 68:16]
          node _T_1773 = eq(UInt<3>("h04"), _T_1758) @[Mux.scala 68:19]
          node _T_1774 = mux(_T_1773, _T_1763, _T_1772) @[Mux.scala 68:16]
          node _T_1775 = eq(UInt<2>("h03"), _T_1758) @[Mux.scala 68:19]
          node _T_1776 = mux(_T_1775, _T_1762, _T_1774) @[Mux.scala 68:16]
          node _T_1777 = eq(UInt<2>("h02"), _T_1758) @[Mux.scala 68:19]
          node _T_1778 = mux(_T_1777, _T_1761, _T_1776) @[Mux.scala 68:16]
          node _T_1779 = eq(UInt<1>("h01"), _T_1758) @[Mux.scala 68:19]
          node _T_1780 = mux(_T_1779, _T_1760, _T_1778) @[Mux.scala 68:16]
          node _T_1781 = eq(UInt<1>("h00"), _T_1758) @[Mux.scala 68:19]
          node _T_1782 = mux(_T_1781, _T_1759, _T_1780) @[Mux.scala 68:16]
          rb.entries[5].request.operands[2].value <= _T_1782 @[POSIT_Locality.scala 140:89]
          rb.entries[5].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_1783 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1784 = eq(_T_1783, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1784 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h05"), UInt<8>("h02")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_1785 = bits(rb.entries[6].request.operands[0].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_1786 = bits(rb.entries[6].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_1787 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_1788 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_1789 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_1790 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_1791 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_1792 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_1793 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_1794 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_1795 = eq(UInt<3>("h07"), _T_1786) @[Mux.scala 68:19]
      node _T_1796 = mux(_T_1795, _T_1794, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1797 = eq(UInt<3>("h06"), _T_1786) @[Mux.scala 68:19]
      node _T_1798 = mux(_T_1797, _T_1793, _T_1796) @[Mux.scala 68:16]
      node _T_1799 = eq(UInt<3>("h05"), _T_1786) @[Mux.scala 68:19]
      node _T_1800 = mux(_T_1799, _T_1792, _T_1798) @[Mux.scala 68:16]
      node _T_1801 = eq(UInt<3>("h04"), _T_1786) @[Mux.scala 68:19]
      node _T_1802 = mux(_T_1801, _T_1791, _T_1800) @[Mux.scala 68:16]
      node _T_1803 = eq(UInt<2>("h03"), _T_1786) @[Mux.scala 68:19]
      node _T_1804 = mux(_T_1803, _T_1790, _T_1802) @[Mux.scala 68:16]
      node _T_1805 = eq(UInt<2>("h02"), _T_1786) @[Mux.scala 68:19]
      node _T_1806 = mux(_T_1805, _T_1789, _T_1804) @[Mux.scala 68:16]
      node _T_1807 = eq(UInt<1>("h01"), _T_1786) @[Mux.scala 68:19]
      node _T_1808 = mux(_T_1807, _T_1788, _T_1806) @[Mux.scala 68:16]
      node _T_1809 = eq(UInt<1>("h00"), _T_1786) @[Mux.scala 68:19]
      node _T_1810 = mux(_T_1809, _T_1787, _T_1808) @[Mux.scala 68:16]
      node _T_1811 = bits(rb.entries[6].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_1812 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_1813 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_1814 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_1815 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_1816 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_1817 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_1818 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_1819 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_1820 = eq(UInt<3>("h07"), _T_1811) @[Mux.scala 68:19]
      node _T_1821 = mux(_T_1820, _T_1819, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1822 = eq(UInt<3>("h06"), _T_1811) @[Mux.scala 68:19]
      node _T_1823 = mux(_T_1822, _T_1818, _T_1821) @[Mux.scala 68:16]
      node _T_1824 = eq(UInt<3>("h05"), _T_1811) @[Mux.scala 68:19]
      node _T_1825 = mux(_T_1824, _T_1817, _T_1823) @[Mux.scala 68:16]
      node _T_1826 = eq(UInt<3>("h04"), _T_1811) @[Mux.scala 68:19]
      node _T_1827 = mux(_T_1826, _T_1816, _T_1825) @[Mux.scala 68:16]
      node _T_1828 = eq(UInt<2>("h03"), _T_1811) @[Mux.scala 68:19]
      node _T_1829 = mux(_T_1828, _T_1815, _T_1827) @[Mux.scala 68:16]
      node _T_1830 = eq(UInt<2>("h02"), _T_1811) @[Mux.scala 68:19]
      node _T_1831 = mux(_T_1830, _T_1814, _T_1829) @[Mux.scala 68:16]
      node _T_1832 = eq(UInt<1>("h01"), _T_1811) @[Mux.scala 68:19]
      node _T_1833 = mux(_T_1832, _T_1813, _T_1831) @[Mux.scala 68:16]
      node _T_1834 = eq(UInt<1>("h00"), _T_1811) @[Mux.scala 68:19]
      node _T_1835 = mux(_T_1834, _T_1812, _T_1833) @[Mux.scala 68:16]
      node _T_1836 = bits(rb.entries[6].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_1837 = eq(_T_1836, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_1837 : @[POSIT_Locality.scala 136:88]
        node _T_1838 = eq(_T_1785, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_1839 = eq(_T_1810, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_1840 = and(_T_1838, _T_1839) @[POSIT_Locality.scala 138:49]
        node _T_1841 = bits(rb.entries[6].request.operands[0].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_1842 = eq(_T_1835, _T_1841) @[POSIT_Locality.scala 139:59]
        node _T_1843 = and(_T_1840, _T_1842) @[POSIT_Locality.scala 139:49]
        when _T_1843 : @[POSIT_Locality.scala 139:106]
          node _T_1844 = bits(rb.entries[6].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_1845 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_1846 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_1847 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_1848 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_1849 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_1850 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_1851 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_1852 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_1853 = eq(UInt<3>("h07"), _T_1844) @[Mux.scala 68:19]
          node _T_1854 = mux(_T_1853, _T_1852, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_1855 = eq(UInt<3>("h06"), _T_1844) @[Mux.scala 68:19]
          node _T_1856 = mux(_T_1855, _T_1851, _T_1854) @[Mux.scala 68:16]
          node _T_1857 = eq(UInt<3>("h05"), _T_1844) @[Mux.scala 68:19]
          node _T_1858 = mux(_T_1857, _T_1850, _T_1856) @[Mux.scala 68:16]
          node _T_1859 = eq(UInt<3>("h04"), _T_1844) @[Mux.scala 68:19]
          node _T_1860 = mux(_T_1859, _T_1849, _T_1858) @[Mux.scala 68:16]
          node _T_1861 = eq(UInt<2>("h03"), _T_1844) @[Mux.scala 68:19]
          node _T_1862 = mux(_T_1861, _T_1848, _T_1860) @[Mux.scala 68:16]
          node _T_1863 = eq(UInt<2>("h02"), _T_1844) @[Mux.scala 68:19]
          node _T_1864 = mux(_T_1863, _T_1847, _T_1862) @[Mux.scala 68:16]
          node _T_1865 = eq(UInt<1>("h01"), _T_1844) @[Mux.scala 68:19]
          node _T_1866 = mux(_T_1865, _T_1846, _T_1864) @[Mux.scala 68:16]
          node _T_1867 = eq(UInt<1>("h00"), _T_1844) @[Mux.scala 68:19]
          node _T_1868 = mux(_T_1867, _T_1845, _T_1866) @[Mux.scala 68:16]
          rb.entries[6].request.operands[0].value <= _T_1868 @[POSIT_Locality.scala 140:89]
          rb.entries[6].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_1869 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1870 = eq(_T_1869, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1870 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h06"), UInt<8>("h00")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_1871 = bits(rb.entries[6].request.operands[1].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_1872 = bits(rb.entries[6].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_1873 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_1874 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_1875 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_1876 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_1877 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_1878 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_1879 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_1880 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_1881 = eq(UInt<3>("h07"), _T_1872) @[Mux.scala 68:19]
      node _T_1882 = mux(_T_1881, _T_1880, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1883 = eq(UInt<3>("h06"), _T_1872) @[Mux.scala 68:19]
      node _T_1884 = mux(_T_1883, _T_1879, _T_1882) @[Mux.scala 68:16]
      node _T_1885 = eq(UInt<3>("h05"), _T_1872) @[Mux.scala 68:19]
      node _T_1886 = mux(_T_1885, _T_1878, _T_1884) @[Mux.scala 68:16]
      node _T_1887 = eq(UInt<3>("h04"), _T_1872) @[Mux.scala 68:19]
      node _T_1888 = mux(_T_1887, _T_1877, _T_1886) @[Mux.scala 68:16]
      node _T_1889 = eq(UInt<2>("h03"), _T_1872) @[Mux.scala 68:19]
      node _T_1890 = mux(_T_1889, _T_1876, _T_1888) @[Mux.scala 68:16]
      node _T_1891 = eq(UInt<2>("h02"), _T_1872) @[Mux.scala 68:19]
      node _T_1892 = mux(_T_1891, _T_1875, _T_1890) @[Mux.scala 68:16]
      node _T_1893 = eq(UInt<1>("h01"), _T_1872) @[Mux.scala 68:19]
      node _T_1894 = mux(_T_1893, _T_1874, _T_1892) @[Mux.scala 68:16]
      node _T_1895 = eq(UInt<1>("h00"), _T_1872) @[Mux.scala 68:19]
      node _T_1896 = mux(_T_1895, _T_1873, _T_1894) @[Mux.scala 68:16]
      node _T_1897 = bits(rb.entries[6].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_1898 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_1899 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_1900 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_1901 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_1902 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_1903 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_1904 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_1905 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_1906 = eq(UInt<3>("h07"), _T_1897) @[Mux.scala 68:19]
      node _T_1907 = mux(_T_1906, _T_1905, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1908 = eq(UInt<3>("h06"), _T_1897) @[Mux.scala 68:19]
      node _T_1909 = mux(_T_1908, _T_1904, _T_1907) @[Mux.scala 68:16]
      node _T_1910 = eq(UInt<3>("h05"), _T_1897) @[Mux.scala 68:19]
      node _T_1911 = mux(_T_1910, _T_1903, _T_1909) @[Mux.scala 68:16]
      node _T_1912 = eq(UInt<3>("h04"), _T_1897) @[Mux.scala 68:19]
      node _T_1913 = mux(_T_1912, _T_1902, _T_1911) @[Mux.scala 68:16]
      node _T_1914 = eq(UInt<2>("h03"), _T_1897) @[Mux.scala 68:19]
      node _T_1915 = mux(_T_1914, _T_1901, _T_1913) @[Mux.scala 68:16]
      node _T_1916 = eq(UInt<2>("h02"), _T_1897) @[Mux.scala 68:19]
      node _T_1917 = mux(_T_1916, _T_1900, _T_1915) @[Mux.scala 68:16]
      node _T_1918 = eq(UInt<1>("h01"), _T_1897) @[Mux.scala 68:19]
      node _T_1919 = mux(_T_1918, _T_1899, _T_1917) @[Mux.scala 68:16]
      node _T_1920 = eq(UInt<1>("h00"), _T_1897) @[Mux.scala 68:19]
      node _T_1921 = mux(_T_1920, _T_1898, _T_1919) @[Mux.scala 68:16]
      node _T_1922 = bits(rb.entries[6].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_1923 = eq(_T_1922, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_1923 : @[POSIT_Locality.scala 136:88]
        node _T_1924 = eq(_T_1871, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_1925 = eq(_T_1896, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_1926 = and(_T_1924, _T_1925) @[POSIT_Locality.scala 138:49]
        node _T_1927 = bits(rb.entries[6].request.operands[1].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_1928 = eq(_T_1921, _T_1927) @[POSIT_Locality.scala 139:59]
        node _T_1929 = and(_T_1926, _T_1928) @[POSIT_Locality.scala 139:49]
        when _T_1929 : @[POSIT_Locality.scala 139:106]
          node _T_1930 = bits(rb.entries[6].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_1931 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_1932 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_1933 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_1934 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_1935 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_1936 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_1937 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_1938 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_1939 = eq(UInt<3>("h07"), _T_1930) @[Mux.scala 68:19]
          node _T_1940 = mux(_T_1939, _T_1938, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_1941 = eq(UInt<3>("h06"), _T_1930) @[Mux.scala 68:19]
          node _T_1942 = mux(_T_1941, _T_1937, _T_1940) @[Mux.scala 68:16]
          node _T_1943 = eq(UInt<3>("h05"), _T_1930) @[Mux.scala 68:19]
          node _T_1944 = mux(_T_1943, _T_1936, _T_1942) @[Mux.scala 68:16]
          node _T_1945 = eq(UInt<3>("h04"), _T_1930) @[Mux.scala 68:19]
          node _T_1946 = mux(_T_1945, _T_1935, _T_1944) @[Mux.scala 68:16]
          node _T_1947 = eq(UInt<2>("h03"), _T_1930) @[Mux.scala 68:19]
          node _T_1948 = mux(_T_1947, _T_1934, _T_1946) @[Mux.scala 68:16]
          node _T_1949 = eq(UInt<2>("h02"), _T_1930) @[Mux.scala 68:19]
          node _T_1950 = mux(_T_1949, _T_1933, _T_1948) @[Mux.scala 68:16]
          node _T_1951 = eq(UInt<1>("h01"), _T_1930) @[Mux.scala 68:19]
          node _T_1952 = mux(_T_1951, _T_1932, _T_1950) @[Mux.scala 68:16]
          node _T_1953 = eq(UInt<1>("h00"), _T_1930) @[Mux.scala 68:19]
          node _T_1954 = mux(_T_1953, _T_1931, _T_1952) @[Mux.scala 68:16]
          rb.entries[6].request.operands[1].value <= _T_1954 @[POSIT_Locality.scala 140:89]
          rb.entries[6].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_1955 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_1956 = eq(_T_1955, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_1956 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h06"), UInt<8>("h01")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_1957 = bits(rb.entries[6].request.operands[2].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_1958 = bits(rb.entries[6].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_1959 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_1960 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_1961 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_1962 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_1963 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_1964 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_1965 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_1966 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_1967 = eq(UInt<3>("h07"), _T_1958) @[Mux.scala 68:19]
      node _T_1968 = mux(_T_1967, _T_1966, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1969 = eq(UInt<3>("h06"), _T_1958) @[Mux.scala 68:19]
      node _T_1970 = mux(_T_1969, _T_1965, _T_1968) @[Mux.scala 68:16]
      node _T_1971 = eq(UInt<3>("h05"), _T_1958) @[Mux.scala 68:19]
      node _T_1972 = mux(_T_1971, _T_1964, _T_1970) @[Mux.scala 68:16]
      node _T_1973 = eq(UInt<3>("h04"), _T_1958) @[Mux.scala 68:19]
      node _T_1974 = mux(_T_1973, _T_1963, _T_1972) @[Mux.scala 68:16]
      node _T_1975 = eq(UInt<2>("h03"), _T_1958) @[Mux.scala 68:19]
      node _T_1976 = mux(_T_1975, _T_1962, _T_1974) @[Mux.scala 68:16]
      node _T_1977 = eq(UInt<2>("h02"), _T_1958) @[Mux.scala 68:19]
      node _T_1978 = mux(_T_1977, _T_1961, _T_1976) @[Mux.scala 68:16]
      node _T_1979 = eq(UInt<1>("h01"), _T_1958) @[Mux.scala 68:19]
      node _T_1980 = mux(_T_1979, _T_1960, _T_1978) @[Mux.scala 68:16]
      node _T_1981 = eq(UInt<1>("h00"), _T_1958) @[Mux.scala 68:19]
      node _T_1982 = mux(_T_1981, _T_1959, _T_1980) @[Mux.scala 68:16]
      node _T_1983 = bits(rb.entries[6].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_1984 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_1985 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_1986 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_1987 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_1988 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_1989 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_1990 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_1991 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_1992 = eq(UInt<3>("h07"), _T_1983) @[Mux.scala 68:19]
      node _T_1993 = mux(_T_1992, _T_1991, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_1994 = eq(UInt<3>("h06"), _T_1983) @[Mux.scala 68:19]
      node _T_1995 = mux(_T_1994, _T_1990, _T_1993) @[Mux.scala 68:16]
      node _T_1996 = eq(UInt<3>("h05"), _T_1983) @[Mux.scala 68:19]
      node _T_1997 = mux(_T_1996, _T_1989, _T_1995) @[Mux.scala 68:16]
      node _T_1998 = eq(UInt<3>("h04"), _T_1983) @[Mux.scala 68:19]
      node _T_1999 = mux(_T_1998, _T_1988, _T_1997) @[Mux.scala 68:16]
      node _T_2000 = eq(UInt<2>("h03"), _T_1983) @[Mux.scala 68:19]
      node _T_2001 = mux(_T_2000, _T_1987, _T_1999) @[Mux.scala 68:16]
      node _T_2002 = eq(UInt<2>("h02"), _T_1983) @[Mux.scala 68:19]
      node _T_2003 = mux(_T_2002, _T_1986, _T_2001) @[Mux.scala 68:16]
      node _T_2004 = eq(UInt<1>("h01"), _T_1983) @[Mux.scala 68:19]
      node _T_2005 = mux(_T_2004, _T_1985, _T_2003) @[Mux.scala 68:16]
      node _T_2006 = eq(UInt<1>("h00"), _T_1983) @[Mux.scala 68:19]
      node _T_2007 = mux(_T_2006, _T_1984, _T_2005) @[Mux.scala 68:16]
      node _T_2008 = bits(rb.entries[6].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_2009 = eq(_T_2008, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_2009 : @[POSIT_Locality.scala 136:88]
        node _T_2010 = eq(_T_1957, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_2011 = eq(_T_1982, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_2012 = and(_T_2010, _T_2011) @[POSIT_Locality.scala 138:49]
        node _T_2013 = bits(rb.entries[6].request.operands[2].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_2014 = eq(_T_2007, _T_2013) @[POSIT_Locality.scala 139:59]
        node _T_2015 = and(_T_2012, _T_2014) @[POSIT_Locality.scala 139:49]
        when _T_2015 : @[POSIT_Locality.scala 139:106]
          node _T_2016 = bits(rb.entries[6].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_2017 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_2018 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_2019 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_2020 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_2021 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_2022 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_2023 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_2024 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_2025 = eq(UInt<3>("h07"), _T_2016) @[Mux.scala 68:19]
          node _T_2026 = mux(_T_2025, _T_2024, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_2027 = eq(UInt<3>("h06"), _T_2016) @[Mux.scala 68:19]
          node _T_2028 = mux(_T_2027, _T_2023, _T_2026) @[Mux.scala 68:16]
          node _T_2029 = eq(UInt<3>("h05"), _T_2016) @[Mux.scala 68:19]
          node _T_2030 = mux(_T_2029, _T_2022, _T_2028) @[Mux.scala 68:16]
          node _T_2031 = eq(UInt<3>("h04"), _T_2016) @[Mux.scala 68:19]
          node _T_2032 = mux(_T_2031, _T_2021, _T_2030) @[Mux.scala 68:16]
          node _T_2033 = eq(UInt<2>("h03"), _T_2016) @[Mux.scala 68:19]
          node _T_2034 = mux(_T_2033, _T_2020, _T_2032) @[Mux.scala 68:16]
          node _T_2035 = eq(UInt<2>("h02"), _T_2016) @[Mux.scala 68:19]
          node _T_2036 = mux(_T_2035, _T_2019, _T_2034) @[Mux.scala 68:16]
          node _T_2037 = eq(UInt<1>("h01"), _T_2016) @[Mux.scala 68:19]
          node _T_2038 = mux(_T_2037, _T_2018, _T_2036) @[Mux.scala 68:16]
          node _T_2039 = eq(UInt<1>("h00"), _T_2016) @[Mux.scala 68:19]
          node _T_2040 = mux(_T_2039, _T_2017, _T_2038) @[Mux.scala 68:16]
          rb.entries[6].request.operands[2].value <= _T_2040 @[POSIT_Locality.scala 140:89]
          rb.entries[6].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_2041 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_2042 = eq(_T_2041, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_2042 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h06"), UInt<8>("h02")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_2043 = bits(rb.entries[7].request.operands[0].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_2044 = bits(rb.entries[7].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_2045 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_2046 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_2047 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_2048 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_2049 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_2050 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_2051 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_2052 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_2053 = eq(UInt<3>("h07"), _T_2044) @[Mux.scala 68:19]
      node _T_2054 = mux(_T_2053, _T_2052, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_2055 = eq(UInt<3>("h06"), _T_2044) @[Mux.scala 68:19]
      node _T_2056 = mux(_T_2055, _T_2051, _T_2054) @[Mux.scala 68:16]
      node _T_2057 = eq(UInt<3>("h05"), _T_2044) @[Mux.scala 68:19]
      node _T_2058 = mux(_T_2057, _T_2050, _T_2056) @[Mux.scala 68:16]
      node _T_2059 = eq(UInt<3>("h04"), _T_2044) @[Mux.scala 68:19]
      node _T_2060 = mux(_T_2059, _T_2049, _T_2058) @[Mux.scala 68:16]
      node _T_2061 = eq(UInt<2>("h03"), _T_2044) @[Mux.scala 68:19]
      node _T_2062 = mux(_T_2061, _T_2048, _T_2060) @[Mux.scala 68:16]
      node _T_2063 = eq(UInt<2>("h02"), _T_2044) @[Mux.scala 68:19]
      node _T_2064 = mux(_T_2063, _T_2047, _T_2062) @[Mux.scala 68:16]
      node _T_2065 = eq(UInt<1>("h01"), _T_2044) @[Mux.scala 68:19]
      node _T_2066 = mux(_T_2065, _T_2046, _T_2064) @[Mux.scala 68:16]
      node _T_2067 = eq(UInt<1>("h00"), _T_2044) @[Mux.scala 68:19]
      node _T_2068 = mux(_T_2067, _T_2045, _T_2066) @[Mux.scala 68:16]
      node _T_2069 = bits(rb.entries[7].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_2070 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_2071 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_2072 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_2073 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_2074 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_2075 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_2076 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_2077 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_2078 = eq(UInt<3>("h07"), _T_2069) @[Mux.scala 68:19]
      node _T_2079 = mux(_T_2078, _T_2077, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_2080 = eq(UInt<3>("h06"), _T_2069) @[Mux.scala 68:19]
      node _T_2081 = mux(_T_2080, _T_2076, _T_2079) @[Mux.scala 68:16]
      node _T_2082 = eq(UInt<3>("h05"), _T_2069) @[Mux.scala 68:19]
      node _T_2083 = mux(_T_2082, _T_2075, _T_2081) @[Mux.scala 68:16]
      node _T_2084 = eq(UInt<3>("h04"), _T_2069) @[Mux.scala 68:19]
      node _T_2085 = mux(_T_2084, _T_2074, _T_2083) @[Mux.scala 68:16]
      node _T_2086 = eq(UInt<2>("h03"), _T_2069) @[Mux.scala 68:19]
      node _T_2087 = mux(_T_2086, _T_2073, _T_2085) @[Mux.scala 68:16]
      node _T_2088 = eq(UInt<2>("h02"), _T_2069) @[Mux.scala 68:19]
      node _T_2089 = mux(_T_2088, _T_2072, _T_2087) @[Mux.scala 68:16]
      node _T_2090 = eq(UInt<1>("h01"), _T_2069) @[Mux.scala 68:19]
      node _T_2091 = mux(_T_2090, _T_2071, _T_2089) @[Mux.scala 68:16]
      node _T_2092 = eq(UInt<1>("h00"), _T_2069) @[Mux.scala 68:19]
      node _T_2093 = mux(_T_2092, _T_2070, _T_2091) @[Mux.scala 68:16]
      node _T_2094 = bits(rb.entries[7].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_2095 = eq(_T_2094, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_2095 : @[POSIT_Locality.scala 136:88]
        node _T_2096 = eq(_T_2043, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_2097 = eq(_T_2068, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_2098 = and(_T_2096, _T_2097) @[POSIT_Locality.scala 138:49]
        node _T_2099 = bits(rb.entries[7].request.operands[0].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_2100 = eq(_T_2093, _T_2099) @[POSIT_Locality.scala 139:59]
        node _T_2101 = and(_T_2098, _T_2100) @[POSIT_Locality.scala 139:49]
        when _T_2101 : @[POSIT_Locality.scala 139:106]
          node _T_2102 = bits(rb.entries[7].request.operands[0].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_2103 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_2104 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_2105 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_2106 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_2107 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_2108 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_2109 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_2110 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_2111 = eq(UInt<3>("h07"), _T_2102) @[Mux.scala 68:19]
          node _T_2112 = mux(_T_2111, _T_2110, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_2113 = eq(UInt<3>("h06"), _T_2102) @[Mux.scala 68:19]
          node _T_2114 = mux(_T_2113, _T_2109, _T_2112) @[Mux.scala 68:16]
          node _T_2115 = eq(UInt<3>("h05"), _T_2102) @[Mux.scala 68:19]
          node _T_2116 = mux(_T_2115, _T_2108, _T_2114) @[Mux.scala 68:16]
          node _T_2117 = eq(UInt<3>("h04"), _T_2102) @[Mux.scala 68:19]
          node _T_2118 = mux(_T_2117, _T_2107, _T_2116) @[Mux.scala 68:16]
          node _T_2119 = eq(UInt<2>("h03"), _T_2102) @[Mux.scala 68:19]
          node _T_2120 = mux(_T_2119, _T_2106, _T_2118) @[Mux.scala 68:16]
          node _T_2121 = eq(UInt<2>("h02"), _T_2102) @[Mux.scala 68:19]
          node _T_2122 = mux(_T_2121, _T_2105, _T_2120) @[Mux.scala 68:16]
          node _T_2123 = eq(UInt<1>("h01"), _T_2102) @[Mux.scala 68:19]
          node _T_2124 = mux(_T_2123, _T_2104, _T_2122) @[Mux.scala 68:16]
          node _T_2125 = eq(UInt<1>("h00"), _T_2102) @[Mux.scala 68:19]
          node _T_2126 = mux(_T_2125, _T_2103, _T_2124) @[Mux.scala 68:16]
          rb.entries[7].request.operands[0].value <= _T_2126 @[POSIT_Locality.scala 140:89]
          rb.entries[7].request.operands[0].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_2127 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_2128 = eq(_T_2127, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_2128 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h07"), UInt<8>("h00")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_2129 = bits(rb.entries[7].request.operands[1].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_2130 = bits(rb.entries[7].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_2131 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_2132 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_2133 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_2134 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_2135 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_2136 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_2137 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_2138 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_2139 = eq(UInt<3>("h07"), _T_2130) @[Mux.scala 68:19]
      node _T_2140 = mux(_T_2139, _T_2138, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_2141 = eq(UInt<3>("h06"), _T_2130) @[Mux.scala 68:19]
      node _T_2142 = mux(_T_2141, _T_2137, _T_2140) @[Mux.scala 68:16]
      node _T_2143 = eq(UInt<3>("h05"), _T_2130) @[Mux.scala 68:19]
      node _T_2144 = mux(_T_2143, _T_2136, _T_2142) @[Mux.scala 68:16]
      node _T_2145 = eq(UInt<3>("h04"), _T_2130) @[Mux.scala 68:19]
      node _T_2146 = mux(_T_2145, _T_2135, _T_2144) @[Mux.scala 68:16]
      node _T_2147 = eq(UInt<2>("h03"), _T_2130) @[Mux.scala 68:19]
      node _T_2148 = mux(_T_2147, _T_2134, _T_2146) @[Mux.scala 68:16]
      node _T_2149 = eq(UInt<2>("h02"), _T_2130) @[Mux.scala 68:19]
      node _T_2150 = mux(_T_2149, _T_2133, _T_2148) @[Mux.scala 68:16]
      node _T_2151 = eq(UInt<1>("h01"), _T_2130) @[Mux.scala 68:19]
      node _T_2152 = mux(_T_2151, _T_2132, _T_2150) @[Mux.scala 68:16]
      node _T_2153 = eq(UInt<1>("h00"), _T_2130) @[Mux.scala 68:19]
      node _T_2154 = mux(_T_2153, _T_2131, _T_2152) @[Mux.scala 68:16]
      node _T_2155 = bits(rb.entries[7].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_2156 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_2157 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_2158 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_2159 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_2160 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_2161 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_2162 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_2163 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_2164 = eq(UInt<3>("h07"), _T_2155) @[Mux.scala 68:19]
      node _T_2165 = mux(_T_2164, _T_2163, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_2166 = eq(UInt<3>("h06"), _T_2155) @[Mux.scala 68:19]
      node _T_2167 = mux(_T_2166, _T_2162, _T_2165) @[Mux.scala 68:16]
      node _T_2168 = eq(UInt<3>("h05"), _T_2155) @[Mux.scala 68:19]
      node _T_2169 = mux(_T_2168, _T_2161, _T_2167) @[Mux.scala 68:16]
      node _T_2170 = eq(UInt<3>("h04"), _T_2155) @[Mux.scala 68:19]
      node _T_2171 = mux(_T_2170, _T_2160, _T_2169) @[Mux.scala 68:16]
      node _T_2172 = eq(UInt<2>("h03"), _T_2155) @[Mux.scala 68:19]
      node _T_2173 = mux(_T_2172, _T_2159, _T_2171) @[Mux.scala 68:16]
      node _T_2174 = eq(UInt<2>("h02"), _T_2155) @[Mux.scala 68:19]
      node _T_2175 = mux(_T_2174, _T_2158, _T_2173) @[Mux.scala 68:16]
      node _T_2176 = eq(UInt<1>("h01"), _T_2155) @[Mux.scala 68:19]
      node _T_2177 = mux(_T_2176, _T_2157, _T_2175) @[Mux.scala 68:16]
      node _T_2178 = eq(UInt<1>("h00"), _T_2155) @[Mux.scala 68:19]
      node _T_2179 = mux(_T_2178, _T_2156, _T_2177) @[Mux.scala 68:16]
      node _T_2180 = bits(rb.entries[7].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_2181 = eq(_T_2180, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_2181 : @[POSIT_Locality.scala 136:88]
        node _T_2182 = eq(_T_2129, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_2183 = eq(_T_2154, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_2184 = and(_T_2182, _T_2183) @[POSIT_Locality.scala 138:49]
        node _T_2185 = bits(rb.entries[7].request.operands[1].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_2186 = eq(_T_2179, _T_2185) @[POSIT_Locality.scala 139:59]
        node _T_2187 = and(_T_2184, _T_2186) @[POSIT_Locality.scala 139:49]
        when _T_2187 : @[POSIT_Locality.scala 139:106]
          node _T_2188 = bits(rb.entries[7].request.operands[1].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_2189 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_2190 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_2191 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_2192 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_2193 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_2194 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_2195 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_2196 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_2197 = eq(UInt<3>("h07"), _T_2188) @[Mux.scala 68:19]
          node _T_2198 = mux(_T_2197, _T_2196, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_2199 = eq(UInt<3>("h06"), _T_2188) @[Mux.scala 68:19]
          node _T_2200 = mux(_T_2199, _T_2195, _T_2198) @[Mux.scala 68:16]
          node _T_2201 = eq(UInt<3>("h05"), _T_2188) @[Mux.scala 68:19]
          node _T_2202 = mux(_T_2201, _T_2194, _T_2200) @[Mux.scala 68:16]
          node _T_2203 = eq(UInt<3>("h04"), _T_2188) @[Mux.scala 68:19]
          node _T_2204 = mux(_T_2203, _T_2193, _T_2202) @[Mux.scala 68:16]
          node _T_2205 = eq(UInt<2>("h03"), _T_2188) @[Mux.scala 68:19]
          node _T_2206 = mux(_T_2205, _T_2192, _T_2204) @[Mux.scala 68:16]
          node _T_2207 = eq(UInt<2>("h02"), _T_2188) @[Mux.scala 68:19]
          node _T_2208 = mux(_T_2207, _T_2191, _T_2206) @[Mux.scala 68:16]
          node _T_2209 = eq(UInt<1>("h01"), _T_2188) @[Mux.scala 68:19]
          node _T_2210 = mux(_T_2209, _T_2190, _T_2208) @[Mux.scala 68:16]
          node _T_2211 = eq(UInt<1>("h00"), _T_2188) @[Mux.scala 68:19]
          node _T_2212 = mux(_T_2211, _T_2189, _T_2210) @[Mux.scala 68:16]
          rb.entries[7].request.operands[1].value <= _T_2212 @[POSIT_Locality.scala 140:89]
          rb.entries[7].request.operands[1].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_2213 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_2214 = eq(_T_2213, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_2214 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h07"), UInt<8>("h01")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      node _T_2215 = bits(rb.entries[7].request.operands[2].value, 13, 0) @[POSIT_Locality.scala 131:159]
      node _T_2216 = bits(rb.entries[7].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 132:94]
      node _T_2217 = bits(io.mem_read.data, 33, 33) @[POSIT_Locality.scala 133:204]
      node _T_2218 = bits(io.mem_read.data, 97, 97) @[POSIT_Locality.scala 133:204]
      node _T_2219 = bits(io.mem_read.data, 161, 161) @[POSIT_Locality.scala 133:204]
      node _T_2220 = bits(io.mem_read.data, 225, 225) @[POSIT_Locality.scala 133:204]
      node _T_2221 = bits(io.mem_read.data, 289, 289) @[POSIT_Locality.scala 133:204]
      node _T_2222 = bits(io.mem_read.data, 353, 353) @[POSIT_Locality.scala 133:204]
      node _T_2223 = bits(io.mem_read.data, 417, 417) @[POSIT_Locality.scala 133:204]
      node _T_2224 = bits(io.mem_read.data, 481, 481) @[POSIT_Locality.scala 133:204]
      node _T_2225 = eq(UInt<3>("h07"), _T_2216) @[Mux.scala 68:19]
      node _T_2226 = mux(_T_2225, _T_2224, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_2227 = eq(UInt<3>("h06"), _T_2216) @[Mux.scala 68:19]
      node _T_2228 = mux(_T_2227, _T_2223, _T_2226) @[Mux.scala 68:16]
      node _T_2229 = eq(UInt<3>("h05"), _T_2216) @[Mux.scala 68:19]
      node _T_2230 = mux(_T_2229, _T_2222, _T_2228) @[Mux.scala 68:16]
      node _T_2231 = eq(UInt<3>("h04"), _T_2216) @[Mux.scala 68:19]
      node _T_2232 = mux(_T_2231, _T_2221, _T_2230) @[Mux.scala 68:16]
      node _T_2233 = eq(UInt<2>("h03"), _T_2216) @[Mux.scala 68:19]
      node _T_2234 = mux(_T_2233, _T_2220, _T_2232) @[Mux.scala 68:16]
      node _T_2235 = eq(UInt<2>("h02"), _T_2216) @[Mux.scala 68:19]
      node _T_2236 = mux(_T_2235, _T_2219, _T_2234) @[Mux.scala 68:16]
      node _T_2237 = eq(UInt<1>("h01"), _T_2216) @[Mux.scala 68:19]
      node _T_2238 = mux(_T_2237, _T_2218, _T_2236) @[Mux.scala 68:16]
      node _T_2239 = eq(UInt<1>("h00"), _T_2216) @[Mux.scala 68:19]
      node _T_2240 = mux(_T_2239, _T_2217, _T_2238) @[Mux.scala 68:16]
      node _T_2241 = bits(rb.entries[7].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 134:95]
      node _T_2242 = bits(io.mem_read.data, 32, 32) @[POSIT_Locality.scala 135:204]
      node _T_2243 = bits(io.mem_read.data, 96, 96) @[POSIT_Locality.scala 135:204]
      node _T_2244 = bits(io.mem_read.data, 160, 160) @[POSIT_Locality.scala 135:204]
      node _T_2245 = bits(io.mem_read.data, 224, 224) @[POSIT_Locality.scala 135:204]
      node _T_2246 = bits(io.mem_read.data, 288, 288) @[POSIT_Locality.scala 135:204]
      node _T_2247 = bits(io.mem_read.data, 352, 352) @[POSIT_Locality.scala 135:204]
      node _T_2248 = bits(io.mem_read.data, 416, 416) @[POSIT_Locality.scala 135:204]
      node _T_2249 = bits(io.mem_read.data, 480, 480) @[POSIT_Locality.scala 135:204]
      node _T_2250 = eq(UInt<3>("h07"), _T_2241) @[Mux.scala 68:19]
      node _T_2251 = mux(_T_2250, _T_2249, UInt<1>("h00")) @[Mux.scala 68:16]
      node _T_2252 = eq(UInt<3>("h06"), _T_2241) @[Mux.scala 68:19]
      node _T_2253 = mux(_T_2252, _T_2248, _T_2251) @[Mux.scala 68:16]
      node _T_2254 = eq(UInt<3>("h05"), _T_2241) @[Mux.scala 68:19]
      node _T_2255 = mux(_T_2254, _T_2247, _T_2253) @[Mux.scala 68:16]
      node _T_2256 = eq(UInt<3>("h04"), _T_2241) @[Mux.scala 68:19]
      node _T_2257 = mux(_T_2256, _T_2246, _T_2255) @[Mux.scala 68:16]
      node _T_2258 = eq(UInt<2>("h03"), _T_2241) @[Mux.scala 68:19]
      node _T_2259 = mux(_T_2258, _T_2245, _T_2257) @[Mux.scala 68:16]
      node _T_2260 = eq(UInt<2>("h02"), _T_2241) @[Mux.scala 68:19]
      node _T_2261 = mux(_T_2260, _T_2244, _T_2259) @[Mux.scala 68:16]
      node _T_2262 = eq(UInt<1>("h01"), _T_2241) @[Mux.scala 68:19]
      node _T_2263 = mux(_T_2262, _T_2243, _T_2261) @[Mux.scala 68:16]
      node _T_2264 = eq(UInt<1>("h00"), _T_2241) @[Mux.scala 68:19]
      node _T_2265 = mux(_T_2264, _T_2242, _T_2263) @[Mux.scala 68:16]
      node _T_2266 = bits(rb.entries[7].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 136:76]
      node _T_2267 = eq(_T_2266, UInt<1>("h01")) @[POSIT_Locality.scala 136:80]
      when _T_2267 : @[POSIT_Locality.scala 136:88]
        node _T_2268 = eq(_T_2215, io.mem_read.resp_tag) @[POSIT_Locality.scala 137:50]
        node _T_2269 = eq(_T_2240, UInt<1>("h01")) @[POSIT_Locality.scala 138:59]
        node _T_2270 = and(_T_2268, _T_2269) @[POSIT_Locality.scala 138:49]
        node _T_2271 = bits(rb.entries[7].request.operands[2].mode, 0, 0) @[POSIT_Locality.scala 139:101]
        node _T_2272 = eq(_T_2265, _T_2271) @[POSIT_Locality.scala 139:59]
        node _T_2273 = and(_T_2270, _T_2272) @[POSIT_Locality.scala 139:49]
        when _T_2273 : @[POSIT_Locality.scala 139:106]
          node _T_2274 = bits(rb.entries[7].request.operands[2].value, 2, 0) @[POSIT_Locality.scala 140:141]
          node _T_2275 = bits(io.mem_read.data, 31, 0) @[POSIT_Locality.scala 141:203]
          node _T_2276 = bits(io.mem_read.data, 95, 64) @[POSIT_Locality.scala 141:203]
          node _T_2277 = bits(io.mem_read.data, 159, 128) @[POSIT_Locality.scala 141:203]
          node _T_2278 = bits(io.mem_read.data, 223, 192) @[POSIT_Locality.scala 141:203]
          node _T_2279 = bits(io.mem_read.data, 287, 256) @[POSIT_Locality.scala 141:203]
          node _T_2280 = bits(io.mem_read.data, 351, 320) @[POSIT_Locality.scala 141:203]
          node _T_2281 = bits(io.mem_read.data, 415, 384) @[POSIT_Locality.scala 141:203]
          node _T_2282 = bits(io.mem_read.data, 479, 448) @[POSIT_Locality.scala 141:203]
          node _T_2283 = eq(UInt<3>("h07"), _T_2274) @[Mux.scala 68:19]
          node _T_2284 = mux(_T_2283, _T_2282, UInt<1>("h00")) @[Mux.scala 68:16]
          node _T_2285 = eq(UInt<3>("h06"), _T_2274) @[Mux.scala 68:19]
          node _T_2286 = mux(_T_2285, _T_2281, _T_2284) @[Mux.scala 68:16]
          node _T_2287 = eq(UInt<3>("h05"), _T_2274) @[Mux.scala 68:19]
          node _T_2288 = mux(_T_2287, _T_2280, _T_2286) @[Mux.scala 68:16]
          node _T_2289 = eq(UInt<3>("h04"), _T_2274) @[Mux.scala 68:19]
          node _T_2290 = mux(_T_2289, _T_2279, _T_2288) @[Mux.scala 68:16]
          node _T_2291 = eq(UInt<2>("h03"), _T_2274) @[Mux.scala 68:19]
          node _T_2292 = mux(_T_2291, _T_2278, _T_2290) @[Mux.scala 68:16]
          node _T_2293 = eq(UInt<2>("h02"), _T_2274) @[Mux.scala 68:19]
          node _T_2294 = mux(_T_2293, _T_2277, _T_2292) @[Mux.scala 68:16]
          node _T_2295 = eq(UInt<1>("h01"), _T_2274) @[Mux.scala 68:19]
          node _T_2296 = mux(_T_2295, _T_2276, _T_2294) @[Mux.scala 68:16]
          node _T_2297 = eq(UInt<1>("h00"), _T_2274) @[Mux.scala 68:19]
          node _T_2298 = mux(_T_2297, _T_2275, _T_2296) @[Mux.scala 68:16]
          rb.entries[7].request.operands[2].value <= _T_2298 @[POSIT_Locality.scala 140:89]
          rb.entries[7].request.operands[2].mode <= UInt<1>("h00") @[POSIT_Locality.scala 142:88]
          node _T_2299 = bits(reset, 0, 0) @[POSIT_Locality.scala 143:55]
          node _T_2300 = eq(_T_2299, UInt<1>("h00")) @[POSIT_Locality.scala 143:55]
          when _T_2300 : @[POSIT_Locality.scala 143:55]
            printf(clock, UInt<1>(1), "inst: %d, op: %d, mode cleared\n", UInt<8>("h07"), UInt<8>("h02")) @[POSIT_Locality.scala 143:55]
            skip @[POSIT_Locality.scala 143:55]
          skip @[POSIT_Locality.scala 139:106]
        skip @[POSIT_Locality.scala 136:88]
      skip @[POSIT_Locality.scala 128:37]
    wire waitingToBeFetched : UInt<1>[24] @[POSIT_Locality.scala 155:38]
    wire fetchOffSet : UInt<48>[24] @[POSIT_Locality.scala 157:31]
    node _T_2301 = bits(rb.entries[0].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2302 = eq(_T_2301, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2303 = and(rb.entries[0].valid, _T_2302) @[POSIT_Locality.scala 163:91]
    node _T_2304 = bits(rb.entries[0].request.operands[0].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2305 = and(_T_2304, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2306 = eq(_T_2305, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2307 = and(_T_2303, _T_2306) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[0] <= _T_2307 @[POSIT_Locality.scala 163:68]
    fetchOffSet[0] <= rb.entries[0].request.operands[0].value @[POSIT_Locality.scala 168:53]
    node _T_2308 = bits(rb.entries[0].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2309 = eq(_T_2308, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2310 = and(rb.entries[0].valid, _T_2309) @[POSIT_Locality.scala 163:91]
    node _T_2311 = bits(rb.entries[0].request.operands[1].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2312 = and(_T_2311, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2313 = eq(_T_2312, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2314 = and(_T_2310, _T_2313) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[1] <= _T_2314 @[POSIT_Locality.scala 163:68]
    fetchOffSet[1] <= rb.entries[0].request.operands[1].value @[POSIT_Locality.scala 168:53]
    node _T_2315 = bits(rb.entries[0].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2316 = eq(_T_2315, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2317 = and(rb.entries[0].valid, _T_2316) @[POSIT_Locality.scala 163:91]
    node _T_2318 = bits(rb.entries[0].request.operands[2].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2319 = and(_T_2318, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2320 = eq(_T_2319, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2321 = and(_T_2317, _T_2320) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[2] <= _T_2321 @[POSIT_Locality.scala 163:68]
    fetchOffSet[2] <= rb.entries[0].request.operands[2].value @[POSIT_Locality.scala 168:53]
    node _T_2322 = bits(rb.entries[1].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2323 = eq(_T_2322, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2324 = and(rb.entries[1].valid, _T_2323) @[POSIT_Locality.scala 163:91]
    node _T_2325 = bits(rb.entries[1].request.operands[0].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2326 = and(_T_2325, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2327 = eq(_T_2326, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2328 = and(_T_2324, _T_2327) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[3] <= _T_2328 @[POSIT_Locality.scala 163:68]
    fetchOffSet[3] <= rb.entries[1].request.operands[0].value @[POSIT_Locality.scala 168:53]
    node _T_2329 = bits(rb.entries[1].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2330 = eq(_T_2329, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2331 = and(rb.entries[1].valid, _T_2330) @[POSIT_Locality.scala 163:91]
    node _T_2332 = bits(rb.entries[1].request.operands[1].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2333 = and(_T_2332, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2334 = eq(_T_2333, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2335 = and(_T_2331, _T_2334) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[4] <= _T_2335 @[POSIT_Locality.scala 163:68]
    fetchOffSet[4] <= rb.entries[1].request.operands[1].value @[POSIT_Locality.scala 168:53]
    node _T_2336 = bits(rb.entries[1].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2337 = eq(_T_2336, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2338 = and(rb.entries[1].valid, _T_2337) @[POSIT_Locality.scala 163:91]
    node _T_2339 = bits(rb.entries[1].request.operands[2].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2340 = and(_T_2339, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2341 = eq(_T_2340, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2342 = and(_T_2338, _T_2341) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[5] <= _T_2342 @[POSIT_Locality.scala 163:68]
    fetchOffSet[5] <= rb.entries[1].request.operands[2].value @[POSIT_Locality.scala 168:53]
    node _T_2343 = bits(rb.entries[2].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2344 = eq(_T_2343, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2345 = and(rb.entries[2].valid, _T_2344) @[POSIT_Locality.scala 163:91]
    node _T_2346 = bits(rb.entries[2].request.operands[0].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2347 = and(_T_2346, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2348 = eq(_T_2347, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2349 = and(_T_2345, _T_2348) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[6] <= _T_2349 @[POSIT_Locality.scala 163:68]
    fetchOffSet[6] <= rb.entries[2].request.operands[0].value @[POSIT_Locality.scala 168:53]
    node _T_2350 = bits(rb.entries[2].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2351 = eq(_T_2350, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2352 = and(rb.entries[2].valid, _T_2351) @[POSIT_Locality.scala 163:91]
    node _T_2353 = bits(rb.entries[2].request.operands[1].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2354 = and(_T_2353, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2355 = eq(_T_2354, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2356 = and(_T_2352, _T_2355) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[7] <= _T_2356 @[POSIT_Locality.scala 163:68]
    fetchOffSet[7] <= rb.entries[2].request.operands[1].value @[POSIT_Locality.scala 168:53]
    node _T_2357 = bits(rb.entries[2].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2358 = eq(_T_2357, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2359 = and(rb.entries[2].valid, _T_2358) @[POSIT_Locality.scala 163:91]
    node _T_2360 = bits(rb.entries[2].request.operands[2].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2361 = and(_T_2360, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2362 = eq(_T_2361, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2363 = and(_T_2359, _T_2362) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[8] <= _T_2363 @[POSIT_Locality.scala 163:68]
    fetchOffSet[8] <= rb.entries[2].request.operands[2].value @[POSIT_Locality.scala 168:53]
    node _T_2364 = bits(rb.entries[3].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2365 = eq(_T_2364, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2366 = and(rb.entries[3].valid, _T_2365) @[POSIT_Locality.scala 163:91]
    node _T_2367 = bits(rb.entries[3].request.operands[0].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2368 = and(_T_2367, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2369 = eq(_T_2368, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2370 = and(_T_2366, _T_2369) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[9] <= _T_2370 @[POSIT_Locality.scala 163:68]
    fetchOffSet[9] <= rb.entries[3].request.operands[0].value @[POSIT_Locality.scala 168:53]
    node _T_2371 = bits(rb.entries[3].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2372 = eq(_T_2371, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2373 = and(rb.entries[3].valid, _T_2372) @[POSIT_Locality.scala 163:91]
    node _T_2374 = bits(rb.entries[3].request.operands[1].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2375 = and(_T_2374, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2376 = eq(_T_2375, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2377 = and(_T_2373, _T_2376) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[10] <= _T_2377 @[POSIT_Locality.scala 163:68]
    fetchOffSet[10] <= rb.entries[3].request.operands[1].value @[POSIT_Locality.scala 168:53]
    node _T_2378 = bits(rb.entries[3].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2379 = eq(_T_2378, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2380 = and(rb.entries[3].valid, _T_2379) @[POSIT_Locality.scala 163:91]
    node _T_2381 = bits(rb.entries[3].request.operands[2].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2382 = and(_T_2381, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2383 = eq(_T_2382, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2384 = and(_T_2380, _T_2383) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[11] <= _T_2384 @[POSIT_Locality.scala 163:68]
    fetchOffSet[11] <= rb.entries[3].request.operands[2].value @[POSIT_Locality.scala 168:53]
    node _T_2385 = bits(rb.entries[4].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2386 = eq(_T_2385, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2387 = and(rb.entries[4].valid, _T_2386) @[POSIT_Locality.scala 163:91]
    node _T_2388 = bits(rb.entries[4].request.operands[0].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2389 = and(_T_2388, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2390 = eq(_T_2389, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2391 = and(_T_2387, _T_2390) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[12] <= _T_2391 @[POSIT_Locality.scala 163:68]
    fetchOffSet[12] <= rb.entries[4].request.operands[0].value @[POSIT_Locality.scala 168:53]
    node _T_2392 = bits(rb.entries[4].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2393 = eq(_T_2392, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2394 = and(rb.entries[4].valid, _T_2393) @[POSIT_Locality.scala 163:91]
    node _T_2395 = bits(rb.entries[4].request.operands[1].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2396 = and(_T_2395, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2397 = eq(_T_2396, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2398 = and(_T_2394, _T_2397) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[13] <= _T_2398 @[POSIT_Locality.scala 163:68]
    fetchOffSet[13] <= rb.entries[4].request.operands[1].value @[POSIT_Locality.scala 168:53]
    node _T_2399 = bits(rb.entries[4].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2400 = eq(_T_2399, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2401 = and(rb.entries[4].valid, _T_2400) @[POSIT_Locality.scala 163:91]
    node _T_2402 = bits(rb.entries[4].request.operands[2].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2403 = and(_T_2402, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2404 = eq(_T_2403, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2405 = and(_T_2401, _T_2404) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[14] <= _T_2405 @[POSIT_Locality.scala 163:68]
    fetchOffSet[14] <= rb.entries[4].request.operands[2].value @[POSIT_Locality.scala 168:53]
    node _T_2406 = bits(rb.entries[5].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2407 = eq(_T_2406, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2408 = and(rb.entries[5].valid, _T_2407) @[POSIT_Locality.scala 163:91]
    node _T_2409 = bits(rb.entries[5].request.operands[0].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2410 = and(_T_2409, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2411 = eq(_T_2410, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2412 = and(_T_2408, _T_2411) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[15] <= _T_2412 @[POSIT_Locality.scala 163:68]
    fetchOffSet[15] <= rb.entries[5].request.operands[0].value @[POSIT_Locality.scala 168:53]
    node _T_2413 = bits(rb.entries[5].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2414 = eq(_T_2413, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2415 = and(rb.entries[5].valid, _T_2414) @[POSIT_Locality.scala 163:91]
    node _T_2416 = bits(rb.entries[5].request.operands[1].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2417 = and(_T_2416, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2418 = eq(_T_2417, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2419 = and(_T_2415, _T_2418) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[16] <= _T_2419 @[POSIT_Locality.scala 163:68]
    fetchOffSet[16] <= rb.entries[5].request.operands[1].value @[POSIT_Locality.scala 168:53]
    node _T_2420 = bits(rb.entries[5].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2421 = eq(_T_2420, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2422 = and(rb.entries[5].valid, _T_2421) @[POSIT_Locality.scala 163:91]
    node _T_2423 = bits(rb.entries[5].request.operands[2].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2424 = and(_T_2423, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2425 = eq(_T_2424, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2426 = and(_T_2422, _T_2425) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[17] <= _T_2426 @[POSIT_Locality.scala 163:68]
    fetchOffSet[17] <= rb.entries[5].request.operands[2].value @[POSIT_Locality.scala 168:53]
    node _T_2427 = bits(rb.entries[6].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2428 = eq(_T_2427, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2429 = and(rb.entries[6].valid, _T_2428) @[POSIT_Locality.scala 163:91]
    node _T_2430 = bits(rb.entries[6].request.operands[0].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2431 = and(_T_2430, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2432 = eq(_T_2431, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2433 = and(_T_2429, _T_2432) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[18] <= _T_2433 @[POSIT_Locality.scala 163:68]
    fetchOffSet[18] <= rb.entries[6].request.operands[0].value @[POSIT_Locality.scala 168:53]
    node _T_2434 = bits(rb.entries[6].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2435 = eq(_T_2434, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2436 = and(rb.entries[6].valid, _T_2435) @[POSIT_Locality.scala 163:91]
    node _T_2437 = bits(rb.entries[6].request.operands[1].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2438 = and(_T_2437, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2439 = eq(_T_2438, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2440 = and(_T_2436, _T_2439) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[19] <= _T_2440 @[POSIT_Locality.scala 163:68]
    fetchOffSet[19] <= rb.entries[6].request.operands[1].value @[POSIT_Locality.scala 168:53]
    node _T_2441 = bits(rb.entries[6].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2442 = eq(_T_2441, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2443 = and(rb.entries[6].valid, _T_2442) @[POSIT_Locality.scala 163:91]
    node _T_2444 = bits(rb.entries[6].request.operands[2].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2445 = and(_T_2444, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2446 = eq(_T_2445, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2447 = and(_T_2443, _T_2446) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[20] <= _T_2447 @[POSIT_Locality.scala 163:68]
    fetchOffSet[20] <= rb.entries[6].request.operands[2].value @[POSIT_Locality.scala 168:53]
    node _T_2448 = bits(rb.entries[7].request.operands[0].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2449 = eq(_T_2448, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2450 = and(rb.entries[7].valid, _T_2449) @[POSIT_Locality.scala 163:91]
    node _T_2451 = bits(rb.entries[7].request.operands[0].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2452 = and(_T_2451, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2453 = eq(_T_2452, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2454 = and(_T_2450, _T_2453) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[21] <= _T_2454 @[POSIT_Locality.scala 163:68]
    fetchOffSet[21] <= rb.entries[7].request.operands[0].value @[POSIT_Locality.scala 168:53]
    node _T_2455 = bits(rb.entries[7].request.operands[1].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2456 = eq(_T_2455, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2457 = and(rb.entries[7].valid, _T_2456) @[POSIT_Locality.scala 163:91]
    node _T_2458 = bits(rb.entries[7].request.operands[1].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2459 = and(_T_2458, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2460 = eq(_T_2459, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2461 = and(_T_2457, _T_2460) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[22] <= _T_2461 @[POSIT_Locality.scala 163:68]
    fetchOffSet[22] <= rb.entries[7].request.operands[1].value @[POSIT_Locality.scala 168:53]
    node _T_2462 = bits(rb.entries[7].request.operands[2].mode, 1, 1) @[POSIT_Locality.scala 163:133]
    node _T_2463 = eq(_T_2462, UInt<1>("h01")) @[POSIT_Locality.scala 163:137]
    node _T_2464 = and(rb.entries[7].valid, _T_2463) @[POSIT_Locality.scala 163:91]
    node _T_2465 = bits(rb.entries[7].request.operands[2].value, 13, 3) @[POSIT_Locality.scala 163:190]
    node _T_2466 = and(_T_2465, reg_infetch_cacheline) @[POSIT_Locality.scala 163:210]
    node _T_2467 = eq(_T_2466, UInt<1>("h00")) @[POSIT_Locality.scala 163:236]
    node _T_2468 = and(_T_2464, _T_2467) @[POSIT_Locality.scala 163:146]
    waitingToBeFetched[23] <= _T_2468 @[POSIT_Locality.scala 163:68]
    fetchOffSet[23] <= rb.entries[7].request.operands[2].value @[POSIT_Locality.scala 168:53]
    inst fetchArb of DispatchArbiter_1 @[POSIT_Locality.scala 172:30]
    fetchArb.clock <= clock
    fetchArb.reset <= reset
    node _T_2469 = cat(waitingToBeFetched[2], waitingToBeFetched[1]) @[POSIT_Locality.scala 173:52]
    node _T_2470 = cat(_T_2469, waitingToBeFetched[0]) @[POSIT_Locality.scala 173:52]
    node _T_2471 = cat(waitingToBeFetched[5], waitingToBeFetched[4]) @[POSIT_Locality.scala 173:52]
    node _T_2472 = cat(_T_2471, waitingToBeFetched[3]) @[POSIT_Locality.scala 173:52]
    node _T_2473 = cat(_T_2472, _T_2470) @[POSIT_Locality.scala 173:52]
    node _T_2474 = cat(waitingToBeFetched[8], waitingToBeFetched[7]) @[POSIT_Locality.scala 173:52]
    node _T_2475 = cat(_T_2474, waitingToBeFetched[6]) @[POSIT_Locality.scala 173:52]
    node _T_2476 = cat(waitingToBeFetched[11], waitingToBeFetched[10]) @[POSIT_Locality.scala 173:52]
    node _T_2477 = cat(_T_2476, waitingToBeFetched[9]) @[POSIT_Locality.scala 173:52]
    node _T_2478 = cat(_T_2477, _T_2475) @[POSIT_Locality.scala 173:52]
    node _T_2479 = cat(_T_2478, _T_2473) @[POSIT_Locality.scala 173:52]
    node _T_2480 = cat(waitingToBeFetched[14], waitingToBeFetched[13]) @[POSIT_Locality.scala 173:52]
    node _T_2481 = cat(_T_2480, waitingToBeFetched[12]) @[POSIT_Locality.scala 173:52]
    node _T_2482 = cat(waitingToBeFetched[17], waitingToBeFetched[16]) @[POSIT_Locality.scala 173:52]
    node _T_2483 = cat(_T_2482, waitingToBeFetched[15]) @[POSIT_Locality.scala 173:52]
    node _T_2484 = cat(_T_2483, _T_2481) @[POSIT_Locality.scala 173:52]
    node _T_2485 = cat(waitingToBeFetched[20], waitingToBeFetched[19]) @[POSIT_Locality.scala 173:52]
    node _T_2486 = cat(_T_2485, waitingToBeFetched[18]) @[POSIT_Locality.scala 173:52]
    node _T_2487 = cat(waitingToBeFetched[23], waitingToBeFetched[22]) @[POSIT_Locality.scala 173:52]
    node _T_2488 = cat(_T_2487, waitingToBeFetched[21]) @[POSIT_Locality.scala 173:52]
    node _T_2489 = cat(_T_2488, _T_2486) @[POSIT_Locality.scala 173:52]
    node _T_2490 = cat(_T_2489, _T_2484) @[POSIT_Locality.scala 173:52]
    node _T_2491 = cat(_T_2490, _T_2479) @[POSIT_Locality.scala 173:52]
    fetchArb.io.validity <= _T_2491 @[POSIT_Locality.scala 173:30]
    fetchArb.io.priority <= wbCountOn @[POSIT_Locality.scala 174:30]
    when fetchArb.io.hasChosen : @[POSIT_Locality.scala 181:36]
      node _T_2492 = bits(fetchOffSet[fetchArb.io.chosen], 13, 3) @[POSIT_Locality.scala 182:62]
      node _T_2493 = and(_T_2492, reg_infetch_cacheline) @[POSIT_Locality.scala 182:82]
      node _T_2494 = neq(_T_2493, UInt<1>("h00")) @[POSIT_Locality.scala 182:107]
      node _T_2495 = xor(UInt<1>("h01"), _T_2494) @[POSIT_Locality.scala 184:49]
      io.mem_read.req_valid <= _T_2495 @[POSIT_Locality.scala 184:39]
      node _T_2496 = bits(fetchOffSet[fetchArb.io.chosen], 13, 3) @[POSIT_Locality.scala 185:81]
      node _T_2497 = bits(_T_2496, 10, 8) @[OneHot.scala 30:18]
      node _T_2498 = bits(_T_2496, 7, 0) @[OneHot.scala 31:18]
      node _T_2499 = neq(_T_2497, UInt<1>("h00")) @[OneHot.scala 32:14]
      node _T_2500 = or(_T_2497, _T_2498) @[OneHot.scala 32:28]
      node _T_2501 = bits(_T_2500, 7, 4) @[OneHot.scala 30:18]
      node _T_2502 = bits(_T_2500, 3, 0) @[OneHot.scala 31:18]
      node _T_2503 = neq(_T_2501, UInt<1>("h00")) @[OneHot.scala 32:14]
      node _T_2504 = or(_T_2501, _T_2502) @[OneHot.scala 32:28]
      node _T_2505 = bits(_T_2504, 3, 2) @[OneHot.scala 30:18]
      node _T_2506 = bits(_T_2504, 1, 0) @[OneHot.scala 31:18]
      node _T_2507 = neq(_T_2505, UInt<1>("h00")) @[OneHot.scala 32:14]
      node _T_2508 = or(_T_2505, _T_2506) @[OneHot.scala 32:28]
      node _T_2509 = bits(_T_2508, 1, 1) @[CircuitMath.scala 30:8]
      node _T_2510 = cat(_T_2507, _T_2509) @[Cat.scala 30:58]
      node _T_2511 = cat(_T_2503, _T_2510) @[Cat.scala 30:58]
      node _T_2512 = cat(_T_2499, _T_2511) @[Cat.scala 30:58]
      io.mem_read.req_addr <= _T_2512 @[POSIT_Locality.scala 185:38]
      node _T_2513 = bits(fetchOffSet[fetchArb.io.chosen], 13, 0) @[POSIT_Locality.scala 186:137]
      io.mem_read.req_tag <= _T_2513 @[POSIT_Locality.scala 187:37]
      node _T_2514 = bits(reset, 0, 0) @[POSIT_Locality.scala 188:23]
      node _T_2515 = eq(_T_2514, UInt<1>("h00")) @[POSIT_Locality.scala 188:23]
      when _T_2515 : @[POSIT_Locality.scala 188:23]
        printf(clock, UInt<1>(1), "chosen: %d\n", fetchArb.io.chosen) @[POSIT_Locality.scala 188:23]
        skip @[POSIT_Locality.scala 188:23]
      node _T_2516 = bits(fetchOffSet[fetchArb.io.chosen], 13, 3) @[POSIT_Locality.scala 189:122]
      node _T_2517 = bits(reset, 0, 0) @[POSIT_Locality.scala 189:23]
      node _T_2518 = eq(_T_2517, UInt<1>("h00")) @[POSIT_Locality.scala 189:23]
      when _T_2518 : @[POSIT_Locality.scala 189:23]
        printf(clock, UInt<1>(1), "fetchoffset: %b, subfield: %b\n", fetchOffSet[fetchArb.io.chosen], _T_2516) @[POSIT_Locality.scala 189:23]
        skip @[POSIT_Locality.scala 189:23]
      node _T_2519 = bits(reset, 0, 0) @[POSIT_Locality.scala 190:23]
      node _T_2520 = eq(_T_2519, UInt<1>("h00")) @[POSIT_Locality.scala 190:23]
      when _T_2520 : @[POSIT_Locality.scala 190:23]
        printf(clock, UInt<1>(1), "io.mem_read.req_addr: %b\n", io.mem_read.req_addr) @[POSIT_Locality.scala 190:23]
        skip @[POSIT_Locality.scala 190:23]
      node _T_2521 = bits(reset, 0, 0) @[POSIT_Locality.scala 191:23]
      node _T_2522 = eq(_T_2521, UInt<1>("h00")) @[POSIT_Locality.scala 191:23]
      when _T_2522 : @[POSIT_Locality.scala 191:23]
        printf(clock, UInt<1>(1), "filter: %b\n", _T_2494) @[POSIT_Locality.scala 191:23]
        skip @[POSIT_Locality.scala 191:23]
      skip @[POSIT_Locality.scala 181:36]
    else : @[POSIT_Locality.scala 193:20]
      io.mem_read.req_valid <= UInt<1>("h00") @[POSIT_Locality.scala 195:39]
      node _T_2523 = bits(fetchOffSet[fetchArb.io.chosen], 13, 3) @[POSIT_Locality.scala 196:81]
      node _T_2524 = bits(_T_2523, 10, 8) @[OneHot.scala 30:18]
      node _T_2525 = bits(_T_2523, 7, 0) @[OneHot.scala 31:18]
      node _T_2526 = neq(_T_2524, UInt<1>("h00")) @[OneHot.scala 32:14]
      node _T_2527 = or(_T_2524, _T_2525) @[OneHot.scala 32:28]
      node _T_2528 = bits(_T_2527, 7, 4) @[OneHot.scala 30:18]
      node _T_2529 = bits(_T_2527, 3, 0) @[OneHot.scala 31:18]
      node _T_2530 = neq(_T_2528, UInt<1>("h00")) @[OneHot.scala 32:14]
      node _T_2531 = or(_T_2528, _T_2529) @[OneHot.scala 32:28]
      node _T_2532 = bits(_T_2531, 3, 2) @[OneHot.scala 30:18]
      node _T_2533 = bits(_T_2531, 1, 0) @[OneHot.scala 31:18]
      node _T_2534 = neq(_T_2532, UInt<1>("h00")) @[OneHot.scala 32:14]
      node _T_2535 = or(_T_2532, _T_2533) @[OneHot.scala 32:28]
      node _T_2536 = bits(_T_2535, 1, 1) @[CircuitMath.scala 30:8]
      node _T_2537 = cat(_T_2534, _T_2536) @[Cat.scala 30:58]
      node _T_2538 = cat(_T_2530, _T_2537) @[Cat.scala 30:58]
      node _T_2539 = cat(_T_2526, _T_2538) @[Cat.scala 30:58]
      io.mem_read.req_addr <= _T_2539 @[POSIT_Locality.scala 196:38]
      io.mem_read.req_tag <= UInt<1>("h00") @[POSIT_Locality.scala 197:37]
      skip @[POSIT_Locality.scala 193:20]
    node _T_2540 = bits(io.mem_read.resp_tag, 13, 3) @[POSIT_Locality.scala 226:78]
    node _T_2541 = or(reg_infetch_cacheline, _T_2540) @[POSIT_Locality.scala 226:56]
    node _T_2542 = bits(io.mem_read.resp_tag, 13, 3) @[POSIT_Locality.scala 226:121]
    node _T_2543 = xor(_T_2541, _T_2542) @[POSIT_Locality.scala 226:99]
    node _T_2544 = bits(io.mem_read.req_tag, 13, 3) @[POSIT_Locality.scala 227:74]
    node _T_2545 = or(reg_infetch_cacheline, _T_2544) @[POSIT_Locality.scala 227:53]
    node _T_2546 = bits(io.mem_read.req_tag, 13, 3) @[POSIT_Locality.scala 228:73]
    node _T_2547 = or(_T_2543, _T_2546) @[POSIT_Locality.scala 228:52]
    when io.mem_read.resp_valid : @[POSIT_Locality.scala 229:45]
      when io.mem_read.req_valid : @[POSIT_Locality.scala 230:52]
        reg_infetch_cacheline <= _T_2547 @[POSIT_Locality.scala 231:55]
        skip @[POSIT_Locality.scala 230:52]
      else : @[POSIT_Locality.scala 232:36]
        reg_infetch_cacheline <= _T_2543 @[POSIT_Locality.scala 233:55]
        skip @[POSIT_Locality.scala 232:36]
      skip @[POSIT_Locality.scala 229:45]
    else : @[POSIT_Locality.scala 235:28]
      when io.mem_read.req_valid : @[POSIT_Locality.scala 236:52]
        reg_infetch_cacheline <= _T_2545 @[POSIT_Locality.scala 237:55]
        skip @[POSIT_Locality.scala 236:52]
      skip @[POSIT_Locality.scala 235:28]
    node _T_2548 = or(io.mem_read.req_valid, io.mem_read.resp_valid) @[POSIT_Locality.scala 242:44]
    when _T_2548 : @[POSIT_Locality.scala 242:69]
      node _T_2549 = bits(reset, 0, 0) @[POSIT_Locality.scala 243:31]
      node _T_2550 = eq(_T_2549, UInt<1>("h00")) @[POSIT_Locality.scala 243:31]
      when _T_2550 : @[POSIT_Locality.scala 243:31]
        printf(clock, UInt<1>(1), "\t-mem_read:\n") @[POSIT_Locality.scala 243:31]
        skip @[POSIT_Locality.scala 243:31]
      node _T_2551 = bits(reset, 0, 0) @[POSIT_Locality.scala 244:31]
      node _T_2552 = eq(_T_2551, UInt<1>("h00")) @[POSIT_Locality.scala 244:31]
      when _T_2552 : @[POSIT_Locality.scala 244:31]
        printf(clock, UInt<1>(1), "\t\t-req_valid: %b\n", io.mem_read.req_valid) @[POSIT_Locality.scala 244:31]
        skip @[POSIT_Locality.scala 244:31]
      node _T_2553 = bits(reset, 0, 0) @[POSIT_Locality.scala 245:31]
      node _T_2554 = eq(_T_2553, UInt<1>("h00")) @[POSIT_Locality.scala 245:31]
      when _T_2554 : @[POSIT_Locality.scala 245:31]
        printf(clock, UInt<1>(1), "\t\t-req_addr: %x\n", io.mem_read.req_addr) @[POSIT_Locality.scala 245:31]
        skip @[POSIT_Locality.scala 245:31]
      node _T_2555 = bits(reset, 0, 0) @[POSIT_Locality.scala 246:31]
      node _T_2556 = eq(_T_2555, UInt<1>("h00")) @[POSIT_Locality.scala 246:31]
      when _T_2556 : @[POSIT_Locality.scala 246:31]
        printf(clock, UInt<1>(1), "\t\t-resp_valid: %b\n", io.mem_read.resp_valid) @[POSIT_Locality.scala 246:31]
        skip @[POSIT_Locality.scala 246:31]
      node _T_2557 = bits(reset, 0, 0) @[POSIT_Locality.scala 247:31]
      node _T_2558 = eq(_T_2557, UInt<1>("h00")) @[POSIT_Locality.scala 247:31]
      when _T_2558 : @[POSIT_Locality.scala 247:31]
        printf(clock, UInt<1>(1), "\t\t-data: %x\n", io.mem_read.data) @[POSIT_Locality.scala 247:31]
        skip @[POSIT_Locality.scala 247:31]
      node _T_2559 = bits(reset, 0, 0) @[POSIT_Locality.scala 248:31]
      node _T_2560 = eq(_T_2559, UInt<1>("h00")) @[POSIT_Locality.scala 248:31]
      when _T_2560 : @[POSIT_Locality.scala 248:31]
        printf(clock, UInt<1>(1), "\t\t-resp_tag: %x\n", io.mem_read.resp_tag) @[POSIT_Locality.scala 248:31]
        skip @[POSIT_Locality.scala 248:31]
      skip @[POSIT_Locality.scala 242:69]
    when io.mem_write.valid : @[POSIT_Locality.scala 250:41]
      node _T_2561 = bits(reset, 0, 0) @[POSIT_Locality.scala 251:31]
      node _T_2562 = eq(_T_2561, UInt<1>("h00")) @[POSIT_Locality.scala 251:31]
      when _T_2562 : @[POSIT_Locality.scala 251:31]
        printf(clock, UInt<1>(1), "\t-mem_write:\n") @[POSIT_Locality.scala 251:31]
        skip @[POSIT_Locality.scala 251:31]
      node _T_2563 = bits(reset, 0, 0) @[POSIT_Locality.scala 252:31]
      node _T_2564 = eq(_T_2563, UInt<1>("h00")) @[POSIT_Locality.scala 252:31]
      when _T_2564 : @[POSIT_Locality.scala 252:31]
        printf(clock, UInt<1>(1), "\t\t-valid: %b\n", io.mem_write.valid) @[POSIT_Locality.scala 252:31]
        skip @[POSIT_Locality.scala 252:31]
      node _T_2565 = bits(reset, 0, 0) @[POSIT_Locality.scala 253:31]
      node _T_2566 = eq(_T_2565, UInt<1>("h00")) @[POSIT_Locality.scala 253:31]
      when _T_2566 : @[POSIT_Locality.scala 253:31]
        printf(clock, UInt<1>(1), "\t\t-ready: %b\n", io.mem_write.ready) @[POSIT_Locality.scala 253:31]
        skip @[POSIT_Locality.scala 253:31]
      node _T_2567 = bits(reset, 0, 0) @[POSIT_Locality.scala 254:31]
      node _T_2568 = eq(_T_2567, UInt<1>("h00")) @[POSIT_Locality.scala 254:31]
      when _T_2568 : @[POSIT_Locality.scala 254:31]
        printf(clock, UInt<1>(1), "\t\t-bits:\n") @[POSIT_Locality.scala 254:31]
        skip @[POSIT_Locality.scala 254:31]
      node _T_2569 = bits(reset, 0, 0) @[POSIT_Locality.scala 255:31]
      node _T_2570 = eq(_T_2569, UInt<1>("h00")) @[POSIT_Locality.scala 255:31]
      when _T_2570 : @[POSIT_Locality.scala 255:31]
        printf(clock, UInt<1>(1), "\t\t\t-wr_addr: %x\n", io.mem_write.bits.wr_addr) @[POSIT_Locality.scala 255:31]
        skip @[POSIT_Locality.scala 255:31]
      node _T_2571 = bits(reset, 0, 0) @[POSIT_Locality.scala 256:31]
      node _T_2572 = eq(_T_2571, UInt<1>("h00")) @[POSIT_Locality.scala 256:31]
      when _T_2572 : @[POSIT_Locality.scala 256:31]
        printf(clock, UInt<1>(1), "\t\t\t-result: \n") @[POSIT_Locality.scala 256:31]
        skip @[POSIT_Locality.scala 256:31]
      node _T_2573 = bits(reset, 0, 0) @[POSIT_Locality.scala 257:31]
      node _T_2574 = eq(_T_2573, UInt<1>("h00")) @[POSIT_Locality.scala 257:31]
      when _T_2574 : @[POSIT_Locality.scala 257:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-isZero: %b\n", io.mem_write.bits.result.isZero) @[POSIT_Locality.scala 257:31]
        skip @[POSIT_Locality.scala 257:31]
      node _T_2575 = bits(reset, 0, 0) @[POSIT_Locality.scala 258:31]
      node _T_2576 = eq(_T_2575, UInt<1>("h00")) @[POSIT_Locality.scala 258:31]
      when _T_2576 : @[POSIT_Locality.scala 258:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-isNaR: %b\n", io.mem_write.bits.result.isNaR) @[POSIT_Locality.scala 258:31]
        skip @[POSIT_Locality.scala 258:31]
      node _T_2577 = bits(reset, 0, 0) @[POSIT_Locality.scala 259:31]
      node _T_2578 = eq(_T_2577, UInt<1>("h00")) @[POSIT_Locality.scala 259:31]
      when _T_2578 : @[POSIT_Locality.scala 259:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-lt: %b\n", io.mem_write.bits.result.lt) @[POSIT_Locality.scala 259:31]
        skip @[POSIT_Locality.scala 259:31]
      node _T_2579 = bits(reset, 0, 0) @[POSIT_Locality.scala 260:31]
      node _T_2580 = eq(_T_2579, UInt<1>("h00")) @[POSIT_Locality.scala 260:31]
      when _T_2580 : @[POSIT_Locality.scala 260:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-eq: %b\n", io.mem_write.bits.result.eq) @[POSIT_Locality.scala 260:31]
        skip @[POSIT_Locality.scala 260:31]
      node _T_2581 = bits(reset, 0, 0) @[POSIT_Locality.scala 261:31]
      node _T_2582 = eq(_T_2581, UInt<1>("h00")) @[POSIT_Locality.scala 261:31]
      when _T_2582 : @[POSIT_Locality.scala 261:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-gt: %b\n", io.mem_write.bits.result.gt) @[POSIT_Locality.scala 261:31]
        skip @[POSIT_Locality.scala 261:31]
      node _T_2583 = bits(reset, 0, 0) @[POSIT_Locality.scala 262:31]
      node _T_2584 = eq(_T_2583, UInt<1>("h00")) @[POSIT_Locality.scala 262:31]
      when _T_2584 : @[POSIT_Locality.scala 262:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-exceptions: %x\n", io.mem_write.bits.result.exceptions) @[POSIT_Locality.scala 262:31]
        skip @[POSIT_Locality.scala 262:31]
      node _T_2585 = bits(reset, 0, 0) @[POSIT_Locality.scala 263:31]
      node _T_2586 = eq(_T_2585, UInt<1>("h00")) @[POSIT_Locality.scala 263:31]
      when _T_2586 : @[POSIT_Locality.scala 263:31]
        printf(clock, UInt<1>(1), "\t\t\t\t-out: %b\n", io.mem_write.bits.result.out) @[POSIT_Locality.scala 263:31]
        skip @[POSIT_Locality.scala 263:31]
      skip @[POSIT_Locality.scala 250:41]
    node _T_2587 = or(io.request.valid, io.mem_write.valid) @[POSIT_Locality.scala 266:39]
    node _T_2588 = or(_T_2587, io.mem_read.req_valid) @[POSIT_Locality.scala 266:61]
    node _T_2589 = or(_T_2588, pe.io.result.valid) @[POSIT_Locality.scala 266:86]
    when _T_2589 : @[POSIT_Locality.scala 266:108]
      node _T_2590 = bits(reset, 0, 0) @[POSIT_Locality.scala 267:31]
      node _T_2591 = eq(_T_2590, UInt<1>("h00")) @[POSIT_Locality.scala 267:31]
      when _T_2591 : @[POSIT_Locality.scala 267:31]
        printf(clock, UInt<1>(1), "top level io:\n") @[POSIT_Locality.scala 267:31]
        skip @[POSIT_Locality.scala 267:31]
      node _T_2592 = bits(reset, 0, 0) @[POSIT_Locality.scala 268:31]
      node _T_2593 = eq(_T_2592, UInt<1>("h00")) @[POSIT_Locality.scala 268:31]
      when _T_2593 : @[POSIT_Locality.scala 268:31]
        printf(clock, UInt<1>(1), "\t-request:\n") @[POSIT_Locality.scala 268:31]
        skip @[POSIT_Locality.scala 268:31]
      node _T_2594 = bits(reset, 0, 0) @[POSIT_Locality.scala 269:31]
      node _T_2595 = eq(_T_2594, UInt<1>("h00")) @[POSIT_Locality.scala 269:31]
      when _T_2595 : @[POSIT_Locality.scala 269:31]
        printf(clock, UInt<1>(1), "\t\t-valid: %b\n", io.request.valid) @[POSIT_Locality.scala 269:31]
        skip @[POSIT_Locality.scala 269:31]
      node _T_2596 = bits(reset, 0, 0) @[POSIT_Locality.scala 270:31]
      node _T_2597 = eq(_T_2596, UInt<1>("h00")) @[POSIT_Locality.scala 270:31]
      when _T_2597 : @[POSIT_Locality.scala 270:31]
        printf(clock, UInt<1>(1), "\t\t-ready: %b\n", io.request.ready) @[POSIT_Locality.scala 270:31]
        skip @[POSIT_Locality.scala 270:31]
      node _T_2598 = bits(reset, 0, 0) @[POSIT_Locality.scala 271:31]
      node _T_2599 = eq(_T_2598, UInt<1>("h00")) @[POSIT_Locality.scala 271:31]
      when _T_2599 : @[POSIT_Locality.scala 271:31]
        printf(clock, UInt<1>(1), "\t\t-bits:\n") @[POSIT_Locality.scala 271:31]
        skip @[POSIT_Locality.scala 271:31]
      node _T_2600 = bits(reset, 0, 0) @[POSIT_Locality.scala 272:31]
      node _T_2601 = eq(_T_2600, UInt<1>("h00")) @[POSIT_Locality.scala 272:31]
      when _T_2601 : @[POSIT_Locality.scala 272:31]
        printf(clock, UInt<1>(1), "\t\t\t-inst: %x\n", io.request.bits.inst) @[POSIT_Locality.scala 272:31]
        skip @[POSIT_Locality.scala 272:31]
      node _T_2602 = bits(reset, 0, 0) @[POSIT_Locality.scala 273:31]
      node _T_2603 = eq(_T_2602, UInt<1>("h00")) @[POSIT_Locality.scala 273:31]
      when _T_2603 : @[POSIT_Locality.scala 273:31]
        printf(clock, UInt<1>(1), "\t\t\t-mode: %x\n", io.request.bits.mode) @[POSIT_Locality.scala 273:31]
        skip @[POSIT_Locality.scala 273:31]
      node _T_2604 = bits(reset, 0, 0) @[POSIT_Locality.scala 274:31]
      node _T_2605 = eq(_T_2604, UInt<1>("h00")) @[POSIT_Locality.scala 274:31]
      when _T_2605 : @[POSIT_Locality.scala 274:31]
        printf(clock, UInt<1>(1), "\t\t\t-wr_addr: %x\n", io.request.bits.wr_addr) @[POSIT_Locality.scala 274:31]
        skip @[POSIT_Locality.scala 274:31]
      node _T_2606 = bits(reset, 0, 0) @[POSIT_Locality.scala 276:39]
      node _T_2607 = eq(_T_2606, UInt<1>("h00")) @[POSIT_Locality.scala 276:39]
      when _T_2607 : @[POSIT_Locality.scala 276:39]
        printf(clock, UInt<1>(1), "\t\t\t-operand0:\n") @[POSIT_Locality.scala 276:39]
        skip @[POSIT_Locality.scala 276:39]
      node _T_2608 = bits(reset, 0, 0) @[POSIT_Locality.scala 277:39]
      node _T_2609 = eq(_T_2608, UInt<1>("h00")) @[POSIT_Locality.scala 277:39]
      when _T_2609 : @[POSIT_Locality.scala 277:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-value: %x\n", io.request.bits.operands[0].value) @[POSIT_Locality.scala 277:39]
        skip @[POSIT_Locality.scala 277:39]
      node _T_2610 = bits(reset, 0, 0) @[POSIT_Locality.scala 278:39]
      node _T_2611 = eq(_T_2610, UInt<1>("h00")) @[POSIT_Locality.scala 278:39]
      when _T_2611 : @[POSIT_Locality.scala 278:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-mode: %x\n", io.request.bits.operands[0].mode) @[POSIT_Locality.scala 278:39]
        skip @[POSIT_Locality.scala 278:39]
      node _T_2612 = bits(reset, 0, 0) @[POSIT_Locality.scala 276:39]
      node _T_2613 = eq(_T_2612, UInt<1>("h00")) @[POSIT_Locality.scala 276:39]
      when _T_2613 : @[POSIT_Locality.scala 276:39]
        printf(clock, UInt<1>(1), "\t\t\t-operand1:\n") @[POSIT_Locality.scala 276:39]
        skip @[POSIT_Locality.scala 276:39]
      node _T_2614 = bits(reset, 0, 0) @[POSIT_Locality.scala 277:39]
      node _T_2615 = eq(_T_2614, UInt<1>("h00")) @[POSIT_Locality.scala 277:39]
      when _T_2615 : @[POSIT_Locality.scala 277:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-value: %x\n", io.request.bits.operands[1].value) @[POSIT_Locality.scala 277:39]
        skip @[POSIT_Locality.scala 277:39]
      node _T_2616 = bits(reset, 0, 0) @[POSIT_Locality.scala 278:39]
      node _T_2617 = eq(_T_2616, UInt<1>("h00")) @[POSIT_Locality.scala 278:39]
      when _T_2617 : @[POSIT_Locality.scala 278:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-mode: %x\n", io.request.bits.operands[1].mode) @[POSIT_Locality.scala 278:39]
        skip @[POSIT_Locality.scala 278:39]
      node _T_2618 = bits(reset, 0, 0) @[POSIT_Locality.scala 276:39]
      node _T_2619 = eq(_T_2618, UInt<1>("h00")) @[POSIT_Locality.scala 276:39]
      when _T_2619 : @[POSIT_Locality.scala 276:39]
        printf(clock, UInt<1>(1), "\t\t\t-operand2:\n") @[POSIT_Locality.scala 276:39]
        skip @[POSIT_Locality.scala 276:39]
      node _T_2620 = bits(reset, 0, 0) @[POSIT_Locality.scala 277:39]
      node _T_2621 = eq(_T_2620, UInt<1>("h00")) @[POSIT_Locality.scala 277:39]
      when _T_2621 : @[POSIT_Locality.scala 277:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-value: %x\n", io.request.bits.operands[2].value) @[POSIT_Locality.scala 277:39]
        skip @[POSIT_Locality.scala 277:39]
      node _T_2622 = bits(reset, 0, 0) @[POSIT_Locality.scala 278:39]
      node _T_2623 = eq(_T_2622, UInt<1>("h00")) @[POSIT_Locality.scala 278:39]
      when _T_2623 : @[POSIT_Locality.scala 278:39]
        printf(clock, UInt<1>(1), "\t\t\t\t-mode: %x\n", io.request.bits.operands[2].mode) @[POSIT_Locality.scala 278:39]
        skip @[POSIT_Locality.scala 278:39]
      node _T_2624 = bits(reset, 0, 0) @[POSIT_Locality.scala 281:31]
      node _T_2625 = eq(_T_2624, UInt<1>("h00")) @[POSIT_Locality.scala 281:31]
      when _T_2625 : @[POSIT_Locality.scala 281:31]
        printf(clock, UInt<1>(1), "\t-fetchArb:\n") @[POSIT_Locality.scala 281:31]
        skip @[POSIT_Locality.scala 281:31]
      node _T_2626 = bits(reset, 0, 0) @[POSIT_Locality.scala 282:31]
      node _T_2627 = eq(_T_2626, UInt<1>("h00")) @[POSIT_Locality.scala 282:31]
      when _T_2627 : @[POSIT_Locality.scala 282:31]
        printf(clock, UInt<1>(1), "\t\t-validity:%b\n", fetchArb.io.validity) @[POSIT_Locality.scala 282:31]
        skip @[POSIT_Locality.scala 282:31]
      node _T_2628 = bits(reset, 0, 0) @[POSIT_Locality.scala 283:31]
      node _T_2629 = eq(_T_2628, UInt<1>("h00")) @[POSIT_Locality.scala 283:31]
      when _T_2629 : @[POSIT_Locality.scala 283:31]
        printf(clock, UInt<1>(1), "\t\t-priority:%x\n", fetchArb.io.priority) @[POSIT_Locality.scala 283:31]
        skip @[POSIT_Locality.scala 283:31]
      node _T_2630 = bits(reset, 0, 0) @[POSIT_Locality.scala 284:31]
      node _T_2631 = eq(_T_2630, UInt<1>("h00")) @[POSIT_Locality.scala 284:31]
      when _T_2631 : @[POSIT_Locality.scala 284:31]
        printf(clock, UInt<1>(1), "\t\t-chosen:%x\n", fetchArb.io.chosen) @[POSIT_Locality.scala 284:31]
        skip @[POSIT_Locality.scala 284:31]
      node _T_2632 = bits(reset, 0, 0) @[POSIT_Locality.scala 285:31]
      node _T_2633 = eq(_T_2632, UInt<1>("h00")) @[POSIT_Locality.scala 285:31]
      when _T_2633 : @[POSIT_Locality.scala 285:31]
        printf(clock, UInt<1>(1), "\t\t-hasChosen:%b\n", fetchArb.io.hasChosen) @[POSIT_Locality.scala 285:31]
        skip @[POSIT_Locality.scala 285:31]
      node _T_2634 = bits(reset, 0, 0) @[POSIT_Locality.scala 287:31]
      node _T_2635 = eq(_T_2634, UInt<1>("h00")) @[POSIT_Locality.scala 287:31]
      when _T_2635 : @[POSIT_Locality.scala 287:31]
        printf(clock, UInt<1>(1), "\t-dispatchArb\n") @[POSIT_Locality.scala 287:31]
        skip @[POSIT_Locality.scala 287:31]
      node _T_2636 = bits(reset, 0, 0) @[POSIT_Locality.scala 288:31]
      node _T_2637 = eq(_T_2636, UInt<1>("h00")) @[POSIT_Locality.scala 288:31]
      when _T_2637 : @[POSIT_Locality.scala 288:31]
        printf(clock, UInt<1>(1), "\t\t-validity:%b\n", dispatchArb.io.validity) @[POSIT_Locality.scala 288:31]
        skip @[POSIT_Locality.scala 288:31]
      node _T_2638 = bits(reset, 0, 0) @[POSIT_Locality.scala 289:31]
      node _T_2639 = eq(_T_2638, UInt<1>("h00")) @[POSIT_Locality.scala 289:31]
      when _T_2639 : @[POSIT_Locality.scala 289:31]
        printf(clock, UInt<1>(1), "\t\t-priority:%x\n", dispatchArb.io.priority) @[POSIT_Locality.scala 289:31]
        skip @[POSIT_Locality.scala 289:31]
      node _T_2640 = bits(reset, 0, 0) @[POSIT_Locality.scala 290:31]
      node _T_2641 = eq(_T_2640, UInt<1>("h00")) @[POSIT_Locality.scala 290:31]
      when _T_2641 : @[POSIT_Locality.scala 290:31]
        printf(clock, UInt<1>(1), "\t\t-chosen:%x\n", dispatchArb.io.chosen) @[POSIT_Locality.scala 290:31]
        skip @[POSIT_Locality.scala 290:31]
      node _T_2642 = bits(reset, 0, 0) @[POSIT_Locality.scala 291:31]
      node _T_2643 = eq(_T_2642, UInt<1>("h00")) @[POSIT_Locality.scala 291:31]
      when _T_2643 : @[POSIT_Locality.scala 291:31]
        printf(clock, UInt<1>(1), "\t\t-hasChosen:%b\n", dispatchArb.io.hasChosen) @[POSIT_Locality.scala 291:31]
        skip @[POSIT_Locality.scala 291:31]
      node _T_2644 = bits(reset, 0, 0) @[POSIT_Locality.scala 293:31]
      node _T_2645 = eq(_T_2644, UInt<1>("h00")) @[POSIT_Locality.scala 293:31]
      when _T_2645 : @[POSIT_Locality.scala 293:31]
        printf(clock, UInt<1>(1), "rb data: \n") @[POSIT_Locality.scala 293:31]
        skip @[POSIT_Locality.scala 293:31]
      node _T_2646 = bits(reset, 0, 0) @[POSIT_Locality.scala 294:31]
      node _T_2647 = eq(_T_2646, UInt<1>("h00")) @[POSIT_Locality.scala 294:31]
      when _T_2647 : @[POSIT_Locality.scala 294:31]
        printf(clock, UInt<1>(1), "idx | completed | valid | dispatched | writtern | wr_addr| inst | mode | num0 | mode0 | infetch0 | num1 | mode1 | infetch1 | num2 | mode2 | infetch2 | isZero | isNar | out | lt | eq | gt | exceptions\n") @[POSIT_Locality.scala 294:31]
        skip @[POSIT_Locality.scala 294:31]
      node _T_2648 = bits(reset, 0, 0) @[POSIT_Locality.scala 301:39]
      node _T_2649 = eq(_T_2648, UInt<1>("h00")) @[POSIT_Locality.scala 301:39]
      when _T_2649 : @[POSIT_Locality.scala 301:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<1>("h00"), rb.entries[0].completed, rb.entries[0].valid, rb.entries[0].dispatched, rb.entries[0].written, rb.entries[0].wr_addr, rb.entries[0].request.inst, rb.entries[0].request.mode, rb.entries[0].request.operands[0].value, rb.entries[0].request.operands[0].mode, rb.entries[0].request.inFetch[0], rb.entries[0].request.operands[1].value, rb.entries[0].request.operands[1].mode, rb.entries[0].request.inFetch[1], rb.entries[0].request.operands[2].value, rb.entries[0].request.operands[2].mode, rb.entries[0].request.inFetch[2], rb.entries[0].result.isZero, rb.entries[0].result.isNaR, rb.entries[0].result.out, rb.entries[0].result.lt, rb.entries[0].result.eq, rb.entries[0].result.gt, rb.entries[0].result.exceptions) @[POSIT_Locality.scala 301:39]
        skip @[POSIT_Locality.scala 301:39]
      node _T_2650 = bits(reset, 0, 0) @[POSIT_Locality.scala 301:39]
      node _T_2651 = eq(_T_2650, UInt<1>("h00")) @[POSIT_Locality.scala 301:39]
      when _T_2651 : @[POSIT_Locality.scala 301:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<1>("h01"), rb.entries[1].completed, rb.entries[1].valid, rb.entries[1].dispatched, rb.entries[1].written, rb.entries[1].wr_addr, rb.entries[1].request.inst, rb.entries[1].request.mode, rb.entries[1].request.operands[0].value, rb.entries[1].request.operands[0].mode, rb.entries[1].request.inFetch[0], rb.entries[1].request.operands[1].value, rb.entries[1].request.operands[1].mode, rb.entries[1].request.inFetch[1], rb.entries[1].request.operands[2].value, rb.entries[1].request.operands[2].mode, rb.entries[1].request.inFetch[2], rb.entries[1].result.isZero, rb.entries[1].result.isNaR, rb.entries[1].result.out, rb.entries[1].result.lt, rb.entries[1].result.eq, rb.entries[1].result.gt, rb.entries[1].result.exceptions) @[POSIT_Locality.scala 301:39]
        skip @[POSIT_Locality.scala 301:39]
      node _T_2652 = bits(reset, 0, 0) @[POSIT_Locality.scala 301:39]
      node _T_2653 = eq(_T_2652, UInt<1>("h00")) @[POSIT_Locality.scala 301:39]
      when _T_2653 : @[POSIT_Locality.scala 301:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<2>("h02"), rb.entries[2].completed, rb.entries[2].valid, rb.entries[2].dispatched, rb.entries[2].written, rb.entries[2].wr_addr, rb.entries[2].request.inst, rb.entries[2].request.mode, rb.entries[2].request.operands[0].value, rb.entries[2].request.operands[0].mode, rb.entries[2].request.inFetch[0], rb.entries[2].request.operands[1].value, rb.entries[2].request.operands[1].mode, rb.entries[2].request.inFetch[1], rb.entries[2].request.operands[2].value, rb.entries[2].request.operands[2].mode, rb.entries[2].request.inFetch[2], rb.entries[2].result.isZero, rb.entries[2].result.isNaR, rb.entries[2].result.out, rb.entries[2].result.lt, rb.entries[2].result.eq, rb.entries[2].result.gt, rb.entries[2].result.exceptions) @[POSIT_Locality.scala 301:39]
        skip @[POSIT_Locality.scala 301:39]
      node _T_2654 = bits(reset, 0, 0) @[POSIT_Locality.scala 301:39]
      node _T_2655 = eq(_T_2654, UInt<1>("h00")) @[POSIT_Locality.scala 301:39]
      when _T_2655 : @[POSIT_Locality.scala 301:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<2>("h03"), rb.entries[3].completed, rb.entries[3].valid, rb.entries[3].dispatched, rb.entries[3].written, rb.entries[3].wr_addr, rb.entries[3].request.inst, rb.entries[3].request.mode, rb.entries[3].request.operands[0].value, rb.entries[3].request.operands[0].mode, rb.entries[3].request.inFetch[0], rb.entries[3].request.operands[1].value, rb.entries[3].request.operands[1].mode, rb.entries[3].request.inFetch[1], rb.entries[3].request.operands[2].value, rb.entries[3].request.operands[2].mode, rb.entries[3].request.inFetch[2], rb.entries[3].result.isZero, rb.entries[3].result.isNaR, rb.entries[3].result.out, rb.entries[3].result.lt, rb.entries[3].result.eq, rb.entries[3].result.gt, rb.entries[3].result.exceptions) @[POSIT_Locality.scala 301:39]
        skip @[POSIT_Locality.scala 301:39]
      node _T_2656 = bits(reset, 0, 0) @[POSIT_Locality.scala 301:39]
      node _T_2657 = eq(_T_2656, UInt<1>("h00")) @[POSIT_Locality.scala 301:39]
      when _T_2657 : @[POSIT_Locality.scala 301:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<3>("h04"), rb.entries[4].completed, rb.entries[4].valid, rb.entries[4].dispatched, rb.entries[4].written, rb.entries[4].wr_addr, rb.entries[4].request.inst, rb.entries[4].request.mode, rb.entries[4].request.operands[0].value, rb.entries[4].request.operands[0].mode, rb.entries[4].request.inFetch[0], rb.entries[4].request.operands[1].value, rb.entries[4].request.operands[1].mode, rb.entries[4].request.inFetch[1], rb.entries[4].request.operands[2].value, rb.entries[4].request.operands[2].mode, rb.entries[4].request.inFetch[2], rb.entries[4].result.isZero, rb.entries[4].result.isNaR, rb.entries[4].result.out, rb.entries[4].result.lt, rb.entries[4].result.eq, rb.entries[4].result.gt, rb.entries[4].result.exceptions) @[POSIT_Locality.scala 301:39]
        skip @[POSIT_Locality.scala 301:39]
      node _T_2658 = bits(reset, 0, 0) @[POSIT_Locality.scala 301:39]
      node _T_2659 = eq(_T_2658, UInt<1>("h00")) @[POSIT_Locality.scala 301:39]
      when _T_2659 : @[POSIT_Locality.scala 301:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<3>("h05"), rb.entries[5].completed, rb.entries[5].valid, rb.entries[5].dispatched, rb.entries[5].written, rb.entries[5].wr_addr, rb.entries[5].request.inst, rb.entries[5].request.mode, rb.entries[5].request.operands[0].value, rb.entries[5].request.operands[0].mode, rb.entries[5].request.inFetch[0], rb.entries[5].request.operands[1].value, rb.entries[5].request.operands[1].mode, rb.entries[5].request.inFetch[1], rb.entries[5].request.operands[2].value, rb.entries[5].request.operands[2].mode, rb.entries[5].request.inFetch[2], rb.entries[5].result.isZero, rb.entries[5].result.isNaR, rb.entries[5].result.out, rb.entries[5].result.lt, rb.entries[5].result.eq, rb.entries[5].result.gt, rb.entries[5].result.exceptions) @[POSIT_Locality.scala 301:39]
        skip @[POSIT_Locality.scala 301:39]
      node _T_2660 = bits(reset, 0, 0) @[POSIT_Locality.scala 301:39]
      node _T_2661 = eq(_T_2660, UInt<1>("h00")) @[POSIT_Locality.scala 301:39]
      when _T_2661 : @[POSIT_Locality.scala 301:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<3>("h06"), rb.entries[6].completed, rb.entries[6].valid, rb.entries[6].dispatched, rb.entries[6].written, rb.entries[6].wr_addr, rb.entries[6].request.inst, rb.entries[6].request.mode, rb.entries[6].request.operands[0].value, rb.entries[6].request.operands[0].mode, rb.entries[6].request.inFetch[0], rb.entries[6].request.operands[1].value, rb.entries[6].request.operands[1].mode, rb.entries[6].request.inFetch[1], rb.entries[6].request.operands[2].value, rb.entries[6].request.operands[2].mode, rb.entries[6].request.inFetch[2], rb.entries[6].result.isZero, rb.entries[6].result.isNaR, rb.entries[6].result.out, rb.entries[6].result.lt, rb.entries[6].result.eq, rb.entries[6].result.gt, rb.entries[6].result.exceptions) @[POSIT_Locality.scala 301:39]
        skip @[POSIT_Locality.scala 301:39]
      node _T_2662 = bits(reset, 0, 0) @[POSIT_Locality.scala 301:39]
      node _T_2663 = eq(_T_2662, UInt<1>("h00")) @[POSIT_Locality.scala 301:39]
      when _T_2663 : @[POSIT_Locality.scala 301:39]
        printf(clock, UInt<1>(1), "%d | %b | %b | %b | %b | %x | %x | %x | %x | %x | %b | %x | %x | %b | %x | %x | %b | %b | %b | %x | %b | %b | %b | %x\n", UInt<3>("h07"), rb.entries[7].completed, rb.entries[7].valid, rb.entries[7].dispatched, rb.entries[7].written, rb.entries[7].wr_addr, rb.entries[7].request.inst, rb.entries[7].request.mode, rb.entries[7].request.operands[0].value, rb.entries[7].request.operands[0].mode, rb.entries[7].request.inFetch[0], rb.entries[7].request.operands[1].value, rb.entries[7].request.operands[1].mode, rb.entries[7].request.inFetch[1], rb.entries[7].request.operands[2].value, rb.entries[7].request.operands[2].mode, rb.entries[7].request.inFetch[2], rb.entries[7].result.isZero, rb.entries[7].result.isNaR, rb.entries[7].result.out, rb.entries[7].result.lt, rb.entries[7].result.eq, rb.entries[7].result.gt, rb.entries[7].result.exceptions) @[POSIT_Locality.scala 301:39]
        skip @[POSIT_Locality.scala 301:39]
      node _T_2664 = bits(reset, 0, 0) @[POSIT_Locality.scala 307:31]
      node _T_2665 = eq(_T_2664, UInt<1>("h00")) @[POSIT_Locality.scala 307:31]
      when _T_2665 : @[POSIT_Locality.scala 307:31]
        printf(clock, UInt<1>(1), "reg_infetch_cacheline:%b\n", reg_infetch_cacheline) @[POSIT_Locality.scala 307:31]
        skip @[POSIT_Locality.scala 307:31]
      node _T_2666 = bits(reset, 0, 0) @[POSIT_Locality.scala 309:31]
      node _T_2667 = eq(_T_2666, UInt<1>("h00")) @[POSIT_Locality.scala 309:31]
      when _T_2667 : @[POSIT_Locality.scala 309:31]
        printf(clock, UInt<1>(1), "pe: \n") @[POSIT_Locality.scala 309:31]
        skip @[POSIT_Locality.scala 309:31]
      node _T_2668 = bits(reset, 0, 0) @[POSIT_Locality.scala 313:31]
      node _T_2669 = eq(_T_2668, UInt<1>("h00")) @[POSIT_Locality.scala 313:31]
      when _T_2669 : @[POSIT_Locality.scala 313:31]
        printf(clock, UInt<1>(1), "request: valid | ready | num 1 | num2 | num3 | inst | mode\n") @[POSIT_Locality.scala 313:31]
        skip @[POSIT_Locality.scala 313:31]
      node _T_2670 = bits(reset, 0, 0) @[POSIT_Locality.scala 314:31]
      node _T_2671 = eq(_T_2670, UInt<1>("h00")) @[POSIT_Locality.scala 314:31]
      when _T_2671 : @[POSIT_Locality.scala 314:31]
        printf(clock, UInt<1>(1), "\t %b | %b | %b | %b | %b | %x | %x\n", pe.io.request.valid, pe.io.request.ready, pe.io.request.bits.num1, pe.io.request.bits.num2, pe.io.request.bits.num3, pe.io.request.bits.inst, pe.io.request.bits.mode) @[POSIT_Locality.scala 314:31]
        skip @[POSIT_Locality.scala 314:31]
      node _T_2672 = bits(reset, 0, 0) @[POSIT_Locality.scala 315:31]
      node _T_2673 = eq(_T_2672, UInt<1>("h00")) @[POSIT_Locality.scala 315:31]
      when _T_2673 : @[POSIT_Locality.scala 315:31]
        printf(clock, UInt<1>(1), "result: valid | ready | isZero | isNar | out | lt | eq | gt | exceptions\n") @[POSIT_Locality.scala 315:31]
        skip @[POSIT_Locality.scala 315:31]
      node _T_2674 = bits(reset, 0, 0) @[POSIT_Locality.scala 317:31]
      node _T_2675 = eq(_T_2674, UInt<1>("h00")) @[POSIT_Locality.scala 317:31]
      when _T_2675 : @[POSIT_Locality.scala 317:31]
        printf(clock, UInt<1>(1), "\t %b | %b | %b | %b | %x | %b | %b | %b | %x\n", pe.io.result.valid, pe.io.result.ready, pe.io.result.bits.isZero, pe.io.result.bits.isNaR, pe.io.result.bits.out, pe.io.result.bits.lt, pe.io.result.bits.eq, pe.io.result.bits.gt, pe.io.result.bits.exceptions) @[POSIT_Locality.scala 317:31]
        skip @[POSIT_Locality.scala 317:31]
      skip @[POSIT_Locality.scala 266:108]
    
